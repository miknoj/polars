var searchIndex = new Map(JSON.parse('[\
["polars",{"t":"","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkIdIter","ChunkedArray","ChunkedArrayLayout","FAST_EXPLODE_LIST","Multi","MultiNoNull","SORTED_ASC","SORTED_DSC","Settings","Single","SingleNoNull","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add","add","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","all","all","all_kleene","amortized_iter","amortized_iter","amortized_iter_with_name","amortized_iter_with_name","any","any_kleene","append","apply","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_amortized_generic","apply_amortized_same_type","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values_generic","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arg_unique","arithmetic","as_array","as_binary","as_binary","as_list","as_ref","as_ref_dtype","as_string","as_string","binary_zip_and_apply_amortized","bitand","bitand","bitand","bitand","bitand_assign","bitor","bitor","bitor","bitor","bitor_assign","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","cast","cast","cast","cast","cast","cast","cast","cast","cast_and_apply_in_place","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","checked_div","checked_div_num","chunk_id","chunks","chunks_mut","clear","clone","clone","clone_into","clone_into","collect","comparison","complement","cont_slice","contains","data_views","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","difference","div","div","div","div","divide","drop","drop","drop","drop","dtype","empty","eq","equal","equal","equal","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","explode_and_offsets","explode_and_offsets","explode_and_offsets","extend","extend","fill_null_with_values","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","filter","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","for_each_amortized","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iterator_par","from_name","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_like","full_null_with_dtype","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_as_series","get_flags","get_inner","get_inner","get_object","get_object_unchecked","get_sorted_flag","get_unchecked","get_values_size","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples_perfect","gt","gt","gt","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","head","init","init","init","init_rand","inner_dtype","inner_dtype","insert","intersection","intersects","into","into","into","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_no_null_iter","into_series","into_series","into_time","is_all","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter","iter_names","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","max","max","max_as_series","max_as_series","max_as_series","max_as_series","mean","mean","median","median","median","median_as_series","median_as_series","median_as_series","min","min","min_as_series","min_as_series","min_as_series","min_as_series","min_max","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_unique","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","none_to_nan","not","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","object","offsets","offsets","offsets","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_as_series","prune_empty_chunks","quantile","quantile","quantile","quantile_as_series","quantile_as_series","quantile_as_series","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","rem","rem","rem","rem","remainder","remove","rename","reverse","reverse","reverse","reverse","reverse","reverse","reverse","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","scatter","scatter","scatter_single","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","scatter_with","set","set","set","set","set","set_fast_explode","set_inner_dtype","set_null_count","set_sorted_flag","set_sorted_flag","shift","shift","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shrink_to_fit","slice","sort","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","sort_with","std","std_as_series","std_as_series","std_as_series","sub","sub","sub","sub","sub","sub_assign","subtract","sum","sum","sum_as_series","sum_as_series","sum_as_series","sum_as_series","symmetric_difference","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_logical","to_ndarray","to_ndarray","to_owned","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","toggle","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_amortized_generic","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","type_id","union","unique","unique","unique","unique","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_as_series","var_as_series","var_as_series","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","width","with_chunk","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_option","append_option","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_value","append_value","append_value","append_value","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","fixed_size_list","from","from","from","from","from","from","from","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","init","init","init","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","into","into","into","into","list","new","new","new","new","new","new","new","new","new","new","new","new_with_values_type","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","StructIter","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","init","init","init","init","into","into","into","into","into_iter","into_iter","into_iter","into_iter","new","new","next","next","next","next","next_back","next_back","next_back","par","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","list","string","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","clone","clone_into","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Reinterpret","SlicedArray","Some","SortMultipleOptions","SortOptions","Zero","__clone_box","__clone_box","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast_unchecked","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","descending","descending","drop","drop","drop","eq","eq","eq","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","fmt","fmt","from","from","from","from","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","hash","hash","init","init","init","into","into","into","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","maintain_order","max","mean","median","min","min_max","multithreaded","multithreaded","n_unique","new","new","new_from_index","not_equal","not_equal_missing","nulls_last","nulls_last","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique","var","vzip","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_order_descending","with_order_descending","with_order_descendings","with_order_reversed","with_order_reversed","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_array","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","slice_sorted_non_null_and_offset","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_apply_fields","_can_fast_unique","_iter_struct_av","_materialize_struct_av","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","append","append","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_borrowed","as_date_iter","as_datetime_iter","as_ref","as_ref","as_ref_dtype","as_slice","as_time_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","build_local","call_categorical_merge_operation","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast_time_unit","cast_time_unit","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","chunks","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","days","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","drain_iter_and_finish","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field","field_by_name","fields","fields_mut","find","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_owned","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","full_null","full_null","get","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_categories","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_optional","get_rev_map","get_str","get_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash_impl","hour","hours","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_series","into_series","into_series","into_series","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_empty","is_empty","is_enum","is_enum","is_float","is_float","is_global","is_integer","is_integer","is_known","is_list","is_local","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter","iter_str","last","len","len","len","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","max_as_series","merge_dtypes","merge_map","microseconds","milliseconds","min_as_series","minute","minutes","month_end","month_end","month_start","month_start","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","name","name","name","name","nanosecond","nanoseconds","new","new","new","new","new","new","new","new","new","new","new","new","new","new","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","null_count","parse_from_str_slice","parse_from_str_slice","partial_cmp","partial_cmp","physical","precision","rechunk","ref_field","register_value","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","rename","round","round","rows_encode","same_src","scale","second","seconds","set_name","set_time_unit","set_time_unit","set_time_zone","size_hint","sort","sort_with","strftime","strftime","strftime","strict_cast","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","time_unit","time_unit","time_zone","to_arrow","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_enum","to_global","to_local","to_logical_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","total_null_count","truncate","truncate","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unnest","uses_lexical_ordering","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","eager","lazy","performance","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","constants","context","context_trace","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","feature_gated","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_warning_function","init","init","init","into","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","ArrowChunk","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","agg_chunks","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks_physical","lazy","max_horizontal","mean_horizontal","melt","melt2","min_horizontal","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice_par","sort","sort_in_place","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","unnest","upsample","upsample_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","MeltArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","id_vars","init","into","streamable","to_owned","try_from","try_into","type_id","value_name","value_vars","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Date","Datetime","Duration","Float32","Float32","Float64","Float64","Int16","Int16","Int32","Int32","Int64","Int64","Int8","Int8","Null","Null","Row","String","String","Struct","Time","UInt16","UInt16","UInt32","UInt32","UInt64","UInt64","UInt8","UInt8","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","Abs","Agg","AggExpr","AggGroups","AggregationContext","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Any","Any","Any","Any","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","Backward","BackwardFill","BatchedCsvReaderMmap","BatchedCsvReaderRead","BatchedParquetReader","Binary","Binary","Binary","Binary","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","BinaryExpr","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","Boolean","Boolean","Boolean","Boolean","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","Both","Bounds","BoundsIter","Brotli","BrotliLevel","C","Cache","Cast","CatIter","Categorical","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalType","Ceil","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","ColumnNotFound","Columns","Columns","CommentPrefix","ComputeError","ConcatExpr","Context","Count","Count","Cross","CrossJoin","CsvEncoding","CsvReader","CsvReaderOptions","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","DataPoint","DataType","Date","Date","Date","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","Datetime","DatetimeArgs","DatetimeChunked","DatetimeMethods","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dense","DfTake","Dictionary","Diff","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","Duration","Duration","Duration","Duration","DurationArgs","DurationChunked","DurationMethods","DurationType","DynArgs","DynamicGroupOptions","Earliest","Enum","Enum","Eq","EqValidity","Err","Exclude","Excluded","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","FieldRef","FieldsMapper","FieldsNameMapper","FileMetaData","FileMetaDataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","Filter","First","First","First","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float","Float16","Float32","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","Forward","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","GetAnyValue","GetOutput","Global","GlobalRevMapMerger","GroupBy","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","GtEq","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","HashMap","Higher","IDX_DTYPE","INTEGER_RE","IO","Idx","Idx","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","Implode","InProcessQuery","IndexOfSchema","IndexOrder","IndexToUsize","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8","Int8Chunked","Int8Type","Interpolate","InterpolationMethod","Interval","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLastDistinct","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","Item","Join","Join","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","Last","Last","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","Left","Left","Left","Left","Left","Left","LeftJoinIds","Len","Lexical","LhsNumOps","Linear","Linear","List","List","List","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","Literal","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","LowerBound","Lt","LtEq","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","Max","Max","Max","MaxBound","MaxHorizontal","Mean","Mean","Mean","MeanHorizontal","Median","Median","MeltArgs","Microsecond","Microseconds","Midpoint","Millisecond","Milliseconds","Min","Min","Min","Min","MinBound","MinHorizontal","Minus","Mode","Modulus","Monday","Multi","Multiply","NULL","NUnique","NUnique","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","Nanoseconds","Native","Nearest","Nearest","Nearest","Necessary","Negate","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","None","None","None","None","None","Not","NotEq","NotEqValidity","Nth","Null","Null","Null","Null","Null","Null","Null","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","Ok","One","OneToMany","OneToOne","Operator","OptState","Or","Ordinal","Out","OutOfBounds","Outer","Output","Over","OwnedBatchedCsvReader","OwnedBatchedCsvReaderMmap","OwnedObject","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","PartitionedAggregation","PathIterator","Physical","Physical","PhysicalExpr","PhysicalIoHelper","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","Plus","PolarsArray","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsMonthEnd","PolarsMonthStart","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PrimitiveChunkedBuilder","Quantile","Quantile","QuantileAggSeries","QuantileInterpolOptions","QuoteStyle","Raise","Raise","Random","Random","Range","Range","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Reshape","RevMapping","Reverse","Right","Right","Right","Right","Right","Rolling","RollingCovOptions","RollingExpr","RollingGroupOptions","RollingOptions","RollingOptionsFixedWindow","RollingOptionsImpl","RollingQuantileParams","RollingSeries","RollingVarParams","Round","RoundSF","RoundSeries","RowGroupIter","RowGroups","Saturday","Scalar","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaFieldNotFound","SchemaMismatch","SchemaRef","SearchSortedSide","Second","Select","Selector","SerReader","SerWriter","SerializeOptions","Series","Series","SeriesBinaryUdf","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SeriesUdf","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","Slice","Slice","Slice","SlicedArray","SlicedGroups","Snappy","Some","Some","Sort","Sort","SortBy","SortMultipleOptions","SortOptions","SpecialEq","StartBy","StaticArray","Std","Std","Str","StrCat","String","String","String","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StrptimeOptions","Struct","Struct","Struct","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructNameSpace","StructOwned","SubPlan","Sum","Sum","SumHorizontal","Sunday","TakeChunked","TemporalExpr","TemporalMethods","Ternary","Then","Thursday","Time","Time","Time","Time32","Time64","TimeChunked","TimeMethods","TimeType","TimeUnit","TimeZone","Timestamp","ToDummies","ToPhysical","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Tuesday","UInt16","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","UdfSchema","Uncompressed","Union","Union","UnionArgs","Unique","UniqueKeepStrategy","Unknown","Unknown","UnknownKind","UpperBound","UserDefinedFunction","Utf8","Utf8","Utf8View","ValueCounts","ValueIterT","ValueT","Var","Var","VarAggSeries","VecHash","Wednesday","When","Wildcard","Window","Window","WindowBound","WindowMapping","WindowType","Xor","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_outer_join","_create_left_df_from_slice","_finish_left_join","_join_suffix_name","_left_join_from_series","_outer_join_from_series","_sum_as_series","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_comment_prefix","_with_eager","abs","abs","add","add","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","all","all_horizontal","allocator","allow_parallel","allow_parallel","allows_predicate_pushdown","allows_projection_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","anonymous_scan","any","any_horizontal","append","append_null","append_null","append_opt_series","append_option","append_series","append_value","apply","apply","apply","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_min","arg_sort","arg_sort","arg_sort","arg_sort_by","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_where","args","arity","arr","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array","arrow_schema","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_expression","as_fd","as_list","as_partitioned_aggregator","as_ptr","as_raw_fd","as_ref","as_ref","as_ref_dtype","as_series","as_single_ptr","as_slice","as_stats_evaluator","as_stats_evaluator","as_string","as_struct","as_time","assume_init","assume_init","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","batched","batched","batched","batched_borrowed_mmap","batched_borrowed_read","batched_mmap","batched_read","binary","binary","binary_expr","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","boxed","builder","by","by","cache","cache","cache","cache","call","call","call_categorical_merge_operation","call_udf","call_udf","call_unchecked","cancel","cast","cast","cast","cast","cast","cast","cast_all","cast_unchecked","cat","cat","cause","cbrt","ceil","ceil","center","center","center","century","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","check_sorted","check_sorted","checked_div","checked_div","checked_div_num","chunk_lengths","chunkedarray","chunks","chunks_mut","clip","clip","clip_max","clip_max","clip_min","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_inner","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed_window","closed_window","closed_window","closed_window","cloud","cloud_options","cloud_options","cloud_options","cmp","cmp","coalesce","coalesce","coalesce","coalesce","coalesce_series","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","cols","column_order","column_orders","columns_to_dummies","comment_prefix","compare","compare","compression","compression","compute_schema","concat","concat","concat_expr","concat_impl","concat_impl","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","contains","contains","contains","contains","contains_chunked","contains_chunked","contains_literal","convert_inner_type","convert_to_unsigned_index","count","count","count_matches","count_matches_many","count_rows","create_enum_data_type","create_left_df_chunked","create_writer","create_writer","created_by","cross_join","cross_join","cross_join_dfs","cum_count","cum_count","cum_fold_exprs","cum_max","cum_max","cum_min","cum_min","cum_prod","cum_prod","cum_reduce_exprs","cum_sum","cum_sum","cumulative_eval","data_pagesize_limit","data_type","data_type","data_type","datatypes","date_format","date_ranges","datetime","datetime","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","day","day","day","days","days","days","days_only","ddof","ddof","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_arrays","default_join_ids","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","descending","descending","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","df","df","diff","diff","diff","distinct_count","div","div","divide","dot","dot","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","drop_nulls","dst_offset","dt","dt","dtype","dtype","dtype","dtype_col","dtype_cols","duration","eager","eager","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_data_type","ensure_is_constant_duration","eol_char","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","evaluate","evaluate_io","evaluate_on_groups","evaluate_partitioned","every","exact","exclude","exclude_dtype","execute","explain","explode","explode","explode","explode_and_offsets","expr","expr","extend_constant","extension","extension","extract","extract","extract_all","extract_all_many","extract_groups","fast_explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","field","field","field_by_index","field_by_name","fields","fields","file_caching","file_caching","fill_nan","fill_nan","fill_null","fill_null","fill_null","fill_null_with_strategy","fill_null_with_values","filter","filter","filter","filter","filter","finalize","find","find_chunked","find_literal","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","finish_with_scan_ops","finishes_this_batch","first","first","first","first","fixed_size_list","flatten","float_precision","float_sorted_arg_max","float_type","floor","floor","floor_div","floor_div_series","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","fmt_str","fn_params","fn_params","fn_params","fold_exprs","force_parallel","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","from_iter_trusted_length","from_iter_utf8_trusted_len","from_iter_values","from_par_iter","from_par_iter","from_path","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_type","from_vec","from_vec","from_zeroable_vec","full","full","full","full_null","full_null","fun","function_with_options","gather","gather","gather_every","ge","get","get","get","get","get","get","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_at_index","get_at_index_mut","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","get_field","get_field","get_fields","get_fields_lens","get_full","get_metadata","get_mut","get_mut_unchecked","get_names","get_names","get_names","get_object","get_object_chunked_unchecked","get_output","get_overlapping_bounds_iter","get_reader_bytes","get_schema","get_sequential_row_statistics","get_unchecked","get_unchecked","get_unchecked","glob","glob","glob","group_by","group_by_dynamic","group_by_dynamic","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","gt","gt","gt_eq","gt_eq","has_header","has_header","has_header","has_validity","has_validity","has_window_function","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash_join_inner","hash_join_outer","head","head","head","hex_decode","hex_encode","hive_options","hor_str_concat","hour","hour","hour","hour","hours","hours","how","how","id_vars","idx","ignore_errors","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","include_bom","include_boundaries","include_header","include_header","increment_strong_count","increment_strong_count_in","index_column","index_column","index_of","index_of","index_of","indexes_to_usizes","infer_file_schema","infer_schema","infer_schema_len","infer_schema_len","infer_schema_length","infer_schema_length","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_array","inner_join","inner_join","inner_mut","input_fields","insert_at_index","int_range","int_ranges","interpol","interpolate","interpolate","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_data","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_list_name_space","into_list_name_space","into_raw","into_series","into_series","into_thrift","into_vec","is_asof","is_between","is_between","is_cloud_url","is_compressed","is_constant_duration","is_empty","is_empty","is_empty","is_finished","is_finite","is_first_distinct","is_first_distinct","is_first_distinct","is_full_days","is_in","is_in","is_infinite","is_last_distinct","is_last_distinct","is_last_distinct","is_leap_year","is_leap_year","is_leap_year","is_literal","is_nan","is_not_nan","is_not_null","is_not_null","is_not_null","is_null","is_null","is_null","is_null","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_write_vectored","is_zero","iso_year","iso_year","iso_year","iter","iter","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","iter_paths","join","join","join","join","join_asof","join_asof_by","join_builder","join_literal","join_many","join_nulls","join_nulls","json_encode","keep","key_value_metadata","key_value_metadata","label","last","last","last","last","last","lazy","lazy","le","left_by","left_join","left_join","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","len","len","len","len","len","len","limit","limit","limit_reached","line_terminator","list","lit","lit","lit","lit","logical_and","logical_or","logical_plan","logical_plan","low_memory","low_memory","low_memory","low_memory","low_memory","low_memory","low_memory","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","lt","lt","lt_eq","lt_eq","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","materialize_empty_df","materialize_projection","max","max","max","max","max","max","max_as_series","max_as_series","max_value","mean","mean","mean","mean","mean","mean","median","median","median","median","median","median","median","median_as_series","median_as_series","melt","memory_map","memory_map","memory_mapped","merge","merge_dtypes","metadata","metadata","method","microsecond","microseconds","microseconds","millennium","milliseconds","milliseconds","min","min","min","min","min","min","min_as_series","min_as_series","min_max","min_periods","min_periods","min_periods","min_periods","min_value","minute","minute","minute","minute","minutes","minutes","mode","mode","month","month","month","month","month_end","month_start","months","months_only","mul","mul","mul","multiply","multithreaded","multithreaded","n_chunks","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_threads","n_threads","n_unique","n_unique","n_unique","n_unique","n_unique","name","name","name","name","name","name","nan_max","nan_min","nan_propagating_aggregate","nanosecond","nanosecond","nanosecond","nanoseconds","nanoseconds","nanoseconds","ne","needs_checks","neg","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_cyclic","new_empty","new_from_index","new_from_index","new_from_str","new_in","new_inserting_at_index","new_int_range","new_multi","new_null","new_paths","new_paths","new_single","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","next_batches","next_batches","next_batches","next_batches","next_batches","nodes","nodes_owned","not","not","not_equal","not_equal_missing","null","null","null","null","null_count","null_count","null_count","null_count","null_values","nulls_last","nulls_last","num_rows","num_rows","offset","offset","offset","offsets","on","optimize","options","or","ordinal","ordinal","ordinal_day","ordinal_year","otherwise","otherwise","outer_join","outer_join","output_schema","over","over_with_options","parallel","parallel","parallel","parse","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","parsed_int","partial_cmp","partial_cmp","path","path","path","paths","paths","paths","period","period","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","predicate_pushdown","predicate_pushdown","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_as_series","product","profile","projection_pushdown","projection_pushdown","provide","ptr_eq","quantile","quantile","quantile","quantile","quantile_as_series","quantile_as_series","quarter","quarter","quarter","queue","quote_char","quote_char","quote_style","raise_if_empty","raise_if_empty","raise_if_empty","rank","rank","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","rem","remainder","remove","rename","rename","rename","rename_fields","repeat","repeat_by","repeat_by","replace","replace","replace","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_time_zone","reshape","resolve_homedir","return_type","reverse","reverse","reverse","reverse","reverse","reverse","right_by","right_on","rolling","rolling","rolling","rolling_map","rolling_map","rolling_map","rolling_map_float","rolling_max","rolling_max","rolling_mean","rolling_mean","rolling_median","rolling_min","rolling_min","rolling_quantile","rolling_quantile","rolling_std","rolling_std","rolling_sum","rolling_sum","rolling_var","rolling_var","round","round","round","round_ms","round_ns","round_sig_figs","round_sig_figs","round_us","row_estimate","row_estimate","row_group_size","row_groups","row_index","row_index","row_index","row_index","row_index","row_index","rows_left","rows_right","same_type","same_type","sample_frac","sample_n","sample_size","scan","scan","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","scatter","scatter_single","scatter_with","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema_descr","schema_overwrite","search_sorted","second","second","second","second","seconds","seconds","seek","select","select_seq","separator","separator","serialize_options","series","set","set_dtype","set_dtype_at_index","set_low_memory","set_parallel","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_sorted_flag","set_validity","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_remove","shift_remove_index","shrink_dtype","shrink_to_fit","shrink_to_fit","shuffle","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_json","sink_parquet","skip_rows","skip_rows","skip_rows","skip_rows_after_header","slice","slice","slice","slice","slice","slice","slice","slice","slice_pushdown","slice_pushdown","slice_typed","slice_typed","slice_typed_unchecked","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","sort","sort","sort","sort","sort","sort","sort_by","sort_by_exprs","sort_with","sort_with","source","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","std","std","std","std","std","std_as_series","std_as_series","store","str","str_concat","str_head","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","streamable","streaming","streaming","strftime","strict","strict_cast","strings","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","strong_count","struct_","sub","sub","subtract","suffix","suffix","suffix","suffix","suffix_fields","sum","sum","sum","sum","sum","sum","sum_as_series","super_type","sync_update","tail","tail","tail","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked","take_validity","ternary_expr","then","then","time_format","time_ranges","time_unit","time_unit","time_zone","timestamp","to_alp","to_alp","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dot","to_dummies","to_dummies","to_field","to_field","to_integer","to_list","to_lowercase","to_lowercase","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_supertype","to_supertypes","to_titlecase","to_uppercase","to_uppercase","tolerance","tolerance_str","top_k","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","truncate_ms","truncate_no_offset_ms","truncate_no_offset_ns","truncate_no_offset_us","truncate_ns","truncate_ns","truncate_ragged_lines","truncate_ragged_lines","truncate_ragged_lines","truncate_us","truncate_us","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_thrift","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","try_new","try_new","try_new","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse_dates","try_pin","try_pin_in","try_serialize","try_unwrap","tu","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","tz","udf","unique","unique","unique","unique","unique","unique","unique_stable","unique_stable","unique_stable","unique_stable","unnest","unwrap","unwrap_or_clone","upper_bound","upsample","upsample_stable","use_statistics","use_statistics","use_statistics","utf8","validate","validation","validity","validity","value","value_counts","value_counts","value_name","value_unchecked","value_vars","values","values_iter","values_iter","var","var","var","var","var","var","var_as_series","var_as_series","variable_name","vec_hash","vec_hash_combine","version","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","warn_if_unsorted","weak_count","week","week","week","weekday","weekday","weekday","weekday","weeks","weeks","weeks_only","weights","weights","weights","when","when","when","window_size","window_size","window_size","window_size","with","with_ambiguous","with_batch_size","with_batch_size","with_batch_size","with_cache","with_capacity","with_capacity","with_capacity","with_chunk_size","with_chunk_size","with_coalesce","with_column","with_column","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns_seq","with_comment_prefix","with_comment_prefix","with_compression","with_compression","with_compression","with_compression","with_compression","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","with_decimal_comma","with_dtype","with_dtype_overwrite","with_dtypes","with_dtypes_slice","with_encoding","with_encoding","with_end_of_line_char","with_end_of_line_char","with_extension","with_extension","with_float_precision","with_fractional_seconds","with_glob","with_hive_partition_columns","with_hms","with_hms","with_hour","with_hours","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_json_format","with_json_format","with_line_terminator","with_metadata","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","with_missing_is_null","with_month","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_threads","with_n_threads","with_nanoseconds","with_null_value","with_null_values","with_null_values","with_optimizations","with_options","with_path","with_path","with_path","with_path","with_path","with_paths","with_paths","with_paths","with_pl_flavor","with_pl_flavor","with_predicate","with_predicate","with_predicate_pushdown","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection_pushdown","with_quote_char","with_quote_char","with_quote_char","with_quote_style","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_group_size","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_same_dtype","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema_modify","with_schema_overwrite","with_schema_overwrite","with_second","with_seconds","with_separator","with_separator","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows","with_skip_rows_after_header","with_skip_rows_after_header","with_slice_pushdown","with_statistics","with_streaming","with_time_format","with_time_unit","with_time_zone","with_try_parse_dates","with_try_parse_dates","with_type_coercion","with_validity","with_validity","with_validity_typed","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_varint","write_vectored","xor","year","year","year","year","zip","zip_with","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","aggs","apply","by_column","cache_hits","contexts","df","expr","exprs","file_info","file_options","function","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","offset","options","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","projection","right_on","scan_type","schema","schema","selection","slice","sort_options","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","output_type","partition_by","predicate","returns_scalar","right","sort_options","strict","truthy","decimals","digits","has_max","has_min","limit","limit","method","n","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","include_nulls","groups","rolling","data_type","high","low","error","error","msg","msg","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptions","RollingOptionsImpl","SeriesOpsTime","StringMethods","TimeMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","borrow","borrow_mut","by","by","center","center","clone","clone_into","closed_window","closed_window","day","day","days","default","deref","deref_mut","drop","eq","fmt","fn_params","fn_params","from","hour","hour","hours","init","into","is_leap_year","is_leap_year","iso_year","iso_year","microseconds","milliseconds","min_periods","min_periods","minute","minute","minutes","month","month","nanosecond","nanosecond","nanoseconds","ordinal","ordinal","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","quarter","quarter","rolling_max","rolling_mean","rolling_min","rolling_quantile","rolling_std","rolling_sum","rolling_var","second","second","seconds","string","to_owned","try_from","try_into","tu","type_id","tz","vzip","warn_if_unsorted","week","week","weekday","weekday","weights","weights","window_size","window_size","year","year","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","parse_bytes","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_from_with_unit","try_from_with_unit","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","from","from","from_str","from_untyped_config","hash","init","init","into","into","max_retries","options","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","max_retries","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_data_type","dtype","dtype","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","get_unchecked","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","new","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","with_capacity","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","mode","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","Any","Left","Right","SearchSortedSide","binary_search_array","slice_sorted_non_null_and_offset","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","slice_typed","slice_typed_unchecked","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","AsString","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_concat","str_head","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","Ascending","ChunkCompare","Descending","IntoSeries","IsSorted","Item","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","__clone_box","__clone_box","_sum_as_series","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","as_ref","as_series","as_series","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","categorical","checked_div","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","compute_len","date","datetime","decimal","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop_nulls","dtype","duration","eq","eq","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","filter_threaded","fmt","fmt","fmt","fmt_list","from","from","from","from","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_object","get_object_chunked_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_sorted_flag","iter","len","limit","list","lit","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","max","max_as_series","mean","mean_as_series","median","median_as_series","min","min_as_series","mul","mul","mul","mul","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_as_series","rechunk","rem","rem","rem","rename","rename","reshape","reverse","reverse","rolling_map","sample_frac","sample_n","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","sort","sort_with","std","std_as_series","str","str_value","strict_cast","struct_","sub","sub","sub","sub","sum","sum_as_series","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_slice_unchecked_threaded","take_threaded","take_unchecked","take_unchecked_from_slice","take_unchecked_threaded","time","to_arrow","to_dummies","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique_stable","unpack","unstable","var","var_as_series","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","_struct_arithmetic","add","add_to","add_to","checked","div","divide","divide","mul","multiply","multiply","rem","remainder","remainder","sub","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ArrayBox","UnstableSeries","__clone_box","as_mut","as_ref","borrow","borrow_mut","clone","clone_into","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array"],"q":[[0,"polars"],[17,"polars::chunked_array"],[865,"polars::chunked_array::arithmetic"],[893,"polars::chunked_array::builder"],[1150,"polars::chunked_array::builder::list"],[1167,"polars::chunked_array::collect"],[1181,"polars::chunked_array::float"],[1183,"polars::chunked_array::iterator"],[1253,"polars::chunked_array::iterator::par"],[1255,"polars::chunked_array::object"],[1326,"polars::chunked_array::object::builder"],[1349,"polars::chunked_array::object::registry"],[1377,"polars::chunked_array::ops"],[1577,"polars::chunked_array::ops::arity"],[1612,"polars::chunked_array::ops::float_sorted_arg_max"],[1614,"polars::chunked_array::ops::gather"],[1617,"polars::chunked_array::ops::search_sorted"],[1646,"polars::chunked_array::ops::sort"],[1653,"polars::chunked_array::ops::sort::arg_bottom_k"],[1654,"polars::chunked_array::ops::sort::arg_sort_multiple"],[1661,"polars::chunked_array::ops::sort::options"],[1674,"polars::chunked_array::temporal"],[1681,"polars::chunked_array::temporal::conversion"],[1684,"polars::datatypes"],[3022,"polars::datatypes::categorical"],[3039,"polars::datatypes::categorical::revmap"],[3045,"polars::datatypes::categorical::string_cache"],[3064,"polars::docs"],[3067,"polars::error"],[3153,"polars::error::PolarsError"],[3157,"polars::error::constants"],[3160,"polars::frame"],[3415,"polars::frame::explode"],[3444,"polars::frame::group_by"],[3679,"polars::frame::group_by::GroupByMethod"],[3680,"polars::frame::group_by::GroupsProxy"],[3682,"polars::frame::group_by::aggregations"],[3695,"polars::frame::group_by::expr"],[3698,"polars::frame::row"],[3805,"polars::functions"],[3807,"polars::prelude"],[8565,"polars::prelude::AggExpr"],[8572,"polars::prelude::BooleanFunction"],[8575,"polars::prelude::DslPlan"],[8627,"polars::prelude::Expr"],[8661,"polars::prelude::FunctionExpr"],[8681,"polars::prelude::GroupByMethod"],[8682,"polars::prelude::GroupsProxy"],[8684,"polars::prelude::LiteralValue"],[8687,"polars::prelude::PolarsError"],[8691,"polars::prelude::aggregations"],[8704,"polars::prelude::arity"],[8739,"polars::prelude::array"],[8758,"polars::prelude::binary"],[8774,"polars::prelude::cat"],[8775,"polars::prelude::chunkedarray"],[8868,"polars::prelude::chunkedarray::string"],[8906,"polars::prelude::chunkedarray::string::infer"],[8936,"polars::prelude::cloud"],[8983,"polars::prelude::cloud::options"],[8991,"polars::prelude::datatypes"],[9255,"polars::prelude::datatypes::categorical"],[9272,"polars::prelude::datatypes::categorical::revmap"],[9278,"polars::prelude::datatypes::categorical::string_cache"],[9282,"polars::prelude::datetime"],[9285,"polars::prelude::default_arrays"],[9291,"polars::prelude::dt"],[9343,"polars::prelude::expr"],[9346,"polars::prelude::fixed_size_list"],[9366,"polars::prelude::float_sorted_arg_max"],[9368,"polars::prelude::gather"],[9371,"polars::prelude::mode"],[9372,"polars::prelude::nan_propagating_aggregate"],[9376,"polars::prelude::null"],[9406,"polars::prelude::search_sorted"],[9412,"polars::prelude::series"],[9434,"polars::prelude::slice"],[9437,"polars::prelude::sort"],[9444,"polars::prelude::sort::arg_bottom_k"],[9445,"polars::prelude::sort::arg_sort_multiple"],[9452,"polars::prelude::sort::options"],[9465,"polars::prelude::strings"],[9518,"polars::prelude::udf"],[9524,"polars::prelude::utf8"],[9528,"polars::series"],[9929,"polars::series::arithmetic"],[9950,"polars::series::arithmetic::checked"],[9956,"polars::series::ops"],[9982,"polars::series::unstable"],[10006,"dyn_clone::sealed"],[10007,"num_traits"],[10008,"num_traits::cast"],[10009,"core::result"],[10010,"core::option"],[10011,"polars_arrow::array"],[10012,"alloc::boxed"],[10013,"core::iter::traits::iterator"],[10014,"polars_core::chunked_array::list::iterator"],[10015,"core::ops::function"],[10016,"core::marker"],[10017,"alloc::borrow"],[10018,"core::ops::function"],[10019,"core::slice::iter"],[10020,"core::iter::adapters::map"],[10021,"alloc::vec"],[10022,"core::iter::traits::double_ended"],[10023,"polars_arrow::offset"],[10024,"core::iter::traits::collect"],[10025,"core::fmt"],[10026,"core::fmt"],[10027,"polars_core::chunked_array::from_iterator"],[10028,"core::borrow"],[10029,"core::convert"],[10030,"polars_arrow::bitmap::immutable"],[10031,"rayon::iter"],[10032,"core::marker"],[10033,"polars_arrow::trusted_len"],[10034,"core::iter::traits::exact_size"],[10035,"bitflags::iter"],[10036,"bitflags::iter"],[10037,"rayon::iter"],[10038,"core::marker"],[10039,"polars_utils::hashing"],[10040,"ndarray::data_repr"],[10041,"ndarray::dimension::dim"],[10042,"ndarray"],[10043,"ndarray"],[10044,"core::any"],[10045,"core::ops::function"],[10046,"core::clone"],[10047,"polars_core::series::implementations::null"],[10048,"polars_arrow::array::boolean"],[10049,"polars_arrow::array::fixed_size_list"],[10050,"core::any"],[10051,"polars_arrow::bitmap::utils::zip_validity"],[10052,"core::hash"],[10053,"core::error"],[10054,"polars_arrow::array::primitive"],[10055,"polars_row::row"],[10056,"chrono::naive::datetime"],[10057,"chrono_tz::timezones"],[10058,"chrono::naive::time"],[10059,"bytemuck::zeroable"],[10060,"core::convert"],[10061,"polars_arrow::datatypes::physical_type"],[10062,"chrono::time_delta"],[10063,"chrono::naive::date"],[10064,"smartstring::config"],[10065,"smartstring"],[10066,"core::cmp"],[10067,"polars_arrow::datatypes::physical_type"],[10068,"alloc::collections"],[10069,"planus::errors"],[10070,"regex::error"],[10071,"simdutf8::basic"],[10072,"std::io::error"],[10073,"core::fmt"],[10074,"core::ops::range"],[10075,"polars_utils::idx_vec"],[10076,"rayon::iter::plumbing"],[10077,"polars_plan::logical_plan::aexpr"],[10078,"core::iter::adapters::copied"],[10079,"core::iter::adapters::zip"],[10080,"polars_utils::float"],[10081,"polars_arrow::types::native"],[10082,"polars_io::mmap"],[10083,"core::alloc"],[10084,"polars_plan::logical_plan::visitor"],[10085,"std::io"],[10086,"std::os::fd::owned"],[10087,"std::os::fd::owned"],[10088,"polars_io::predicates"],[10089,"core::mem::maybe_uninit"],[10090,"polars_io::csv::write::writer"],[10091,"std::io"],[10092,"polars_io::parquet::write::batched_writer"],[10093,"hashbrown::map"],[10094,"core::cmp"],[10095,"std::path"],[10096,"core::default"],[10097,"polars_parquet::parquet::metadata::row_metadata"],[10098,"polars_plan::dot"],[10099,"alloc::sync"],[10100,"core::iter::traits::collect"],[10101,"core::cmp"],[10102,"crossterm::command"],[10103,"polars_io::predicates"],[10104,"polars_plan::dsl::function_expr::range"],[10105,"polars_plan::dsl::function_expr::array"],[10106,"polars_plan::dsl::function_expr::list"],[10107,"polars_plan::dsl::function_expr::binary"],[10108,"polars_plan::dsl::function_expr::struct_"],[10109,"polars_plan::dsl::function_expr::strings"],[10110,"polars_plan::dsl::function_expr::datetime"],[10111,"polars_plan::dsl::function_expr::cat"],[10112,"std::path"],[10113,"std::ffi::os_str"],[10114,"alloc::borrow"],[10115,"std::ffi::os_str"],[10116,"polars_arrow::array::growable::structure"],[10117,"polars_arrow::array::struct_::mutable"],[10118,"polars_arrow::buffer::immutable"],[10119,"polars_arrow::array::list"],[10120,"polars_plan::logical_plan::options"],[10121,"core::cmp"],[10122,"polars_io::mmap"],[10123,"polars_arrow::array::struct_::iterator"],[10124,"parquet_format_safe::parquet_format"],[10125,"polars_io::parquet::read::read_impl"],[10126,"polars_plan::logical_plan::alp"],[10127,"polars_utils::arena"],[10128,"polars_plan::logical_plan::aexpr"],[10129,"core::error"],[10130,"parquet_format_safe::thrift::varint::decode"],[10131,"std::io"],[10132,"std::io"],[10133,"core::alloc"],[10134,"core::num::nonzero"],[10135,"alloc::collections::btree::map"],[10136,"std::io"],[10137,"polars_arrow::array::utf8"],[10138,"polars_arrow::array::binary"]],"if":"``````{{}b}`````````{{}d}```````````{{cf}b{}}0{{{j{h}}}d}{{{j{l}}{j{l}}}}{{{j{n}}{j{n}}}}{{{j{c}}{j{c}}}{}A`}{{{j{c}}e}{}A`{AbAd}}2{{{j{Af}}{j{Af}}}}21{{{j{l}}Ah}}{{{j{Af}}{Al{Aj}}}}26{{{j{c}}An}{{Bb{AnB`}}}Bd}{{{j{c}}Bf}AnA`}{{{j{h}}Bf}An}{{{j{l}}Bf}An}{{{j{n}}Bf}An}{{{j{Af}}Bf}An}{{{j{{Bh{c}}}}Bf}AnBj}{{{j{Bl}}Bf}An}{{{j{n}}}d}{{}Bn}{{{j{n}}}{{C`{d}}}}{{{j{Bl}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{j{h}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{j{Bl}}Ah}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{j{h}}Ah}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}64{{{j{c}}{j{c}}}b{{D`{}{{Cl{Cn}}}}}}{{{j{{Bh{c}}}}e}{{j{{Bh{c}}}}}Bj{{Dd{{C`{c}}}{{Db{{C`{c}}}}}}Df}}{{{j{Af}}c}{{j{Af}}}{{Dd{{C`{{Al{Aj}}}}}{{Db{{C`{{Dh{{Al{Aj}}}}}}}}}}Df}}{{{j{h}}c}{{j{h}}}{{Dd{{C`{An}}}{{Db{{C`{An}}}}}}Df}}{{{j{c}}e}{{j{c}}}A`{{Dd{C`}{{Db{C`}}}}Df}}{{{j{n}}c}{{j{n}}}{{Dd{{C`{d}}}{{Db{{C`{d}}}}}}Df}}{{{j{l}}c}{{j{l}}}{{Dd{{C`{Ah}}}{{Db{{C`{{Dh{Ah}}}}}}}}Df}}{{{j{h}}c}{{j{h}}}{{Dl{Dj}{{Db{An}}}}}}{{{j{h}}e}{{j{g}}}{}{{Dl{{C`{Dj}}}{{Db{{C`{c}}}}}}Df}D`}{{{j{Bl}}e}{{j{g}}}{}{{Dl{{C`{Dj}}}{{Db{{C`{c}}}}}}Df}D`}{{{j{Bl}}c}{{j{Bl}}}{{Dl{Dj}{{Db{An}}}}}}{{{j{Dn}}c}An{{Dd{An}{{Db{An}}}}}}{{{j{E`}}c}An{{Dd{An}{{Db{An}}}}}}{{{j{c}}g}{{j{i}}}D`{}{{Dl{C`}{{Db{{C`{e}}}}}}}D`}{{{j{c}}e}{{j{c}}}A`{{Dd{}{{Db{}}}}Df}}{{{j{Af}}Dd}{{j{Af}}}}{{{j{l}}Dd}{{j{l}}}}{{{j{n}}Dd}{{j{n}}}}{{{j{c}}Dd}{{j{c}}}A`}{{{j{c}}Dd}{{j{e}}}A`D`}{{{j{l}}Dd}{{j{c}}}D`}{{{j{n}}Dd}{{j{c}}}D`}{{{j{Af}}Dd}{{j{c}}}D`}{{{j{c}}e}bA`{{Dd{}{{Db{}}}}Df}}{{{j{l}}c}{{j{l}}}{{Dl{Ah}{{Db{Ah}}}}}}{{{j{Af}}c}{{j{Af}}}{{Dl{{Al{Aj}}}{{Db{{Al{Aj}}}}}}}}{{{j{c}}Ebg}{{j{i}}}D`{}{{Dl{}{{Db{e}}}}}D`}{{{j{l}}c}{{j{l}}}{{Dl{AhEd}}}}{{{j{Bl}}Dd}{{Bb{{j{Bl}}B`}}}}{{{j{h}}Dd}{{Bb{{j{h}}B`}}}}{{{j{{Bh{c}}}}g{Al{e}}}bBj{}{{Dd{{C`{c}}e}{{Db{e}}}}}}{{{j{n}}e{Al{c}}}b{}{{Dd{{C`{d}}c}{{Db{c}}}}}}{{{j{c}}g{Al{e}}}bA`{}{{Dd{C`e}{{Db{e}}}}}}{{{j{h}}e{Al{c}}}b{}{{Dd{{C`{An}}c}{{Db{c}}}}}}{{{j{Af}}e{Al{c}}}b{}{{Dd{{C`{{Al{Aj}}}}c}{{Db{c}}}}}}{{{j{l}}e{Al{c}}}b{}{{Dd{{C`{Ah}}c}{{Db{c}}}}}}{{{j{c}}e}{{j{c}}}A`{{Dd{}{{Db{}}}}Df}}{{{j{h}}c}{{j{h}}}{{Dd{An}{{Db{An}}}}Df}}{{{j{Af}}c}{{j{Af}}}{{Dd{{Al{Aj}}}{{Db{{Dh{{Al{Aj}}}}}}}}Df}}{{{j{l}}c}{{j{l}}}{{Dd{Ah}{{Db{{Dh{Ah}}}}}}Df}}{{{j{n}}c}{{j{n}}}{{Dd{d}{{Db{d}}}}Df}}{{{j{{Bh{c}}}}e}{{j{{Bh{c}}}}}Bj{{Dd{c}{{Db{c}}}}Df}}{{{j{c}}g}{{j{i}}}D`{}{{Dl{}{{Db{e}}}}}D`}{{{j{Ef}}Eh}{{j{Ej}}}}{{{j{Af}}Eh}{{j{Ej}}}}{{{j{n}}Eh}{{j{Ej}}}}{{{j{c}}Eh}{{j{Ej}}}A`}{{{j{l}}Eh}{{j{Ej}}}}{{{j{n}}{Al{An}}El}{{Bb{{j{Ej}}B`}}}}{{{j{Ef}}{Al{An}}El}{{Bb{{j{Ej}}B`}}}}{{{j{c}}{Al{An}}El}{{Bb{{j{Ej}}B`}}}A`}{{{j{Af}}{Al{An}}El}{{Bb{{j{Ej}}B`}}}}{{{j{l}}{Al{An}}El}{{Bb{{j{Ej}}B`}}}}{{{j{c}}}{{Bb{{j{Ej}}B`}}}A`}{{{j{l}}}{{Bb{{j{Ej}}B`}}}}{{{j{n}}}{{Bb{{j{Ej}}B`}}}}{{{j{Af}}}{{Bb{{j{Ej}}B`}}}}{{{j{{Bh{c}}}}}{{Bb{{j{Ej}}B`}}}Bj}`{{{j{Bl}}}{{j{Bl}}}}{{{j{l}}}{{j{Af}}}}{{{j{Af}}}{{j{Af}}}}{{{j{h}}}{{j{h}}}}{{{j{c}}}{{j{c}}}D`}{{{j{c}}}EbD`}{{{j{l}}}{{j{l}}}}0{{{j{h}}{j{c}}{j{e}}g}{{j{h}}}D`D`{{Dl{{C`{Dj}}C`C`}{{Db{{C`{An}}}}}}}}{{{j{n}}{j{n}}}}{{{j{c}}{j{c}}}{}En}1{{BnBn}Bn}{{BnBn}b}23310{BnAj}034421{ce{}{}}00000``{{{j{Ef}}Eb}{{Bb{AnB`}}}}{{{j{Bl}}Eb}{{Bb{AnB`}}}}{{{j{l}}Eb}{{Bb{AnB`}}}}{{{j{n}}Eb}{{Bb{AnB`}}}}{{{j{h}}Eb}{{Bb{AnB`}}}}{{{j{Af}}Eb}{{Bb{AnB`}}}}{{{j{c}}Eb}{{Bb{AnB`}}}A`}{{{j{c}}e}{{j{g}}}A`{{Dd{}{{Db{}}}}Df}A`}3675421{{{j{c}}An}{{Bb{AnB`}}}F`}{{{j{c}}e}{{Bb{AnB`}}}F`Ad}{{{j{c}}}{{Fh{{Fb{{Cf{Cd}}}}{Ff{{Cf{Cd}}}{{Db{Fd}}}}}}}D`}{{{j{c}}}{{Fj{{Cf{Cd}}}}}D`}0{{{j{c}}}{{j{c}}}D`}0{BnBn}{{ce}b{}{}}0``1{{{j{c}}}{{Bb{AlB`}}}A`}{{BnBn}d}{{{j{c}}}{{`{Fl}}}A`}{{}{{j{c}}}D`}{{}Bn}{Fdc{}}00000{{BnBn}Bn}{{{j{c}}{j{c}}}{}A`}{{{j{c}}e}{}A`{AbAd}}10{{{j{c}}An}{{Bb{AnB`}}}Bd}{Fdb}{{{j{c}}}bD`}11{{{j{c}}}EbD`}8;{{{j{Af}}{j{Af}}}{{j{n}}}}{{{j{l}}Ah}{{j{n}}}}{{{j{c}}{j{c}}}{{j{n}}}A`}{{{j{h}}{j{h}}}{{j{n}}}}{{{j{Af}}{Al{Aj}}}{{j{n}}}}{{{j{c}}e}{{j{n}}}A`Ad}{{{j{Bl}}{j{Bl}}}{{j{n}}}}{{{j{l}}{j{l}}}{{j{n}}}}{{{j{n}}{j{n}}}{{j{n}}}}714058236{{{j{l}}}{{Bb{{Gb{An{G`{Fn}}}}B`}}}}{{{j{Bl}}}{{Bb{{Gb{An{G`{Fn}}}}B`}}}}{{{j{h}}}{{Bb{{Gb{An{G`{Fn}}}}B`}}}}{{{j{c}}{j{c}}}bA`}{{Bnc}b{{Gd{}{{Cb{Bn}}}}}}{{{j{c}}}{{Bb{{j{c}}B`}}}A`}{{{j{Af}}{Al{Aj}}}{{Bb{{j{Af}}B`}}}}{{{j{n}}d}{{Bb{{j{n}}B`}}}}{{{j{c}}{j{n}}}{{Bb{{j{c}}B`}}}A`}{{{j{h}}{j{n}}}{{Bb{{j{h}}B`}}}}{{{j{Af}}{j{n}}}{{Bb{{j{Af}}B`}}}}{{{j{Ef}}{j{n}}}{{Bb{{j{Ef}}B`}}}}{{{j{Bl}}{j{n}}}{{Bb{{j{Bl}}B`}}}}{{{j{l}}{j{n}}}{{Bb{{j{l}}B`}}}}{{{j{{Bh{c}}}}{j{n}}}{{Bb{{j{{Bh{c}}}}B`}}}Bj}{{{j{n}}{j{n}}}{{Bb{{j{n}}B`}}}}{{{j{c}}}{{C`{Fd}}}D`}`{{{j{Af}}Gf}{{Bb{bGh}}}}{{{j{Bl}}Gf}{{Bb{bGh}}}}{{{j{{Bh{c}}}}Gf}{{Bb{bGh}}}Bj}{{{j{n}}Gf}{{Bb{bGh}}}}{{{j{l}}Gf}{{Bb{bGh}}}}{{{j{c}}Gf}{{Bb{bGh}}}A`}{{{j{h}}Gf}{{Bb{bGh}}}}{{BnGf}{{Bb{bGh}}}}0000{{{j{c}}e}bD`{{Dl{C`}}}}{{{j{h}}c}b{{Dl{{C`{Dj}}}}}}{{{j{Bl}}c}b{{Dl{{C`{Dj}}}}}}{cc{}}{c{{j{e}}}Cd{{D`{}{{Gj{c}}}}}}11{Aj{{C`{Bn}}}}{AjBn}00{{Ahc}{{j{e}}}Gd{{D`{}{{Gj{}}}}D`}}{{{j{c}}e}{{j{c}}}{{D`{}{{Gj{}}}}D`}Gd}{{Ah{Fj{{Cf{Cd}}}}}{{j{c}}}D`}{{Ah{Fj{{Cf{Cd}}}}Eb}{{j{c}}}D`}{g{{Bb{ic}}}{}{}{{Gl{c}{{Cb{e}}}}}{}}0{c{{j{e}}}{{Gd{}{{Cb{C`}}}}}A`}{c{{j{n}}}{{Gd{}{{Cb{d}}}}}}{e{{j{l}}}{{Gn{Ah}}}{{Gd{}{{Cb{c}}}}}}{e{{j{h}}}{{H`{An}}}{{Gd{}{{Cb{c}}}}}}{c{{j{h}}}{{Gd{}{{Cb{{C`{An}}}}}}}}{e{{j{l}}}{{Hb{Ah}}}{{Gd{}{{Cb{{C`{c}}}}}}}}{e{{j{{Bh{c}}}}}Bj{{Gd{}{{Cb{{C`{c}}}}}}}}{c{{j{n}}}{{Gd{}{{Cb{{C`{d}}}}}}}}{c{{j{e}}}{{Gd{}{{Cb{{Gb{Fj{C`{Hd}}}}}}}}}A`}{c{{j{h}}}{{Gd{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}{e{{j{Af}}}{{Hb{{Al{Aj}}}}}{{Gd{}{{Cb{{C`{c}}}}}}}}{e{{j{Af}}}{{Gn{{Al{Aj}}}}}{{Gd{}{{Cb{c}}}}}}{cBn{{Gd{}{{Cb{Bn}}}}}}{{Ahe}{{j{Af}}}{{Hb{{Al{Aj}}}}}{{Ch{}{{Cb{{C`{c}}}}}}}}{{Ahe}{{j{{Bh{c}}}}}Bj{{Ch{}{{Cb{{C`{c}}}}}}}}{{Ahe}{{j{l}}}{{Hb{Ah}}}{{Ch{}{{Cb{{C`{c}}}}}}}}{{Ahc}{{j{n}}}{{Ch{}{{Cb{{C`{d}}}}}}}}{{Ahc}{{j{e}}}{{Ch{}{{Cb{C`}}}}}A`}{e{{j{Ef}}}{{Hb{{Al{Aj}}}}}{{Gd{}{{Cb{{C`{c}}}}}}}}?{e{{j{l}}}{{Gn{Ah}}}{{Gd{}{{Cb{c}}}}}}8?><{c{{j{e}}}{{Gd{}{{Cb{C`}}}}}A`}>:{c{{j{n}}}{{Gd{}{{Cb{d}}}}}}{e{{j{Ef}}}{{Gn{{Al{Aj}}}}}{{Gd{}{{Cb{c}}}}}}{{Ahe}{{j{{Bh{c}}}}}Bj{{Ch{}{{Cb{c}}}}}}{{Ahe}{{j{Af}}}{{Hb{{Al{Aj}}}}}{{Ch{}{{Cb{c}}}}}}{{Ahc}{{j{e}}}{{Ch{}{{Cb{}}}}}A`}{{Ahc}{{j{n}}}{{Ch{}{{Cb{d}}}}}}{{Ahe}{{j{l}}}{{Hb{Ah}}}{{Ch{}{{Cb{c}}}}}}`{Ah{{C`{Bn}}}}{c{{j{h}}}{{Hf{}{{Cb{{C`{An}}}}}}}}{c{{j{n}}}{{Hf{}{{Cb{d}}}}}}{e{{j{l}}}{{Hb{Ah}}HhHj}{{Hf{}{{Cb{{C`{c}}}}}}}}{c{{j{e}}}{{Hf{}{{Cb{C`}}}}}A`}{c{{j{n}}}{{Hf{}{{Cb{{C`{d}}}}}}}}{e{{j{l}}}{{Gn{Ah}}HhHjHl}{{Hf{}{{Cb{c}}}}}}{e{{j{Af}}}{{Gn{{Al{Aj}}}}HhHjHl}{{Hf{}{{Cb{c}}}}}}{e{{j{Af}}}{{Hb{{Al{Aj}}}}HhHj}{{Hf{}{{Cb{{C`{c}}}}}}}}{{Ah{Al{c}}}{{j{Af}}}{{Hb{{Al{Aj}}}}}}{{AhAl}{{j{c}}}A`}{{Ah{Al{d}}}{{j{n}}}}{{Ah{Al{c}}}{{j{{Bh{c}}}}}Bj}{{Ah{Al{c}}}{{j{l}}}{{Hb{Ah}}}}{{Ah{Al{{C`{d}}}}}{{j{n}}}}{{Ah{Al{{C`{c}}}}}{{j{l}}}{{Hb{Ah}}}}{{Ah{Al{C`}}}{{j{c}}}A`}{{Ah{Al{{C`{c}}}}}{{j{{Bh{c}}}}}Bj}{{Ah{Al{{C`{c}}}}}{{j{Af}}}{{Hb{{Al{Aj}}}}}}{c{{j{e}}}{{Hn{}{{Cb{C`}}}}}A`}{c{{j{n}}}{{Hn{}{{Cb{{C`{d}}}}}}}}{{AhFj}{{j{c}}}A`}{{AhFj{C`{Hd}}}{{j{c}}}A`}{{Ah{Al{Aj}}Fd}{{j{Ef}}}}{{AhFd}{{j{c}}}A`}{{AhAnFd}{{j{h}}}}{{AhcFd}{{j{{Bh{c}}}}}Bj}{{AhAnFd}{{j{Bl}}}}{{AhdFd}{{j{n}}}}{{Ah{Al{Aj}}Fd}{{j{Af}}}}{{AhAhFd}{{j{l}}}}6{{AhFd}{{j{n}}}}{{AhFd}{{j{{Bh{c}}}}}Bj}{{AhFd}{{j{Ef}}}}{{AhFd}{{j{Af}}}}{{AhFd}{{j{h}}}}{{AhFd}{{j{l}}}}{{AhFd}{{j{Bl}}}}{{{j{c}}Fd}{{j{c}}}D`}{{AhFdEbFd}{{j{Bl}}}}{{AhFdEb}{{j{h}}}}{{{j{c}}Fd}C`D`}{{{j{Ef}}Fd}{{Bb{I`B`}}}}{{{j{h}}Fd}{{Bb{I`B`}}}}{{{j{Af}}Fd}{{Bb{I`B`}}}}{{{j{l}}Fd}{{Bb{I`B`}}}}{{{j{Bl}}Fd}{{Bb{I`B`}}}}{{{j{c}}Fd}{{Bb{I`B`}}}A`}{{{j{n}}Fd}{{Bb{I`B`}}}}{{{j{{Bh{c}}}}Fd}{{Bb{I`B`}}}Bj}{{{j{{Bh{c}}}}Fd}I`Bj}{{{j{h}}Fd}I`}{{{j{n}}Fd}I`}{{{j{Af}}Fd}I`}{{{j{c}}Fd}I`A`}{{{j{Bl}}Fd}I`}{{{j{Ef}}Fd}I`}{{{j{l}}Fd}I`}{{{j{h}}Fd}{{C`{An}}}}{{{j{Bl}}Fd}{{C`{An}}}}{{{j{c}}}BnD`}{{{j{h}}}An}{{{j{Bl}}}An}{{{j{{Bh{c}}}}Fd}{{C`{Ib}}}Bj}0{BnId}{{{j{c}}Fd}C`D`}{{{j{Ef}}}Fd}{{{j{h}}}Fd}{{{j{l}}}Fd}{{{j{Bl}}}Fd}{{{j{l}}dd}{{Bb{BfB`}}}}{{{j{Bl}}dd}{{Bb{BfB`}}}}{{{j{n}}dd}{{Bb{BfB`}}}}{{{j{Ef}}dd}{{Bb{BfB`}}}}{{{j{{Bh{c}}}}dd}{{Bb{BfB`}}}Bj}{{{j{c}}dd}{{Bb{BfB`}}}A`}{{{j{h}}dd}{{Bb{BfB`}}}}{{{j{Af}}dd}{{Bb{BfB`}}}}{{{j{c}}FddFd}BfEn}{{{j{Af}}{Al{Aj}}}{{j{n}}}}{{{j{Af}}{j{Af}}}{{j{n}}}}{{{j{Bl}}{j{Bl}}}{{j{n}}}}{{{j{c}}{j{c}}}{{j{n}}}A`}{{{j{l}}{j{l}}}{{j{n}}}}{{{j{n}}{j{n}}}{{j{n}}}}{{{j{l}}Ah}{{j{n}}}}{{{j{c}}e}{{j{n}}}A`Ad}{{{j{h}}{j{h}}}{{j{n}}}}382107465{{{j{c}}}dD`}{{{j{c}}{C`{Fd}}}{{j{c}}}D`}{{}Fd}00{{FdIf{C`{Ih}}}{{j{c}}}A`}{{{j{h}}}Eb}{{{j{Bl}}}Eb}{{BnBn}b}{{BnBn}Bn}{{BnBn}d}{ce{}{}}00{{{j{Ij}}}{{In{IlIj}}}}{{{j{J`}}Jb{C`{Ed}}}{{In{JdJ`}}}}{{{j{Jf}}{C`{Fd}}Fd}{{Bb{{In{JhJf}}B`}}}}{{{j{Jf}}{C`{Fd}}Fd}{{In{JhJf}}}}{{{j{J`}}Jb}{{In{JjJ`}}}}{{{j{c}}}{}A`}{{{j{h}}}}{{{j{{Bh{c}}}}}{}Bj}{{{j{n}}}}{{{j{Bl}}}}{{{j{Ef}}}}{{{j{l}}}}{{{j{Af}}}}{Bn}{{{j{c}}}{{`{HhHjJlFlHn}}}A`}{{{j{Jf}}}An}{{{j{c}}}AnD`}{{{j{J`}}}{{In{JnJ`}}}}{Bnd}{{{j{c}}}dD`}1{{{j{c}}}{{j{n}}}K`}000{{{j{c}}}{{j{n}}}D`}02{{{j{c}}}IdD`}{{{j{c}}}{{`{Kb}}}D`}{Bn{{Kd{Bn}}}}{Bn{{Kf{Bn}}}}{{{j{c}}}{{Fh{{Fb{{Cf{Cd}}}}{Ff{{Cf{Cd}}}{{Db{{C`{Hd}}}}}}}}}D`}`{{{j{c}}}C`D`}{{{j{c}}}{{C`{Fd}}}D`}{{{j{c}}}{{Kh{c}}}D`}{{{j{c}}{j{c}}}{}A`}0{{{j{c}}}{}A`}000{{{j{c}}}FdD`}{{{j{c}}e}{{j{c}}}A`{AbKj}}00{{{j{c}}Fd}{{j{c}}}D`}{{{j{Af}}{j{Af}}}{{j{n}}}}{{{j{c}}{j{c}}}{{j{n}}}A`}{{{j{l}}Ah}{{j{n}}}}{{{j{n}}{j{n}}}{{j{n}}}}{{{j{h}}{j{h}}}{{j{n}}}}{{{j{Af}}{Al{Aj}}}{{j{n}}}}{{{j{Bl}}{j{Bl}}}{{j{n}}}}{{{j{l}}{j{l}}}{{j{n}}}}{{{j{c}}e}{{j{n}}}A`Ad}730568421{{{j{n}}}{{C`{d}}}}{{{j{c}}}C`A`}{{{j{c}}}AnA`}{{{j{Af}}}An}{{{j{n}}}An}{{{j{l}}}An}{{{j{n}}}{{C`{Kl}}}}{{{j{c}}}{{C`{Kl}}}A`}{{{j{Dn}}}{{C`{Kl}}}}{{{j{c}}}{{C`{Kl}}}En}{{{j{E`}}}{{C`{If}}}}{{{j{c}}}AnEn}{{{j{Dn}}}An}{{{j{E`}}}An}<=;8:9{{{j{c}}}{{C`{Gb}}}A`}{{AhAl}{{j{c}}}A`}{{Ah{Al{Aj}}FdFd}{{j{n}}}}{{{j{c}}e}{}A`{AbAd}}{{{j{c}}{j{c}}}{}A`}01{{{j{c}}An}{{Bb{AnB`}}}Bd}{{{j{c}}}{{Bb{FdB`}}}A`}{{{j{l}}}{{Bb{FdB`}}}}{{{j{Af}}}{{Bb{FdB`}}}}{{{j{c}}}AhD`}{{Ahc}{{j{Kn}}}{{Hb{{Al{{C`{L`}}}}}}}}{{Ahc}{{j{J`}}}{{Hb{{Al{{C`{Fn}}}}}}}}{{Ahc}{{j{l}}}{{Hb{{Al{{Dh{Ah}}}}}}}}{{Ahc}{{j{n}}}{{Hb{{Al{{C`{d}}}}}}}}{{Ahc}{{j{n}}}{{Hb{{Al{d}}}}}}{{Ahc}{{j{Af}}}{{Hb{{Al{{Fj{Aj}}}}}}}}{{Ahc}{{j{Af}}}{{Hb{{Al{{Al{Aj}}}}}}}}{{Ahc}{{j{Af}}}{{Hb{{Al{{C`{{Dh{{Al{Aj}}}}}}}}}}}}{{Ahc}{{j{Dn}}}{{Hb{{Al{{C`{Kl}}}}}}}}{{Ahc}{{j{Af}}}{{Hb{{Al{{C`{{Al{Aj}}}}}}}}}}{{Ahc}{{j{Ej}}}{{Hb{{Al{{C`{Lb}}}}}}}}{{Ahc}{{j{Ij}}}{{Hb{{Al{{C`{Ld}}}}}}}}{{Ahc}{{j{l}}}{{Hb{{Al{{C`{{Dh{Ah}}}}}}}}}}{{Ahc}{{j{Ij}}}{{Hb{{Al{Ld}}}}}}{{Ahc}{{j{l}}}{{Hb{{Al{Ah}}}}}}{{Ah{Lf{Ih}}}{{j{Lh}}}}{{Ah{Lf{Fn}}}{{j{J`}}}}{{Ahc}{{j{Ej}}}{{Hb{{Al{Lb}}}}}}{{Ahc}{{j{Lh}}}{{Hb{{Al{{C`{Ih}}}}}}}}{{Ahc}{{j{Lj}}}{{Hb{{Al{Ll}}}}}}{{Ahc}{{j{Ln}}}{{Hb{{Al{{C`{Aj}}}}}}}}{{Ahc}{{j{M`}}}{{Hb{{Al{Mb}}}}}}{{Ahc}{{j{Ln}}}{{Hb{{Al{Aj}}}}}}{{Ahc}{{j{l}}}{{Hb{{Al{{C`{Ed}}}}}}}}{{Ahc}{{j{Kn}}}{{Hb{{Al{L`}}}}}}{{Ahc}{{j{Dn}}}{{Hb{{Al{Kl}}}}}}{{Ahc}{{j{Af}}}{{Hb{{Al{{C`{{Fj{Aj}}}}}}}}}}{{Ahc}{{j{Lh}}}{{Hb{{Al{Ih}}}}}}{{Ahc}{{j{E`}}}{{Hb{{Al{If}}}}}}{{Ah{Al{c}}}{{j{{Bh{c}}}}}Bj}{{Ahc}{{j{J`}}}{{Hb{{Al{Fn}}}}}}{{Ah{Lf{Ld}}}{{j{Ij}}}}{{Ahc}{{j{l}}}{{Hb{{Al{{C`{Ah}}}}}}}}{{Ahc}{{j{l}}}{{Hb{{Al{Ed}}}}}}{{Ahe}{{j{{Bh{c}}}}}Bj{{Hb{{Al{{C`{c}}}}}}}}{{Ahc}{{j{M`}}}{{Hb{{Al{{C`{Mb}}}}}}}}{{Ahc}{{j{Af}}}{{Hb{{Al{{Dh{{Al{Aj}}}}}}}}}}{{Ahc}{{j{E`}}}{{Hb{{Al{{C`{If}}}}}}}}{{Ah{Lf{Lb}}}{{j{Ej}}}}{{Ahc}{{j{Lj}}}{{Hb{{Al{{C`{Ll}}}}}}}}{Ah{{j{{Bh{c}}}}}Bj}{{{j{{Bh{c}}}}FdFd}{{j{{Bh{c}}}}}Bj}{{{j{h}}FdFd}{{j{h}}}}{{{j{Af}}FdFd}{{j{Af}}}}{{{j{Bl}}FdFd}{{j{Bl}}}}{{{j{n}}FdFd}{{j{n}}}}{{{j{Ef}}FdFd}{{j{Ef}}}}{{{j{l}}FdFd}{{j{l}}}}{{{j{c}}FdFd}{{j{c}}}A`}{{Ah{Fj{c}}}{{j{{Bh{c}}}}}Bj}{{Ah{Fj{c}}Hd}{{j{{Bh{c}}}}}Bj}{{AhFj}{{j{c}}}A`}{{{j{c}}}{{j{c}}}K`}{{{j{n}}}}0{BnBn}{{{j{h}}{j{h}}}{{j{n}}}}{{{j{c}}{j{c}}}{{j{n}}}A`}{{{j{Af}}{Al{Aj}}}{{j{n}}}}{{{j{l}}{j{l}}}{{j{n}}}}{{{j{n}}{j{n}}}{{j{n}}}}{{{j{Bl}}{j{Bl}}}{{j{n}}}}{{{j{l}}Ah}{{j{n}}}}{{{j{Af}}{j{Af}}}{{j{n}}}}{{{j{c}}e}{{j{n}}}A`Ad}76548{{{j{Bl}}{j{Bl}}}}321{{{j{c}}}FdD`}`{{{j{Bl}}}{{Bb{{G`{Fn}}B`}}}}{{{j{h}}}{{Bb{{G`{Fn}}B`}}}}{{{j{l}}}{{Bb{{G`{Fn}}B`}}}}`{{{j{h}}}{{`{{Md{}{{Cb{{C`{An}}}}}}}}}}{{{j{l}}}{{`{{Md{}{{Cb{{C`{Ah}}}}}}}}}}{{{j{h}}}{{`{Mf}}}}{{{j{l}}}{{`{Mf}}}}{{{j{c}}}AnA`}{{{j{c}}}bD`}{{{j{c}}KlMh}{{Bb{{C`{Kl}}B`}}}En}{{{j{Dn}}KlMh}{{Bb{{C`{Kl}}B`}}}}{{{j{E`}}KlMh}{{Bb{{C`{If}}B`}}}}{{{j{c}}KlMh}{{Bb{AnB`}}}En}{{{j{Dn}}KlMh}{{Bb{AnB`}}}}{{{j{E`}}KlMh}{{Bb{AnB`}}}}{{AhFdKl}{{Bb{{j{n}}B`}}}}{{AhFdKlKl}{{Bb{{j{c}}B`}}}A`}{{AhFd}{{j{c}}}A`}{{AhFdKlKl}{{j{c}}}A`}{{{j{c}}}{{j{c}}}D`}{{{j{c}}}MjD`}{{{j{Ij}}}An}{{{j{Dn}}}An}{{{j{Ln}}}An}{{{j{Kn}}}An}{{{j{Lh}}}An}{{{j{Lj}}}An}{{{j{M`}}}An}{{{j{E`}}}An}{{{j{h}}}An}{{{j{Ej}}}An}{{{j{J`}}}An}542019:7638{{{j{c}}e}{}A`{AbAd}}{{{j{c}}{j{c}}}{}A`}10{{{j{c}}An}{{Bb{AnB`}}}Bd}{{BnBn}b}{{{j{c}}Ah}bD`}{{{j{{Bh{c}}}}}{{j{{Bh{c}}}}}Bj}{{{j{l}}}{{j{l}}}}{{{j{Ef}}}{{j{Ef}}}}{{{j{n}}}{{j{n}}}}{{{j{c}}}{{j{c}}}A`}{{{j{Bl}}}{{j{Bl}}}}{{{j{h}}}{{j{h}}}}{{{j{Af}}}{{j{Af}}}}{{{j{c}}DdMl}{{Bb{AnB`}}}A`}{{{j{c}}Fde}{{Bb{{j{c}}B`}}}K`{{Dl{{j{c}}}{{Db{C`}}}}}}{{{j{c}}Kldd{C`{Ih}}}{{Bb{{j{c}}B`}}}D`}{{{j{c}}Fddd{C`{Ih}}}{{Bb{{j{c}}B`}}}D`}{{{j{n}}{Al{Lb}}c}{{Bb{AnB`}}}{{Gd{}{{Cb{{C`{d}}}}}}}}{{{j{l}}{Al{Lb}}c}{{Bb{AnB`}}}{{Gd{}{{Cb{{C`{Ah}}}}}}}}{{{j{c}}{Al{Lb}}e}{{Bb{AnB`}}}Mn{{Gd{}{{Cb{C`}}}}}}{{{j{n}}c{C`{d}}}{{Bb{{j{n}}B`}}}{{Gd{}{{Cb{Lb}}}}}}{{{j{l}}c{C`{Ah}}}{{Bb{{j{l}}B`}}}{{Gd{}{{Cb{Lb}}}}}}{{{j{c}}eC`}{{Bb{{j{c}}B`}}}A`{{Gd{}{{Cb{Lb}}}}}}{{{j{Af}}c{C`{{Al{Aj}}}}}{{Bb{{j{Af}}B`}}}{{Gd{}{{Cb{Lb}}}}}}{{{j{n}}ce}{{Bb{{j{n}}B`}}}{{Gd{}{{Cb{Lb}}}}}{{Dd{{C`{d}}}{{Db{{C`{d}}}}}}}}{{{j{c}}eg}{{Bb{{j{c}}B`}}}A`{{Gd{}{{Cb{Lb}}}}}{{Dd{C`}{{Db{C`}}}}}}{{{j{Af}}ce}{{Bb{{j{Af}}B`}}}{{Gd{}{{Cb{Lb}}}}}{{Dd{{C`{{Al{Aj}}}}}{{Db{{C`{{Fj{Aj}}}}}}}}}}{{{j{l}}ce}{{Bb{{j{l}}B`}}}{{Gd{}{{Cb{Lb}}}}}{{Dd{{C`{Ah}}}{{Db{{C`{Ed}}}}}}}}{{{j{n}}{j{n}}{C`{d}}}{{Bb{{j{n}}B`}}}}{{{j{c}}{j{n}}C`}{{Bb{{j{c}}B`}}}A`}{{{j{Af}}{j{n}}{C`{{Al{Aj}}}}}{{Bb{{j{Af}}B`}}}}{{{j{l}}{j{n}}{C`{Ah}}}{{Bb{{j{l}}B`}}}}{{BnBnd}b}{{{j{h}}}b}{{{j{h}}Eb}b}{{{j{c}}Lb}bD`}{{{j{c}}Id}bD`}{{BnId}b}{{{j{Bl}}Fn}{{j{Bl}}}}{{{j{Af}}Fn}{{j{Af}}}}{{{j{n}}Fn}{{j{n}}}}{{{j{{Bh{c}}}}Fn}{{j{{Bh{c}}}}}Bj}{{{j{h}}Fn}{{j{h}}}}{{{j{c}}Fn}{{j{c}}}A`}{{{j{l}}Fn}{{j{l}}}}{{{j{Ef}}Fn}{{j{Ef}}}}{{{j{l}}Fn{C`{Ah}}}{{j{l}}}}{{{j{Bl}}Fn{C`{An}}}{{j{Bl}}}}{{{j{Af}}Fn{C`{{Al{Aj}}}}}{{j{Af}}}}{{{j{h}}Fn{C`{An}}}{{j{h}}}}{{{j{Ef}}Fn{C`{{Al{Aj}}}}}{{j{Ef}}}}{{{j{{Bh{c}}}}Fn{C`{{Bh{c}}}}}{{j{{Bh{c}}}}}Bj}{{{j{c}}FnC`}{{j{c}}}A`}{{{j{n}}Fn{C`{d}}}{{j{n}}}}{{{j{c}}}bD`}{{{j{c}}FnFd}{{j{c}}}D`}{{{j{n}}d}{{j{n}}}}{{{j{Af}}d}{{j{Af}}}}{{{j{c}}d}{{j{c}}}A`}{{{j{Ef}}d}{{j{Ef}}}}{{{j{l}}d}{{j{l}}}}{{{j{Ef}}Eh}{{j{Ef}}}}{{{j{n}}Eh}{{j{n}}}}{{{j{c}}Eh}{{j{c}}}A`}{{{j{l}}Eh}{{j{l}}}}{{{j{Af}}Eh}{{j{Af}}}}{{{j{c}}Aj}{{C`{Kl}}}A`}{{{j{c}}Aj}AnEn}{{{j{Dn}}Aj}An}{{{j{E`}}Aj}An}{{{j{c}}{j{c}}}{}A`}0{{{j{c}}e}{}A`{AbAd}}0{{BnBn}Bn}{{BnBn}b}{{{j{c}}An}{{Bb{AnB`}}}Bd}{{{j{c}}}C`A`}{{{j{n}}}{{C`{Lb}}}}{{{j{c}}}AnA`}{{{j{l}}}An}{{{j{Af}}}An}{{{j{n}}}An}8{{{j{c}}{C`{Fd}}}{{j{c}}}D`}{{{j{c}}{j{Ej}}}{{Bb{{j{c}}B`}}}D`}{{{j{c}}e}{{Bb{{j{c}}B`}}}D`{{Hb{{Al{Lb}}}}N`}}{{{j{c}}{Al{Nb}}Id}{{j{c}}}D`}{{{j{c}}{Al{Nb}}}{{j{c}}}D`}{{{j{c}}e}{{j{c}}}{{D`{}{{Nd{Cn}}}}D`}{{Hb{{Al{Lb}}}}N`}}{{{j{Af}}c}{{j{Af}}}{{Hb{{Al{Lb}}}}N`}}{{{j{Af}}{j{Ej}}}{{j{Af}}}}{{{j{l}}{j{Ej}}}{{j{l}}}}{{{j{c}}{j{Ej}}}{{j{c}}}{{D`{}{{Nd{Cn}}}}D`}}{{{j{l}}c}{{j{l}}}{{Hb{{Al{Lb}}}}N`}}`{{{j{c}}dNf}{{Fj{{Fj{Nh}}}}}D`}{{{j{c}}}{{j{c}}}K`}{{{j{l}}Fd}{{Bb{AnB`}}}}{{{j{Bl}}Eb}b}{{{j{h}}Eb}b}{{{j{h}}}{{Bb{{O`{Nj{Nn{{Nl{Fd}}}}}}B`}}}}{{{j{c}}}{{Bb{{O`{Ob{Nn{{Nl{Fd}}}}}}B`}}}A`}{ce{}{}}0{{{j{Af}}}{{j{l}}}}{{{j{c}}}{{Fj{C`}}}A`}{{{j{c}}}{{Od{Fj{Fj{C`}}}}}A`}{{BnBn}b}{{{j{c}}{j{c}}}{}A`}0{{{j{c}}}{}A`}000{{{j{h}}c}{{Bb{{j{h}}B`}}}{{Dl{Dj}{{Db{{Bb{AnB`}}}}}}}}{{{j{h}}e}{{Bb{{j{g}}B`}}}{}{{Dl{{C`{Dj}}}{{Db{{Bb{{C`{c}}B`}}}}}}Df}D`}{{{j{Bl}}e}{{Bb{{j{g}}B`}}}{}{{Dl{{C`{Dj}}}{{Db{{Bb{{C`{c}}B`}}}}}}Df}D`}{{{j{Bl}}c}{{Bb{{j{Bl}}B`}}}{{Dl{Dj}{{Db{{Bb{AnB`}}}}}}}}{{{j{Bl}}c}{{Bb{{j{h}}B`}}}{{Dl{Dj}{{Db{{Bb{AnB`}}}}}}}}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{}{}{{Dl{C`}{{Db{{Bb{{C`{e}}g}}}}}}Df}D`}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{}{}{{Dl{}{{Db{{Bb{eg}}}}}}}D`}{c{{Bb{e}}}{}{}}00{{Ahg}{{Bb{{j{i}}e}}}Cd{}{{Gd{}{{Cb{{Bb{ce}}}}}}}{{D`{}{{Gj{c}}}}D`}}111{{{j{h}}{j{c}}e}{{Bb{{j{h}}B`}}}D`{{Dl{{C`{Dj}}C`}{{Db{{Bb{{C`{An}}B`}}}}}}}}{cOf{}}00{{BnBn}Bn}{{{j{c}}}{{Bb{{j{c}}B`}}}A`}{{{j{Af}}}{{Bb{{j{Af}}B`}}}}{{{j{n}}}{{Bb{{j{n}}B`}}}}{{{j{l}}}{{Bb{{j{l}}B`}}}}{{{j{{Bh{c}}}}}{{Bb{{j{{Bh{c}}}}B`}}}Bj}{{{j{c}}An}{{Bb{{j{c}}B`}}}D`}{{{j{c}}}bD`}{{{j{c}}Fd}{}D`}{{{j{c}}Aj}{{C`{Kl}}}A`}{{{j{Dn}}Aj}An}{{{j{c}}Aj}AnEn}{{{j{E`}}Aj}An}{{{j{Jf}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{Ej}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{E`}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{Ij}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{{Bh{c}}}}Nf{Fj{Ih}}}{{Bb{bB`}}}Bj}{{{j{Ef}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{J`}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{Dn}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{Kn}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{n}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{Lh}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{l}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{Af}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{Lj}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{M`}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{Ln}}Nf{Fj{Ih}}}{{Bb{bB`}}}}{{{j{Lh}}Nf{Al{Ih}}}{{Bb{bB`}}}}{{{j{Ef}}Nf{Al{Ih}}}{{Bb{bB`}}}}{{{j{M`}}Nf{Al{Ih}}}{{Bb{bB`}}}}{{{j{Af}}Nf{Al{Ih}}}{{Bb{bB`}}}}{{{j{Ej}}Nf{Al{Ih}}}{{Bb{bB`}}}}{{{j{Ln}}Nf{Al{Ih}}}{{Bb{bB`}}}}{{{j{Lj}}Nf{Al{Ih}}}{{Bb{bB`}}}}{{{j{l}}Nf{Al{Ih}}}{{Bb{bB`}}}}{{{j{E`}}Nf{Al{Ih}}}{{Bb{bB`}}}}{{{j{{Bh{c}}}}Nf{Al{Ih}}}{{Bb{bB`}}}Bj}{{{j{J`}}Nf{Al{Ih}}}{{Bb{bB`}}}}{{{j{Dn}}Nf{Al{Ih}}}{{Bb{bB`}}}}{{{j{Ij}}Nf{Al{Ih}}}{{Bb{bB`}}}}{{{j{n}}Nf{Al{Ih}}}{{Bb{bB`}}}}{{{j{Kn}}Nf{Al{Ih}}}{{Bb{bB`}}}}{{{j{Jf}}Nf{Al{Ih}}}{{Bb{bB`}}}}{ce{}{}}00{{{j{Bl}}}Fd}{{Ahc}{{j{e}}}Cd{{D`{}{{Gj{c}}}}D`}}{{{j{c}}{Fj{{Cf{Cd}}}}}{{j{c}}}D`}{{{j{c}}Ah}{{j{c}}}D`}{{{Al{Oh}}e}c{}{{Oj{{j{Ej}}}{{Db{c}}}}}}{{{j{c}}Id}{{j{c}}}D`}{{{j{c}}}{}A`}0{{{j{c}}{j{c}}}{}A`}011001111001111001111001111001111{{{j{h}}{j{c}}e}{{j{h}}}D`{{Dl{{C`{Dj}}C`}{{Db{{C`{An}}}}}}}}{{{j{Bl}}{j{c}}e}{{j{Bl}}}D`{{Dl{{C`{Dj}}C`}{{Db{{C`{An}}}}}}}}{{{j{c}}{j{n}}{j{c}}}{{Bb{{j{c}}B`}}}D`}````{{{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}}e{}{}{}}{{{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}c}e{}{}{}}{{c{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}}e{}{}{}}{{{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}}g{}{}{}}{{{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}c}g{}{}{}}{{c{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}}g{}{}{}}{{{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}}e{}{}{}}65654654650654654````````````````{{cf}b{}}000{{A@dCd}b}{A@db}{A@fb}{{A@hc}b{{Ch{}{{Cb{{C`{d}}}}}}Hn}}{{{A@j{c}}e}bA`{{Ch{}{{Cb{C`}}}}Hn}}{{{A@j{c}}e}bA`{{Ch{}{{Cb{}}}}Hn}}{A@lb}{A@nb}65{AA`b}{AAbb}{A@hb}{AAdb}{{{A@j{c}}}bA`}{{{AAf{c}}}b{AAhN`}}{AAjb}{AAlb}{{{AAn{c}}}bA`}{{A@d{C`{Cd}}}b}{{A@d{C`{An}}}{{Bb{bB`}}}}{{A@l{C`{An}}}{{Bb{bB`}}}}{{{A@j{c}}{C`{Al}}}bA`}{{{AAf{c}}{C`{e}}}b{AAhN`}{{Hb{c}}}}{{A@n{C`{c}}}b{}}{{A@lAn}{{Bb{bB`}}}}{{A@dAn}{{Bb{bB`}}}}{{A@fAn}{{Bb{bB`}}}}{{AA`An}{{Bb{bB`}}}}{{AAbAn}{{Bb{bB`}}}}{{A@hAn}{{Bb{bB`}}}}{{AAdAn}{{Bb{bB`}}}}{{{A@j{c}}An}{{Bb{bB`}}}A`}{{{A@j{c}}Al}bA`}{{AA`c}b{{Ch{}{{Cb{{C`{Ah}}}}}}Hn}}{{AAbc}b{{Ch{}{{Cb{{C`{{Al{Aj}}}}}}}}Hn}}{{A@nc}b{}}{{{AAf{c}}e}b{AAhN`}{{Hb{c}}}}{{AAjd}b}{{{AAn{c}}}bA`}{{AA`c}b{{Ch{}{{Cb{Ah}}}}}}{{AAbc}b{{Ch{}{{Cb{{Al{Aj}}}}}}}}{ce{}{}}000000000000000000000`{{{AAf{c}}}{{AAf{c}}}{AAhN`}}{AAjAAj}{AAlAAl}{{{AAn{c}}}{{AAn{c}}}{AB`A`}}{{ce}b{}{}}000{{}A@d}{{}A@f}{Fdc{}}000000000000000000000{Fdb}0000000000{AA`d}{AAbd}{A@hd}{{{A@j{c}}}dA`}{A@ld}{AA`Mj}{AAbMj}{A@hMj}{{{A@j{c}}}MjA`}{A@lMj}{A@n{{j{c}}}D`}{A@d{{j{h}}}}{A@f{{j{h}}}}{AAd{{j{h}}}}{A@l{{j{h}}}}{{{AAf{{Al{Aj}}}}}{{j{Af}}}}{{{AAf{Ah}}}{{j{l}}}}{AAj{{j{n}}}}{AAlABb}{{{AAn{c}}}{{j{c}}}A`}`{cc{}}0000000000{{Ahe}ABd{}{{Ch{}{{Cb{{C`{c}}}}}}}}{{Ahe}ABd{}{{Ch{}{{Cb{c}}}}}}{{Ah{Al{c}}}ABd{}}{{Ah{Al{{C`{c}}}}}ABd{}}{{EbFdFdAh}{{Bb{{Cf{A@l}}B`}}}}{{}Fd}0000000000{AA`{{Cf{Cd}}}}{AAb{{Cf{Cd}}}}{A@h{{Cf{Cd}}}}{{{A@j{c}}}{{Cf{Cd}}}A`}{A@l{{Cf{Cd}}}}{ce{}{}}0000000000`{{AhFd{C`{Eb}}}A@d}{{AhFd{C`{Eb}}}A@f}{{AhFdFd}AA`}{{AhFdFd}AAb}{{AhFdFd}A@h}{{AhFd}AAd}{{AhFdFdEb}{{A@j{c}}}A`}{{AhFd}{{AAf{c}}}{AAhN`}}{{AhFd}AAj}{{AhFd}AAl}{{AhFd}{{AAn{c}}}A`}{{AhFdFdEbEb}{{A@j{c}}}A`}{A@nb}{AAjb}{AAlb}{{{AAn{c}}}bA`}{ce{}{}}000{c{{Bb{e}}}{}{}}000000000000000000000{cOf{}}000000000022222222222````````{A@lb}{{A@l{C`{An}}}{{Bb{bB`}}}}{{A@lAn}{{Bb{bB`}}}}`{A@ld}{A@lMj}{A@l{{j{h}}}}{{EbFdFdAh}{{Bb{{Cf{A@l}}B`}}}}{A@l{{Cf{Cd}}}}``{{ABfAh}{{j{c}}}D`}{{ABh{j{c}}}{{j{c}}}D`}10{{ABhAhEb}{{j{c}}}D`}0{{ABfAh}{{Bb{{j{c}}e}}}D`{}}{{ABh{j{c}}}{{Bb{{j{c}}e}}}D`{}}10{{ABhAhEb}{{Bb{{j{c}}e}}}D`{}}0`{ABjABj}`````{ce{}{}}0000000{Fdc{}}0000000{Fdb}000{cc{}}000{{}Fd}00044444444{ABlABn}{{AC`Eb}ACb}{ABnC`}{ACbC`}{ACdC`}{{{ACf{c}}}C`Ch}32{{{ACf{c}}}C`Fl}`{ABn{{Gb{Fd{C`{Fd}}}}}}{ACb{{Gb{Fd{C`{Fd}}}}}}{{{ACf{c}}}{{Gb{Fd{C`{Fd}}}}}Ch}{c{{Bb{e}}}{}{}}0000000{cOf{}}000{ce{}{}}000``````{{cf}b{}}{e{{ACh{c}}}Bj{{Gd{}{{Cb{{C`{c}}}}}}}}{e{{ACh{c}}}Bj{{Gd{}{{Cb{c}}}}}}{{ACje}g{}{{Gd{}{{Cb{c}}}}}{}}0{IbACl}{{{ACh{c}}}AClBj}066`{{{ACh{c}}}{{ACh{c}}}{AB`Bj}}{{ce}b{}{}}{{{ACh{c}}}ACjBj}{Fdc{}}0{Fdb}{{IbIb}d}0{{{ACh{c}}Gf}{{Bb{bGh}}}{ACnBj}}{cc{}}{{FdACj}{{ACh{c}}}Bj}{{{ACh{c}}Fd}{{C`{c}}}Bj}{{}ACj}{{Hd{ACh{c}}{ACh{c}}}{{ACh{c}}}Bj}{{ACjHd}{{ACh{c}}}Bj}{{Hd{ACh{c}}}{{ACh{c}}}Bj}0{{}Fd}{ce{}{}}{{{ACh{c}}}{}Bj}{{{ACh{c}}Fd}dBj}0{{cFd}d{}}{{{ACh{c}}}{{ADb{AD`}}}Bj}{{{ACh{c}}}{{ADb{c{Fb{c}}AD`}}}Bj}{{{ACh{c}}}FdBj}0`{{{ACh{c}}{C`{Hd}}}bBj}{{{ACh{c}}FdFd}bBj}{{cFdFd}e{}{}}01{Ib{{Cf{Ib}}}}{{{ACh{c}}}{{Cf{Cd}}}Bj};{g{{Bb{{ACh{c}}e}}}Bj{}{{Gd{}{{Cb{{Bb{{C`{c}}e}}}}}}}}{g{{Bb{{ACh{c}}e}}}Bj{}{{Gd{}{{Cb{{Bb{ce}}}}}}}}{{ACjg}{{Bb{ie}}}{}{}{{Gd{}{{Cb{{Bb{ce}}}}}}}{}}0{c{{Bb{e}}}{}{}}0{cOf{}}{IbAh}{{}Ah}{{{ACh{c}}}{{C`{Hd}}}Bj}{{{ACh{c}}Fd}cBj}0{{{ACh{c}}Fd}{}Bj}{{{ACh{c}}}{{ADd{{Fj{c}}}}}Bj}{{{ACh{c}}}{{Fb{c}}}Bj}{{{ACh{c}}}{}Bj}{ce{}{}}{{{ACh{c}}{C`{Hd}}}{{Cf{Cd}}}Bj}{{{ACh{c}}{C`{Hd}}}{{ACh{c}}}Bj}0`{{{ADf{c}}}bBj}0{{{ADf{c}}{C`{c}}}bBj}{{{ADf{c}}c}bBj}{{{ADf{c}}ACl}bBj}{{{ADf{c}}ACl}{{Bb{bB`}}}Bj}77{{}{{ADf{c}}}Bj}{Fdc{}}0{Fdb}{{{ADf{c}}}{{j{{Bh{c}}}}}Bj}{cc{}}{{}Fd}={{AhFd}{{ADf{c}}}Bj}{{{ADf{c}}}AnBj}{c{{Bb{e}}}{}{}}0{cOf{}}{ce{}{}}````{ADhb}{{ADh{C`{ACl}}}b}{{ADhACl}b}33`<<;{{ADjGf}{{Bb{bGh}}}}:{{AhFd}{{Cf{ADh}}}}{{}{{ADd{Dd}}}}{{}ACj}<7{{}d}`{{{Cf{Dd}}{ADd{Dd}}ACj}b}{ADhAn}<<;:``````````````````````````````````````````````{{cf}b{}}00{{{ADn{}{{ADl{c}}}}g}{{ADn{}{{ADl{c}}}}}{}{}{{Dd{{C`{e}}}{{Db{{C`{c}}}}}}Df}}{{AE`Dd}AE`}{{AE`Dd}{{j{c}}}D`}{{{ADn{}{{ADl{c}}}}i{Al{g}}}b{}{}{}{{Dd{{C`{e}}g}{{Db{g}}}}}}{{{ADn{}{{ADl{c}}}}g}{{ADn{}{{ADl{c}}}}}{}{}{{Dd{e}{{Db{c}}}}Df}}{{AEbEh}{{j{Ej}}}}{{AEb{Al{An}}El}{{Bb{{j{Ej}}B`}}}}{AEd{{Bb{{j{Ej}}B`}}}}`{ce{}{}}00000{{AEfEb}{{Bb{AnB`}}}}0{EhEh}{ElEl}{AEhAEh}{{ce}b{}{}}00{{}Eh}{{}El}{Fdc{}}00000``{Fdb}00{{EhEh}d}{{ElEl}d}{{AEhAEh}d}{{{AEj{}{{Cb{c}}}}e}c{}{}}0{{ce}d{}{}}00000{AEl{{Bb{AnB`}}}}{AEl{{Bb{{Gb{An{G`{Fn}}}}B`}}}}`{{AEnc}{{Bb{AEnB`}}}{}}{{AF`{j{n}}}{{Bb{{j{c}}B`}}}D`}`{{EhGf}{{Bb{bGh}}}}{{ElGf}{{Bb{bGh}}}}{{AEhGf}{{Bb{bGh}}}}{ElEh}{cc{}}{EhEl}11`{{AhcFd}AFb{}}{{AhFd}AFd}`{{AFfFd}{{Bb{I`B`}}}}{{AFfFd}I`}??{{Ehc}bAFh}{{Elc}bAFh}{{AEhc}bAFh}{{}Fd}00{ce{}{}}00{AFj{{Bb{{j{n}}B`}}}}{AFl{{Bb{{j{n}}B`}}}}{{{AEj{}{{Cb{c}}}}e}c{}{}}0``{AFn{{C`{c}}}{}}{AFn{{C`{Kl}}}}{AG`{{C`{c}}}{}}2{AFn{{C`{{Gb{cc}}}}}{}}``{AEd{{Bb{FdB`}}}}{{}Eh}{{}El}{{AGbFdFd}{{j{c}}}D`}88``{AEl{{Bb{{G`{Fn}}B`}}}}{{AG`KlMh}{{Bb{{C`{c}}B`}}}{}}{AGdAn}0{AGfAGf}{{AGhDdMl}{{Bb{AnB`}}}}{{AGjc{C`{e}}}{{Bb{AGjB`}}}{{Gd{}{{Cb{Lb}}}}}{}}{{AGjci}{{Bb{AGjB`}}}{{Gd{}{{Cb{Lb}}}}}{}{}{{Dd{{C`{e}}}{{Db{{C`{g}}}}}}}}`{{AGj{j{n}}{C`{c}}}{{Bb{AGjB`}}}{}}{{AGlFn}{{j{c}}}D`}{{AGnFnc}{{j{e}}}{}D`}{{AH`FdFd}AH`}0`{{AEbd}{{j{c}}}D`}{{AEbEh}{{j{c}}}D`}{{AHbAj}{{C`{Kl}}}}{AFn{{C`{c}}}{}}{{AHdc}{{Bb{AHdB`}}}N`}{{AHfc}AHfN`}{AHh{{Fj{{Al{Aj}}}}}}{ce{}{}}00{c{{Bb{e}}}{}{}}00000{cOf{}}00{AEd{{Bb{AEdB`}}}}8333{{Ehd}Eh}{{Eld}El}101010{{Elc}El{{Gd{}{{Cb{d}}}}}}{EhEh}{ElEl}`{{AHj{j{n}}{j{c}}}{{Bb{{j{c}}B`}}}D`}``````{{{j{c}}{j{e}}gik}{{j{m}}}D`D`{{Dd{}{{Db{}}}}}{{Dd{}{{Db{}}}}}{{Dd{}{{Db{}}}}}D`}0{{{j{c}}{j{e}}i}{{j{k}}}D`D`Cd{{Dl{}{{Db{g}}}}}{{D`{}{{Gj{g}}}}}}{{{j{c}}{j{e}}g}{{j{i}}}D`D`{{AHl{C`C`}}}D`}{{{j{c}}{j{e}}g}bD`D`{{Dl{C`C`}}}}{{{j{c}}{j{e}}i}{{j{k}}}D`D`{}{{Dl{}{{Db{g}}}}}D`}{{{j{c}}{j{e}}iAh}{{j{k}}}D`D`{CdAHn}{{Dl{}{{Db{g}}}}}{{D`{}{{Gj{g}}}}}}{{{j{c}}{j{e}}iAh}{{j{k}}}D`D`Cd{{Dl{}{{Db{g}}}}}{{D`{}{{Gj{g}}}}}}5{{{j{c}}{j{e}}g}{{Bb{AnB`}}}D`D`{{Dl{}{{Db{{Cf{Cd}}}}}}}}{{{j{c}}{j{e}}gdd}{{j{c}}}D`D`{{Dl{}{{Db{{Cf{Cd}}}}}}}}64{{{j{c}}{j{e}}k}{{Bb{{j{m}}i}}}D`D`{}{}{{Dl{C`C`}{{Db{{Bb{{C`{g}}i}}}}}}}D`}{{{j{c}}{j{e}}{j{g}}i}{{j{k}}}D`D`D`{{AI`{C`C`C`}}}D`}{{{j{c}}{j{e}}k}{{Bb{{j{m}}i}}}D`D`CdAIb{{Dl{}{{Db{{Bb{gi}}}}}}}{{D`{}{{Gj{g}}}}}}2{{{j{c}}{j{e}}kAh}{{Bb{{j{m}}i}}}D`D`CdAIb{{Dl{}{{Db{{Bb{gi}}}}}}}{{D`{}{{Gj{g}}}}}}{{{j{c}}{j{e}}idd}{{Bb{{j{c}}g}}}D`D`AIb{{Dl{}{{Db{{Bb{{Cf{Cd}}g}}}}}}}}{{{j{c}}{j{e}}{j{g}}m}{{Bb{{j{o}}k}}}D`D`D`{}{}{{Dl{C`C`C`}{{Db{{Bb{{C`{i}}k}}}}}}}D`}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{}{}{{Dl{C`}{{Db{{Bb{{C`{e}}g}}}}}}}D`}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{}{}{{Dl{}{{Db{{Bb{eg}}}}}}}D`}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{CdAHn}AIb{{Dl{}{{Db{{Bb{eg}}}}}}}{{D`{}{{Gj{e}}}}}}{{{j{c}}e}{{j{g}}}D`{{AId{C`}}}D`}{{{j{c}}e}{{j{g}}}D`AIdD`}{{{j{c}}g}{{j{i}}}D`Cd{{Dl{}{{Db{e}}}}}{{D`{}{{Gj{e}}}}}}0{{{j{c}}g}{{j{i}}}D`{CdAHn}{{Dl{}{{Db{e}}}}}{{D`{}{{Gj{e}}}}}}0{{{j{c}}}FdA`}0{{IdId}Id}{{{j{Ej}}Lb}{{Bb{bB`}}}}{{{AIf{Lb}}Lb}{{Bb{bB`}}}}````{{cf}b{}}{{AIhcd}LbAHn}{ce{}{}}0{AIhAIh}{{ce}b{}{}}{{}AIh}{Fdc{}}0{Fdb}{{AIhAIh}d}{{ce}d{}{}}00{{AIhGf}{{Bb{bGh}}}}{cc{}}{{AIhc}bAFh}{{}Fd};{{{j{c}}}{{Gb{Fd{j{c}}}}}D`}<{c{{Bb{e}}}{}{}}0{cOf{}}>`{{Fd{Fj{d}}}b}```{{AH`FdFd}AH`}0{{Fd{Al{An}}El}{{Bb{{AIj{{j{Ej}}}}B`}}}}{{{Al{An}}{Al{d}}d}{{Bb{AIlB`}}}}{{Ah{Al{An}}{Al{d}}d}{{Bb{{j{Ef}}B`}}}}{{Ah{Al{An}}}{{Bb{{j{Ef}}B`}}}}{An{{Bb{{Cf{Cd}}B`}}}}{{{Al{An}}}{{Bb{AIlB`}}}}{{{Al{An}}}{{Bb{{j{Ef}}B`}}}}0```````````77`{AInFn}00{Ah{{Bb{EdB`}}}}{Ah{{Bb{AJ`B`}}}}{AJbFn}333```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{cf}b{}}00000000000000000000000000000000{{AJdc}AJd{{Dl{An}{{Db{An}}}}}}{AJfd}{I`{{`{{Ch{}{{Cb{I`}}}}}}}}{{I`{Fj{I`}}}b}{{{In{JhJf}}{In{JhJf}}}}{{I`I`}I`}{{{j{c}}An}{{Bb{AnB`}}}{}}0000000000{{{j{l}}An}{{Bb{AnB`}}}}{{{j{Af}}An}{{Bb{AnB`}}}}{{{j{n}}An}{{Bb{AnB`}}}}{{AJdBf}An}{{AJh{C`{Ah}}}b}{{AJfAJf}{{Bb{bB`}}}}{AJhb}{{AJhAh}b}{{AJfEh}{{j{Ej}}}}{eAJj{}{{Gd{}{{Cb{c}}}}}}0{{ACje}AJl{}{{Gd{}{{Cb{c}}}}}}0{I`I`}{{{In{IlIj}}}{{`{Hn}}}}{{{In{JdJ`}}}{{`{Hn}}}}{EbEb}{MjEb}{AJnEb}{{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}}{{C`{{Al{c}}}}}AB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{{In{JnJ`}}}{{`{Hn}}}}{ce{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000{Eb{{Cf{Eb}}}}{{{AKj{Ah}}}AKl}{{AJfAJfc}{{Bb{AJfB`}}}AKn}{{AL`Eb}{{Bb{AnB`}}}}{{{In{JnJ`}}Eb}{{Bb{AnB`}}}}{{{In{IlIj}}Eb}{{Bb{AnB`}}}}{{{In{JjJ`}}Eb}{{Bb{AnB`}}}}{{{In{JdJ`}}Eb}{{Bb{AnB`}}}}{{{In{JhJf}}Eb}{{Bb{AnB`}}}}{{AJfEb}{{Bb{AnB`}}}}{{AJdEb}{{Bb{AnB`}}}}{{I`Eb}I`}{{{In{JdJ`}}Jb}{{In{JdJ`}}}}{{{In{JjJ`}}Jb}{{In{JjJ`}}}}`{{{j{c}}An}{{Bb{AnB`}}}{}}00000000{{{j{E`}}An}{{Bb{AnB`}}}}{{{j{Dn}}An}{{Bb{AnB`}}}}{AJd{{Fj{{Cf{Cd}}}}}}{{{In{ce}}}{{In{ce}}}D`D`}{ALbALb}{AKlAKl}{AJfAJf}{AJdAJd}{ALdALd}{I`I`}{ALfALf}{EbEb}{MjMj}{JbJb}{LnLn}{M`M`}{EjEj}{LhLh}{KnKn}{LjLj}{IjIj}{J`J`}{E`E`}{DnDn}{IlIl}{JnJn}{ll}{AfAf}{EfEf}{nn}{JhJh}{JdJd}{JjJj}{ALhALh}{ACjACj}{ALjALj}{{ce}b{}{}}00000000000000000000000000000000{{MjEb}b}{ALle{}{{AJj{c}}AHn}}0{{ALlACj}e{}{{AJl{c}}AHn}}0{Ebd}00{{{AKj{Ah}}}Eb}{MjEb}{{{In{JjJ`}}}{{j{J`}}}}{{}ALn}{{}ALb}{{}AKl}{{}I`}{{}ALf}{{}Eb}{{}ACj}{Fdc{}}0{{{In{ce}}}{}D`D`}11111111111111111111111111111111111111111101111111111111111111111111111111111111111{{{In{JhJf}}{In{JhJf}}}}{{{j{c}}An}{{Bb{AnB`}}}{}}0000000000{{AJhc}AJf{{Gd{}{{Cb{{C`{Ah}}}}}}}}{Fdb}0000000000000{AJdb}1111111111111111111111111111{AL`Eb}{{{In{JjJ`}}}Eb}{{{In{JdJ`}}}Eb}{{{In{IlIj}}}Eb}{{{In{JnJ`}}}Eb}{{{In{JhJf}}}Eb}{AJfEb}{AJdEb}{I`Eb}`{{ALbALb}d}{{I`I`}d}{{ALfALf}d}{{EbEb}d}{{EbACj}d}{{MjMj}d}{{JbJb}d}{{ACjACj}d}{{ALjALj}d}{{I`I`d}d}{{AJfAh}}{{AJf{j{l}}}}{{AJfAJf}}{{AJdAJd}{{j{n}}}}3210{{ce}d{}{}}00000000000000000000{{{In{ce}}}MjD`D`}{{AJdAh}{{Bb{AnB`}}}}{AJd{{Al{An}}}}{AJd{{Fj{An}}}}{{AKlAh}{{C`{Lb}}}}{{AKn{j{Ej}}{j{Ej}}}{{Bb{{j{Ej}}B`}}}}{AJhAJf}{ALn{{ADd{AKl}}}}{{ALbGf}{{Bb{bGh}}}}{{AKlGf}{{Bb{bGh}}}}{{ALdGf}{{Bb{bGh}}}}{{I`Gf}{{Bb{bGh}}}}0{{ALfGf}{{Bb{bGh}}}}{{EbGf}{{Bb{bGh}}}}0{{MjGf}{{Bb{bGh}}}}{{JbGf}{{Bb{bGh}}}}0{{ACjGf}{{Bb{bGh}}}}{{ALjGf}{{Bb{bGh}}}}{cc{}}0{{{j{Ij}}}{{In{IlIj}}}}{{{j{J`}}}{{In{JnJ`}}}}22222222222222{{{C`{c}}}I`{{AM`{I`}}}}{cI`AMb}4{I`Eb}5{ACjEb}1{I`Mj}7{AMdMj}{ALjJb}999999999999999999999{AMfACj}{AMhACj};;{{ACjd}Eb}{{{j{Ej}}{ADd{AKl}}dALb}AJf}{{AhcJb}{{In{JjJ`}}}{{Gd{}{{Cb{AMj}}}}}}{{AhcJb}{{In{JjJ`}}}{{Gd{}{{Cb{{C`{AMj}}}}}}}}{{{j{Ej}}ALb}AJf}{{Ahc}{{In{IlIj}}}{{Gd{}{{Cb{AMl}}}}}}{{Ahc}{{In{IlIj}}}{{Gd{}{{Cb{{C`{AMl}}}}}}}}{{AhcJb}{{In{JdJ`}}}{{Gd{}{{Cb{AIn}}}}}}{{AhcJb}{{In{JdJ`}}}{{Gd{}{{Cb{{C`{AIn}}}}}}}}{{Ahc}{{In{JnJ`}}}{{Gd{}{{Cb{AJb}}}}}}{{Ahc}{{In{JnJ`}}}{{Gd{}{{Cb{{C`{AJb}}}}}}}}{{{AN`{AMn}}Eb}Mj}{{{j{l}}{AKj{Ah}}ALb}{{Bb{AJfB`}}}}{{{Fj{c}}ACj}{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}}AB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{{Fj{c}}ACj}{{AHn{}{{AK`{e}}{AKb{c}}{AKd{g}}}}}{AKf{AKh{e}}}AB`{{Fl{}{{Cb{e}}}}HnHhHj}}{{FdcACj}{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}}AB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{FdACj}{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}}AB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{AhdFdALb}AJf}{{AhFd}AJd}{{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}Fd}{{C`{c}}}AB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{AKlLb}Ah}{{{In{JjJ`}}Fd}{{Bb{I`B`}}}}{{{In{JnJ`}}Fd}{{Bb{I`B`}}}}{{{In{JhJf}}Fd}{{Bb{I`B`}}}}{{{In{IlIj}}Fd}{{Bb{I`B`}}}}{{{In{JdJ`}}Fd}{{Bb{I`B`}}}}{{AL`Fd}{{Bb{I`B`}}}}{{AJfFd}{{Bb{I`B`}}}}{{AJdFd}{{Bb{I`B`}}}}{{{In{JdJ`}}Fd}I`}{{{In{JnJ`}}Fd}I`}{{{In{JhJf}}Fd}I`}{{{In{IlIj}}Fd}I`}{{{In{JjJ`}}Fd}I`}{{AL`Fd}I`}{{AJfFd}I`}{{AJdFd}I`}{AKl{{AKj{Ah}}}}{{}Eb}000000000000000000000000{{AKlLb}{{C`{Ah}}}}{AJf{{ADd{AKl}}}}{I`{{C`{Ah}}}}{{ANbFd}I`}{{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}Fd}{{C`{c}}}AB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{AJfAh}}{{AJf{j{l}}}}{{AJfAJf}}{{AJdAJd}{{j{n}}}}2310{{I`c}bAFh}{{ALfc}bAFh}{{Ebc}bAFh}{{Jbc}bAFh}{{ACjc}bAFh}{{ALjc}bAFh}{{I`cd}bAFh}{{{In{JnJ`}}}{{j{Kn}}}}{{{In{JjJ`}}}{{j{J`}}}}{{}Fd}00000000000000000000000000000000000000000{Eb{{C`{Eb}}}}{ACj{{C`{ACj}}}}{ce{}{}}000000000000000000000000000000000000000000{AJd}{{{In{JdJ`}}}An}{{{In{JjJ`}}}An}{{{In{IlIj}}}An}{{{In{JnJ`}}}An}{{{In{JhJf}}}An}{AJfAn}{AJdAn}{I`{{Bb{I`B`}}}}{Ebd}00{I`d}11{AJfd}{AJdd}1323{AKld}34440443434344443444434{ACjd}{{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}}{{ADb{cgAD`}}}AB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{AJdACd}{AJfANd}{{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}}{{C`{c}}}AB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{AKlFd}{AJfFd}{AJdFd}{{AJfAh}}{{AJfAJf}}{{AJf{j{l}}}}{{AJdAJd}{{j{n}}}}3210{{AJfAJf}{{Bb{{Gb{AJfAJf}}B`}}}}{{{j{h}}{j{h}}}{{Bb{{Gb{{j{h}}{j{h}}}}B`}}}}{{EbEb}{{Bb{dB`}}}}{AJfAn}{{EbEb}{{Bb{EbB`}}}}{{ALn{ADd{AKl}}}{{Bb{bB`}}}}{{{In{JjJ`}}}{{j{J`}}}}03{{{In{JnJ`}}}{{j{Kn}}}}1{{{In{IlIj}}{C`{AJ`}}}{{Bb{{In{IlIj}}B`}}}}{{{In{JdJ`}}{C`{AJ`}}}{{Bb{{In{JdJ`}}B`}}}}10{{{In{JhJf}}{In{JhJf}}}}{{{j{c}}An}{{Bb{AnB`}}}{}}0000000000{AJf{{Bb{FdB`}}}}{AJfAh}{AJd{{AN`{AMn}}}}{Mj{{AN`{AMn}}}}`{{{In{JnJ`}}}{{j{Ij}}}}:{{}c{}}0{{AhFdALb}AJh}{{Ahc}{{In{IlIj}}}{{Hb{{Al{{C`{AMl}}}}}}}}{{Ahc}{{In{IlIj}}}{{Hb{{Al{AMl}}}}}}{{Ahc}{{In{JnJ`}}}{{Hb{{Al{AJb}}}}}}{{Ahc}{{In{JdJ`}}}{{Hb{{Al{AIn}}}}}}{{Ahc}{{In{JjJ`}}}{{Hb{{Al{{C`{AMj}}}}}}}}{{Ahc}{{In{JnJ`}}}{{Hb{{Al{{C`{AJb}}}}}}}}{{Ahc}{{In{JjJ`}}}{{Hb{{Al{AMj}}}}}}{{Ahc}{{In{JdJ`}}}{{Hb{{Al{{C`{AIn}}}}}}}}{{{ADd{AKl}}}ALn}{{Ah{Al{An}}}{{Bb{AJdB`}}}}{{AhEb}Mj}{ANdC`}{{AJf{j{l}}}}{{AJfAJf}}{{AJfAh}}{{AJdAJd}{{j{n}}}}1230{AJfFd}{AJdFd}{{Ah{Al{Ah}}Ah}{{In{IlIj}}}}{{Ah{Al{Ah}}Ah}{{In{JnJ`}}}}{{I`I`}{{C`{ANf}}}}{{JbJb}{{C`{ANf}}}}{AJf{{j{Ej}}}}{{{In{JhJf}}}{{C`{Fd}}}}{AJdb}{AJdMj}{{AJhAh}{{Gb{Lbd}}}}{{{j{c}}An}{{Bb{AnB`}}}{}}0000000000{{AJdAh}b}{{{In{JdJ`}}{j{l}}ANh{C`{AJ`}}}{{Bb{{In{JdJ`}}B`}}}}{{{In{IlIj}}{j{l}}ANh{C`{AJ`}}}{{Bb{{In{IlIj}}B`}}}}{AJd{{Bb{{j{Ef}}B`}}}}{{AKlAKl}d}{{{In{JhJf}}}Fd}{{{In{JnJ`}}}{{j{Kn}}}}{{{In{JjJ`}}}{{j{J`}}}}{{Mj{AN`{AMn}}}b}{{{In{JdJ`}}Jb}b}{{{In{JjJ`}}Jb}b}{{{In{JdJ`}}Ed}{{Bb{bB`}}}}{ANd{{Gb{Fd{C`{Fd}}}}}}{{AJfd}AJf}{{AJfEh}AJf}{{{In{IlIj}}Ah}{{j{l}}}}{{{In{JdJ`}}Ah}{{Bb{{j{l}}B`}}}}{{{In{JnJ`}}Ah}{{j{l}}}}{{I`Eb}{{C`{I`}}}}{{{In{JhJf}}{In{JhJf}}}}{{{j{c}}An}{{Bb{AnB`}}}{}}0000000000{{{In{JjJ`}}}Jb}{{{In{JdJ`}}}Jb}{{{In{JdJ`}}}{{C`{Ed}}}}{{AJfdd}{{Cf{Cd}}}}{{Ebd}ACj}{{Mjd}AMd}{JbALj}{{EbAhd}AMd}{JbAh}{{AJf{AKj{Ah}}ANj}AJf}{AJf{{Bb{AJfB`}}}}{AJfAJf}{ACjACj}{ce{}{}}00000000000000000000000000000000{EbEb}{ACjANl}{{{In{JnJ`}}Ah}{{j{l}}}}{{{In{IlIj}}Ah}{{j{l}}}}{{{In{JdJ`}}Ah}{{Bb{{j{l}}B`}}}}{cEd{}}00{AJdFd}{{{In{IlIj}}{C`{AJ`}}{j{l}}Ah}{{Bb{{In{IlIj}}B`}}}}{{{In{JdJ`}}{C`{AJ`}}{j{l}}Ah}{{Bb{{In{JdJ`}}B`}}}}{g{{Bb{AJje}}}{}{}{{Gd{}{{Cb{{Bb{ce}}}}}}}}0{{ACjg}{{Bb{AJle}}}{}{}{{Gd{}{{Cb{{Bb{ce}}}}}}}}0{ALl{{Bb{eg}}}{}{{AJj{c}}AHn}{}}0{{ALlACj}{{Bb{eg}}}{}{{AJl{c}}AHn}{}}0{I`{{Bb{cB`}}}Kj}{c{{Bb{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000{{I`Eb}{{Bb{I`B`}}}}{{Ebd}{{Bb{ACjB`}}}}{cOf{}}00000000000000000000000000000000000000000{ACjACj}{AJf{{Bb{AJfB`}}}}{AJdANn}{AJfd}{{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}Fd}cAB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{AJf{{Bb{ANnB`}}}}1{{EbI`}d}{{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}}gAB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{ce{}{}}00000000000000000000000000000000000000000{Fdc{}}0{{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}{C`{Hd}}}{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}}AB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}```````````{{AJfAJfc}{{Bb{AJfB`}}}AKn}{{AKn{j{Ej}}{j{Ej}}}{{Bb{{j{Ej}}B`}}}}{{AJfAJf}{{Bb{{Gb{AJfAJf}}B`}}}}{{{j{h}}{j{h}}}{{Bb{{Gb{{j{h}}{j{h}}}}B`}}}}`````````66{{}AO`}66{{}b}{Fdb}{AO`b}2{cc{}}4{{}Fd}<{c{{Bb{e}}}{}{}}0{cOf{}}{{}d}?`````````````````````````{AObAh}{ce{}{}}00000`{{B`AOb}B`}{B`B`}{Fdc{}}0{AOb}1111<<<`{{AOdGf}{{Bb{bGh}}}}{{AObGf}{{Bb{bGh}}}}0{{B`Gf}{{Bb{bGh}}}}0={cAOb{{AM`{{Dh{Ah}}}}}}>{AOfB`}{AOhB`}{AOjB`}{AOlB`}{AOnB`}{cc{}}{B@`B`}{{}{{Ff{AhAOd}{{Db{b}}}}}}{{}Fd}00{ce{}{}}00{cB`AIb}````{{{Ff{AhAOd}{{Db{b}}}}}b}{cB`B@b}{cEd{}}0{c{{Bb{e}}}{}{}}00000{cOf{}}00666```````````````````{{cf}b{}}00{{ANn{Fj{An}}B@d}{{Bb{bB`}}}}{{ANnDd}{{Fj{An}}}}0{{ANn{j{n}}}{{Bb{ANnB`}}}}{{ANn{Al{{AN`{AMn}}}}}{{Bb{ANnB`}}}}0{{ANnFnFd}ANn}{ANnANn}0{{ANnAhe}{{Bb{ANnB`}}}B@f{{Oj{An}{{Db{c}}}}}}{{ANnFde}{{Bb{ANnB`}}}B@f{{Oj{An}{{Db{c}}}}}}22??????????2{B@hB@h}{B@jB@j}4{{ce}b{}{}}00{{ANnAh}{{Bb{AnB`}}}}{{ANne}{{Bb{{Fj{An}}B`}}}{{Hb{Ah}}}{{Gd{}{{Cb{c}}}}}}{{}B@j}{{}ANn}{Fdc{}}000000000{Fdb}000{{ANnAh}{{Bb{ANnB`}}}}16{{ANn{Al{c}}}ANn{{Hb{Ah}}}}{{ANn{B@l{AhNf}}}ANn}{{ANn{C`{{Al{c}}}}}{{Bb{ANnB`}}}{{Hb{Ah}}}}{ANn{{Fj{Eb}}}}7{{B@jB@j}d}{{ANnANn}d}00{{ce}d{}{}}00{ANnFd}`{{ANne}{{Bb{ANnB`}}}{{Hb{Ah}}}{{Gd{}{{Cb{c}}}}}}{{ANn{Fj{An}}}{{Bb{ANnB`}}}}{{ANnANn}{{Bb{bB`}}}}{ANn{{Fj{Mj}}}}{{ANnAEh}{{Bb{ANnB`}}}}{{ANn{j{n}}}{{Bb{ANnB`}}}}{{B@hGf}{{Bb{bGh}}}}{{B@jGf}{{Bb{bGh}}}}{{ANnGf}{{Bb{bGh}}}}0{cc{}}000{B@dANn}{AJdANn}{B@nANn}3{g{{Bb{ic}}}{}{}{{Gl{c}{{Cb{e}}}}}{}}{cANn{{Gd{}{{Cb{An}}}}}}{{{Al{BA`}}}{{Bb{ANnB`}}}}{{{Al{BA`}}B@d}{{Bb{ANnB`}}}}{{cB@d}{{Bb{ANnB`}}}{{Ch{}{{Cb{BA`}}}}}}{{ANnFd}{{C`{{Fj{I`}}}}}}{{ANnAh}{{C`{Fd}}}}{ANn{{Fj{Ah}}}}{ANn{{Fj{{AN`{AMn}}}}}}{ANn{{Al{An}}}}{ANn{{Fj{An}}}}{{ANnFd}{{Bb{BA`B`}}}}{{ANnFdBA`}{{Bb{bB`}}}}{{ANnFdBA`}b}{ANn{{C`{{Bb{EbB`}}}}}}`{{ANne}{{Bb{BAbB`}}}{{Hb{Ah}}}{{Gd{}{{Cb{c}}}}}}{{ANn{Fj{An}}BAd}{{Bb{{Gb{An{Fj{An}}Bf}}B`}}}}1{{ANn{Fj{An}}dd}{{Bb{BAbB`}}}}{{B@jc}bAFh}{{ANn{C`{Fd}}}ANn}{ANnFd}{{ANn{Al{An}}}{{Bb{ANnB`}}}}0{{ANn{Al{An}}}ANn}{{ANn{BAf{Fd}}}}{{ANn{BAh{Fd}}}}{{ANnFd}}{{ANnAh}}{{ANn{Lf{Fd}}}}{{ANnBAj}}{{ANn{BAl{Fd}}}}{{ANn{BAn{Fd}}}}{{}Fd}0000{{ANnFdc}{{Bb{ANnB`}}}B@f}{ce{}{}}000000{{ANnAh}AJd}{ANn{{Bb{{j{n}}B`}}}}{ANnd}1{ANn{{Fb{An}}}}{{ANnd}BB`}{ANnBBb}{ANnBBd}{ANn{{Bb{{C`{An}}B`}}}}{{ANnB@h}{{Bb{{C`{An}}B`}}}}{{ANnce}{{Bb{ANnB`}}}{{BBf{{AN`{AMn}}}}}{{BBf{{AN`{AMn}}}}}}{{ANnBBh}{{Bb{ANnB`}}}}3{ANnFd}{{{Fj{c}}}{{Bb{ANnB`}}}B@f}{{{Fj{An}}}ANn}{{{Fj{An}}}{{Bb{ANnB`}}}}{BB`C`}{BBbC`}{ANnANn}{{ANne}{{Bb{cB`}}}{}{{Dd{ANn}{{Db{{Bb{cB`}}}}}}}}0{{ANngc}{{Bb{eB`}}}{}{}{{Dd{ANnc}{{Db{{Bb{eB`}}}}}}}}{ANn{{C`{An}}}}{{ANnANn}d}{{ANnAhAh}{{Bb{ANnB`}}}}{{ANnAhc}{{Bb{ANnB`}}}B@f}{{ANnFdc}{{Bb{ANnB`}}}B@f}17{{ANn{Fj{An}}BBj}{{Bb{{Gb{An{Fj{An}}Bf}}B`}}}}`{{ANnAndd{C`{Ih}}}{{Bb{ANnB`}}}}0{{ANnFddd{C`{Ih}}}{{Bb{ANnB`}}}}{ANnB@d}{{ANnANn}{{Bb{bB`}}}}{{ANne}{{Bb{ANnB`}}}{{Hb{Ah}}}{{Gd{}{{Cb{c}}}}}}{{ANnFd}{{C`{An}}}}{{ANnc}{{Bb{ANnB`}}}{{BBl{Fd}}}}2{{ANnc}{{Bb{{Fj{An}}B`}}}{{BBf{{AN`{AMn}}}}}}{{ANne{ADd{B@d}}}{{Bb{ANnB`}}}{{Hb{Ah}}}{{Gd{}{{Cb{c}}}}}}{{ANneB@d}{{Bb{ANnB`}}}{{Hb{Ah}}}{{Gd{}{{Cb{c}}}}}}{{ANn{Al{c}}}{{Bb{bB`}}}{{Hb{Ah}}}}{ANn{{Gb{FdFd}}}}{{ANnFn}ANn}{ANnd}{ANnb}{BB`{{Gb{Fd{C`{Fd}}}}}}{BBb{{Gb{Fd{C`{Fd}}}}}}{{ANnFnFd}ANn}0{{ANncEl}{{Bb{ANnB`}}}{{BBf{{AN`{AMn}}}}}}0{ANn{{`{{Ch{}{{Cb{ANn}}}}}}}}{{ANnFdd}{{Fj{ANn}}}}{{ANnB@h}{{Bb{{C`{An}}B`}}}}{{ANn{C`{Fd}}}ANn}{{ANn{j{Ej}}}{{Bb{ANnB`}}}}{{ANn{j{Ej}}}ANn}{{ANn{j{Ej}}d}ANn}{ANnANn}{{ANnBBn}{{Bb{{O`{Nj{Nn{{Nl{Fd}}}}}}B`}}}}{ce{}{}}00{cEd{}}{{ANnFdcEl}{{Bb{ANnB`}}}{{BBf{{AN`{AMn}}}}}}{{ANn{C`{Ah}}{C`{{Od{Ed{Fj{Ed}}}}}}}{{Bb{ANnB`}}}}{{ANnAhe}{{Bb{ANnB`}}}B@f{{Oj{An}{{Db{{Bb{cB`}}}}}}}}{{ANnFde}{{Bb{ANnB`}}}B@f{{Oj{An}{{Db{{Bb{cB`}}}}}}}}{c{{Bb{e}}}{}{}}0000{BC`{{Bb{ANnB`}}}}{{{Gb{{BCb{{Cf{Cd}}}}{Al{AMd}}}}}{{Bb{ANnB`}}}}{{cB@d}{{Bb{ANnB`}}}{{Ch{}{{Cb{{Bb{BA`B`}}}}}}}}{{ANnAh}{{Bb{FdB`}}}}44444{cOf{}}0000{{ANn{C`{{Al{Ed}}}}B@j{C`{{Gb{FnFd}}}}}{{Bb{ANnB`}}}}{{ANnd{C`{{Al{Ed}}}}B@j{C`{{Gb{FnFd}}}}}{{Bb{ANnB`}}}}1{{ANnc}{{Bb{ANnB`}}}{{BBf{Ed}}}}{{ANncAhANhANh}{{Bb{ANnB`}}}{{BBf{Ed}}}}0{{ANnANn}{{Bb{ANnB`}}}}0{ce{}{}}0000{ANnFd}{{ANnc}{{Bb{ANnB`}}}B@f}{{ANncB@d}{{Bb{ANnB`}}}B@f}{{ANnAn}ANn}{{ANnAh{C`{Lb}}}{{Bb{ANnB`}}}}{{ANnAh{C`{Lb}}}ANn}`{{cf}b{}}77{BBhBBh}{{ce}b{}{}}{{}BBh}{Fdc{}}0{Fdb}{{BBhBBh}d}{{ce}d{}{}}00{{BBhGf}{{Bb{bGh}}}}{cc{}}{{BBhc}bAFh}`{{}Fd}{ce{}{}}`0{c{{Bb{e}}}{}{}}0{cOf{}}```2````````````````````````````````>>>>{BAb{{Bb{ANnB`}}}}`{BCd{{Al{{BCf{Lb}}}}}}{{BAbc}{{Bb{ANnB`}}}{{Dl{ANn}{{Db{{Bb{ANnB`}}}}}}HhHj}}{Bf{{j{h}}}}6666666666666666{BCdBCd}{BfBf}{BAbBAb}{BChBCh}{{ce}b{}{}}0008{{}BCd}{{}Bf}{Fdc{}}000{BCj}111111111111`{{BClc}{}BCn}{Fdb}0000{BCdb}111{{BCdBCd}d}{{BfBf}d}{{ce}d{}{}}00000`{BD`Lb}{BCd{{Al{Lb}}}}{BAb{{Bb{ANnB`}}}}{BCd{{Fj{Lb}}}}{{BCdGf}{{Bb{bGh}}}}{{BfGf}{{Bb{bGh}}}}{{BAbGf}{{Bb{bGh}}}}{{BChGf}{{Bb{bGh}}}}0{{AhBCh}Ed}{cc{}}000{{{Fj{{Fj{{Gb{Lb{BCf{Lb}}}}}}}}}BCd}1{{{Fj{{Gb{Lb{BCf{Lb}}}}}}}BCd}{{{Fj{{Gb{{Fj{Lb}}{Fj{{BCf{Lb}}}}}}}}}BCd}3{BCdBf}44{BDbBCh}{g{{Bb{ic}}}{}{}{{Gl{c}{{Cb{e}}}}}{}}{cBCd{{Gd{}{{Cb{{Gb{Lb{BCf{Lb}}}}}}}}}}{cBCd{{Hf{}{{Cb{{Gb{Lb{BCf{Lb}}}}}}}}}}{{BfFd}BD`}{BAbBf}0{Bf{{j{Ej}}}}{{BDddd}{{Bb{BfB`}}}}{BAb{{Bb{ANnB`}}}}{BfBCd}{{}Fd}0000000{ce{}{}}000000020{BCd}0100{BD`d}{Bfd}{BCdd}{BCd{{BDh{{BDf{{Fb{Lb}}}}{Fb{{BCf{Lb}}}}}}}}{BfBDj}{BAb{{Fj{An}}}}{{BAb{C`{{Gb{FnFd}}}}}{{Fj{An}}}};{BD`Fd}{BfFd}====={{{Fj{Lb}}{Fj{{BCf{Lb}}}}d}BCd}{{ANn{Fj{An}}Bf{C`{{Fj{Ed}}}}}BAb}{BDjC`}{{BDjFd}C`}{{BAbc}{{Bb{ANnB`}}}{{Dd{ANn}{{Db{{Bb{ANnB`}}}}}}HhHj}}{c{}{}}{BfBCl}{{BAbKlMh}{{Bb{ANnB`}}}}{{BAbe}BAb{{Hb{Ah}}}{{Gd{}{{Cb{c}}}}}}{{BfFnFd}BCj}{BCdb}{Bfb}{{BAbAj}{{Bb{ANnB`}}}}{BAb{{Bb{ANnB`}}}}{Bf{{Fj{Lb}}}}0{BAbBf}0{ce{}{}}000{cEd{}}{c{{Bb{e}}}{}{}}000000000000000{cOf{}}0000000{BfBf}{BfBCd}{Bf{{Fj{{Nl{Lb}}}}}}:66666666`````{{BCdc}An{{Dd{{Gb{Lb{BCf{Lb}}}}}{{Db{C`}}}}HhHj}}{{BCdc}An{{Dd{{Gb{Lb{BCf{Lb}}}}}{{Db{}}}}HhHj}}{{{Al{{Nl{Lb}}}}c}An{{Dd{{Nl{Lb}}}{{Db{C`}}}}HhHj}}{{{Al{{Nl{Lb}}}}c}An{{Dd{{Nl{Lb}}}{{Db{}}}}HhHj}}{{{Al{c}}e{C`{{ADd{ACl}}}}}{{AIf{c}}}{BDlBDn}{{Ch{}{{Cb{{Gb{LbLb}}}}}}Hn}}{{{Al{c}}Hde{C`{{ADd{ACl}}}}}{{AIf{c}}}{BDlBDn}{{Ch{}{{Cb{{Gb{LbLb}}}}}}Hn}}{{{j{c}}LbLb}{{j{c}}}D`}{{{Fj{{Nl{Lb}}}}{Al{{Cf{Cd}}}}}d}{{BE`Bf}An}{{BEbBEb}BEb}0`{{BEdANnBf}{{Bb{AnB`}}}}{BEd{{Bb{AhB`}}}}````````````````````````````````````{{cf}b{}}00{{BEfI`}{{C`{b}}}}{{BEhI`}b}0{ce{}{}}00000{BEfBEf}{BEhBEh}{BA`BA`}{{ce}b{}{}}00{{{Al{c}}}Eb{{H`{Eb}}}}{{}BA`}{Fdc{}}00000{Fdb}00{{BA`BA`}d}{{ce}d{}{}}00{{BA`Gf}{{Bb{bGh}}}}{cc{}}{{{Gb{EbFd}}}BEf}{{{Gb{EbFd}}}BEh}22{{eFd}B@d{{AM`{Eb}}}{{Ch{}{{Cb{{Fj{{Gb{Edc}}}}}}}}}}{{}Fd}00{ce{}{}}00{BEfAn}{BEhAn}{{EbFd}BEf}{{EbFd}BEh}{{{Fj{I`}}}BA`}{{BEfFd}An}{{BEhFd}An}{{{Al{BA`}}{C`{Fd}}}{{Bb{B@dB`}}}}0{{{Al{BA`}}{C`{Fd}}}{{Bb{{Fj{Eb}}B`}}}}999{c{{Bb{e}}}{}{}}00000{cOf{}}00;;;{{{Al{ANn}}}{{Bb{ANnB`}}}}0``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{cf}b{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000{{ANn{Al{Ah}}{Al{Ah}}{C`{Ah}}ANn}ANn}{{BEj{Al{Lb}}dd}ANn}{{BEj{Gb{{Od{{Fj{Lb}}{Fj{Nb}}}}{Od{{Fj{Oh}}{Fj{Nb}}}}}}ANnBEl}{{Bb{ANnB`}}}}{{AhAh}Ed}{{BEjANnAnAnBEld{C`{{Al{Ah}}}}}{{Bb{ANnB`}}}}{{BEjANnAnAnBEl}{{Bb{ANnB`}}}}{BEn{{Bb{AnB`}}}}{{BF`{Al{Nb}}Id}ANn}0{{BF`{Al{Nb}}}ANn}0{{BFb{C`{{Fj{Ah}}}}{C`{Ah}}d}{{Bb{ANnB`}}}}{{{BFd{c}}{C`{BFf}}}{{BFd{c}}}BFh}{{BBdd}BBd}{An{{Bb{AnB`}}}}{BFjBFj}{{{BFl{}{{Db{c}}}}An}c{}}{{BFjBFj}}{{ANhFn{C`{AJ`}}}{{Bb{FnB`}}}}0{{BFnAn}{{Bb{AnB`}}}}1{{BG`c}BBd{{Hb{{Al{BFj}}}}}}5`{{BFjAh}BFj}{{}BFj}{{BFjd}BFj}{c{{Bb{BFjB`}}}{{Hb{{Al{BFj}}}}}}{{{ADd{ce}}}e{}BGb}{{BGdd}BGd}`{BGfd}0{BGhd}1`{{BFjc}BFj{{AM`{BFj}}}}{{{ADd{BGf}}BGj}{{Bb{BBdB`}}}}76{{BFjcd}BFj{{AM`{BFj}}}}{A@lb}{A@nb}{{A@l{C`{An}}}{{Bb{bB`}}}}{{A@n{C`{c}}}b{}}{{A@lAn}{{Bb{bB`}}}}{{A@nc}b{}}{{{ADn{}{{ADl{c}}}}g}{{ADn{}{{ADl{c}}}}}{}{}{{Dd{{C`{e}}}{{Db{{C`{c}}}}}}Df}}{{BG`c{ADd{B@d}}}BBd{{Dd{ANn}{{Db{{Bb{ANnB`}}}}}}HhHj}}{{BFjc{BGn{{ADd{BGl}}}}}BFj{{Dd{An}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}}{{BFjBFjc{BGn{{ADd{BGl}}}}}BFj{{Dd{AnAn}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}}{{BFjc}{{Bb{BH`B`}}}{{Dl{BFj}{{Db{{Bb{BH`B`}}}}}}}}{{AE`Dd}AE`}{{AE`Dd}{{j{c}}}D`}{{BFjc{Al{BFj}}{BGn{{ADd{BGl}}}}}BFj{{Dd{{Al{An}}}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}}{{BFjBHb{Al{BFj}}dd}BFj}{{ce{BGn{{ADd{BGl}}}}d}BFj{{Dd{{Al{An}}}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}{{Hb{{Al{BFj}}}}}}{{{ADn{}{{ADl{c}}}}i{Al{g}}}b{}{}{}{{Dd{{C`{e}}g}{{Db{g}}}}}}{{{ADn{}{{ADl{c}}}}g}{{ADn{}{{ADl{c}}}}}{}{}{{Dd{e}{{Db{c}}}}Df}}{{BFjBFjFnEb}BFj}{BC`{{ADd{Cd}}}}{BHd{{C`{Fd}}}}{BHfBFj}{BHhBFj}{BFjBFj}3210{{AEbEh}{{j{Ej}}}}{{BFjEh}BFj}{{BEnEh}{{j{Ej}}}}{{cEl}BFj{{Hb{{Al{BFj}}}}}}{{AEb{Al{An}}El}{{Bb{{j{Ej}}B`}}}}{AEd{{Bb{{j{Ej}}B`}}}}6{BEn{{Bb{{j{Ej}}B`}}}}{cBFj{{AM`{BFj}}}}``{BFjBHf}{eAJj{}{{Gd{}{{Cb{c}}}}}}0{{ACje}AJl{}{{Gd{}{{Cb{c}}}}}}0`{{{BHj{c}}}{{Bb{B@nB`}}}BHl}{BGfACl}{BEnACl}{BHnACl}{BGhACl}{BC`ACl}30{BI`{{j{Af}}}}{{BIb{C`{Ah}}d}{{Bb{{In{IlIj}}B`}}}}{{BIb{C`{Ah}}}{{Bb{{In{IlIj}}B`}}}}{{BIb{C`{Ah}}Jbdd{C`{Ed}}{j{l}}}{{Bb{{In{JdJ`}}B`}}}}{{BIb{C`{Ah}}Jbd{C`{Ed}}{j{l}}}{{Bb{{In{JdJ`}}B`}}}}{BId{{C`{BFj}}}}{{{ADd{c}}}BIf{BIhN`}}{BIj{{j{h}}}}{BId{{C`{BIl}}}}{{{ADd{ce}}}{}N`BGb}{{{ADd{c}}}LdBIn}{BJ`BFj}{{{ADd{ce}}}cN`BGb}{AJnEb}{BJbAn}{BEn{{Bb{FdB`}}}}{{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}}{{C`{{Al{c}}}}}AB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{BId{{C`{BJd}}}}{BJf{{C`{BJd}}}}{BJh{{j{l}}}}{{{Fj{BFj}}}BFj}{{BIb{C`{Ah}}d}{{Bb{{In{JnJ`}}B`}}}}{{{ADd{{Al{{BJj{c}}}}e}}}{{ADd{{Al{c}}e}}}{}BGb}{{{ADd{{BJj{c}}e}}}{{ADd{ce}}}{}BGb}{AhBFj}{{BFj{C`{Lb}}}BFj}{BJl{{Bb{{j{l}}B`}}}}{BJl{{j{l}}}}{{{In{JdJ`}}JbAJ`}{{In{JjJ`}}}}`{{{BJn{c}}B@d}{{Bb{{BK`{c}}B`}}}BKb}{{{BKd{c}}B@d}{{Bb{{BKf{c}}B`}}}BKb}{{{BKh{c}}Fd}{{Bb{BKjB`}}}BFh}{{{BKl{c}}B@d}{{Bb{{BKn{c}}B`}}}BKb}{{{BFd{c}}}{{Bb{BL`B`}}}BFh}{{{BFd{c}}}{{Bb{BLbB`}}}BFh}{{{BFd{{Cf{BFh}}}}{C`{{ADd{B@d}}}}}{{Bb{BLdB`}}}}{{{BFd{{Cf{BFh}}}}{C`{{ADd{B@d}}}}}{{Bb{BLfB`}}}}`{BFjBLh}{{BFjBLjBFj}BFj}{{BEnAn}{{Bb{AnB`}}}}00{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{ADd{ce}}}cN`BGb}1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111{{BBdLbcEl}BBd{{Hb{{Al{BFj}}}}}}{BC`{{Cf{Cd}}}}```{BBdBBd}```{{BLlAh}{{Bb{EdB`}}}}{{BLn{Fj{BFj}}}{{Bb{BFjB`}}}}{{AJfAJfc}{{Bb{AJfB`}}}AKn}{{BHn{Al{An}}}{{Bb{{C`{An}}B`}}}}{{BM`AnAn}{{Bb{AnB`}}}}{{BLn{Fj{BFj}}}BFj}{BMbb}{{BFjEb}BFj}{{AEfEb}{{Bb{AnB`}}}}{{AL`Eb}{{Bb{AnB`}}}}{{BEnEb}{{Bb{AnB`}}}}{{BBd{BMd{AhEbNf}}d}BBd}4{{BBdEbd}BBd}4`{BFjBMf}{{{ADd{c}}}{{C`{AIb}}}{AIbN`}}{BFjBFj}{BMh{{Bb{AnB`}}}}1```{BMj{{Bb{{j{Ij}}B`}}}}{{B@nB@n{C`{{Al{Ed}}}}Ah}{{Bb{bB`}}}}{{B@dB@d{C`{{Al{Ed}}}}Ah}{{Bb{bB`}}}}0``{{BMlAn}{{Bb{AnB`}}}}{{BEnAn}{{Bb{AnB`}}}}{{BMlc}{{Bb{AnB`}}}Ad}{BEn{{Fh{{Fb{{Cf{Cd}}}}{Ff{{Cf{Cd}}}{{Db{Fd}}}}}}}}`{BEn{{Fj{{Cf{Cd}}}}}}0{{AnAnAn}{{Bb{AnB`}}}}{{BFjBFjBFj}BFj}{{AnAn}{{Bb{AnB`}}}}{{BFjBFj}BFj}10{BMnBMn}{BAdBAd}{BBjBBj}{BN`BN`}{ANhANh}{BNbBNb}{BNdBNd}{BNfBNf}{BNhBNh}{OhOh}{NbNb}{BNjBNj}{BNlBNl}{BNnBNn}{BFfBFf}{BMbBMb}{BBdBBd}{BG`BG`}{BO`BO`}{BObBOb}{BOdBOd}{BOfBOf}{BOhBOh}{BOjBOj}{BOlBOl}{BElBEl}{BOnBOn}{C@`C@`}{C@bC@b}{C@dC@d}{C@fC@f}{C@hC@h}{C@jC@j}{C@lC@l}{C@nC@n}{CA`CA`}{CAbCAb}{CAdCAd}{BGjBGj}{CAfCAf}{CAhCAh}{CAjCAj}{CAlCAl}{CAnCAn}{CB`CB`}{CBbCBb}{BGhBGh}{CBdCBd}{CBfCBf}{CBhCBh}{CBjCBj}{CBlCBl}{CBnCBn}{BJ`BJ`}{BFjBFj}{CC`CC`}{BLjBLj}{{{BGn{c}}}{{BGn{c}}}AB`}{CCbCCb}{BHbBHb}{CCdCCd}{CCfCCf}{CChCCh}{CCjCCj}{CClCCl}{CCnCCn}{CD`CD`}{BLnBLn}{CDbCDb}{CDdCDd}{CDfCDf}{{{ADd{ce}}}{{ADd{ce}}}N`{BGbAB`}}{CDhCDh}{MlMl}{BBnBBn}{B@dB@d}{BC`BC`}{AMdAMd}{B@nB@n}{MhMh}{CDjCDj}{CDlCDl}{CDnCDn}{BEn{{ADd{BEn}}}}{{ce}b{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000`````{CE`{{C`{CEb}}}}``{{ANhANh}ANf}{{{ADd{ce}}{ADd{ce}}}ANf{CEdN`}BGb}{{{Al{BFj}}}BFj}{{BGdC@`}BGd}{{C@`C@d}d}`{{{Al{An}}}{{Bb{AnB`}}}}{AhBFj}{BBd{{Bb{ANnB`}}}}{c{{Bb{{Fj{ANn}}B`}}}{{Hf{}{{Cb{BBd}}}}}}{ALle{}{{AJj{c}}AHn}}0{{ALlACj}e{}{{AJl{c}}AHn}}0{{ABfAh}{{j{c}}}D`}{{ABh{j{c}}}{{j{c}}}D`}10{{ABhAhEb}{{j{c}}}D`}0{BBd{{Bb{BMbB`}}}}{cBFj{{BBf{Ed}}}}{{CDhFd}CEf}`{{BFb{Fj{Ah}}{C`{Ah}}d}{{Bb{ANnB`}}}}`{{ce}ANf{}{}}0``{CBf{{Bb{{ADd{B@d}}B`}}}}{{cBNn}{{Bb{BBdB`}}}{{Hb{{Al{BBd}}}}}}{{BJl{j{l}}}{{j{l}}}}{{ed}{{Bb{BFjB`}}}{{AM`{BFj}}AB`}{{Hb{{Al{c}}}}}}{{CE`{Fj{BBd}}}{{Bb{BBdB`}}}}{{CAf{Fj{BBd}}}{{Bb{BBdB`}}}}44{e{{Bb{BFjB`}}}{{AM`{BFj}}AB`}{{Hb{{Al{c}}}}}}{{cAhd}BFj{{Hb{{Al{BFj}}}}}}{{BHfc}BFj{{AM`{BFj}}}}{{CEh{Al{Aj}}}{{j{n}}}}{{BJlAhd}{{Bb{{j{n}}B`}}}}{{BHhc}BFj{{AM`{BFj}}}}{{B@dAh}d}{{CEh{j{Af}}}{{j{n}}}}{{BJl{j{l}}dd}{{Bb{{j{n}}B`}}}}{{BJlAh}{{Bb{{j{n}}B`}}}}{{CdACj}{{Cf{Cd}}}}{{AnFd}{{Bb{{j{Ej}}B`}}}}{BBdBBd}{BFjBFj}{{BJlAhd}{{Bb{{j{Ej}}B`}}}}{{BJl{j{l}}d}{{Bb{{j{Ej}}B`}}}}{{CEjAj{C`{Aj}}{C`{BFf}}Ajd}{{Bb{FdB`}}}}{{{AKj{Ah}}}Eb}{{BEj{Al{Nb}}d}ANn}{{CElc}{{Cf{CEn}}}BKb}{{CF`c}{{Cf{CEn}}}BKb}`{{CFbANn{C`{Ah}}{C`{{Gb{FnFd}}}}}{{Bb{ANnB`}}}}{{BBdBBd}BBd}{{CFbANn{C`{{Gb{FnFd}}}}d}{{Bb{{Gb{ANnANn}}B`}}}}{{And}{{Bb{AnB`}}}}{{BFjd}BFj}{{BFjced}BFj{{Dd{AnAn}{{Db{{Bb{{C`{An}}B`}}}}}}HhHjAB`}{{Hb{{Al{BFj}}}}}}212121{{ce}BFj{{Dd{AnAn}{{Db{{Bb{{C`{An}}B`}}}}}}HhHjAB`}{{Hb{{Al{BFj}}}}}}32{{CFdBFjFdd}BFj}`{BC`ACj}{AMdACj}```{{BFjBFjANhBNb{C`{Jb}}{C`{Ed}}}BFj}`{CCdBFj}`11{AInFn}00{CFf{{j{Kn}}}}{CFh{{j{Kn}}}}{BMj{{Bb{{j{Kn}}B`}}}}`{CFj{{j{J`}}}}{ANhFn}`{ANhd}```{{}b}{cbBGb}{{}BMn}{{}CEl}{{}BAd}{{}BBj}{{}CF`}{{}BNf}{{}BNj}{{}BNl}{{}BNn}{{}BBd}{{}BOb}{{}BOd}{{}BOh}{{}BOl}{{}BEl}{{}BOn}{{}C@`}{{}C@b}{{}C@f}{{}C@j}{{}C@l}{{}C@n}{{}CA`}{{}CAb}{{}CAd}{{}BGj}{{}CAn}{{}CB`}{{}CBd}{{}CBf}{{}BFj}{{}{{BGn{{ADd{BGl}}}}}}{{}{{BGn{{ADd{CFl}}}}}}{{}{{BGn{{ADd{BM`}}}}}}{{}CCd}{{}CCf}{{}CCj}{{}CCl}{{}CCn}{{}CD`}{{}CDb}{{}CDf}{{}{{ADd{c}}}CFn}{{}Ml}{{}BBn}{{}B@d}{{}AMd}{{}B@n}{{}Mh}`{{}{{Od{{Fj{Oh}}{Fj{Nb}}}}}}{Fdc{}}{{{AIj{c}}}{}{}}1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{BGn{c}}}{}{}}22222222222222{{{ADd{ce}}}cN`BGb}333333333333333323333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333```{CBfEd}{BBd{{Bb{EdB`}}}}0{BBdEd}02{{{ADd{c}}}Ah{AIbN`}}{{AMdCG`}{{Bb{CGbB`}}}}``{{AnFnCGd}{{Bb{AnB`}}}}{{BHhFnCGd}BFj}{{BFjFnCGd}BFj}`{{{BFl{}{{Db{c}}}}An}c{}}{{BFjBFj}}{{BFnAn}{{Bb{AnB`}}}}{{CBfEd{Gb{FdFd}}CGf{BMd{EdEdNf}}}{{Bb{bGh}}}}{{BFjc}BFj{{AM`{BFj}}}}{{{ADd{AClc}}}{{Bb{{ADd{ec}}{ADd{AClc}}}}}BGb{AClHhHj}}{{{ADd{AClc}}}{{ADd{ec}}}BGb{AClHhHj}}{{{ADd{ce}}}{{CGh{ce}}}N`{AB`BGb}}{Fdb}0000{BLdb}11{BLfb}222222222222222222222222222222222222222{BMbb}3{{BBde}BBd{{Hb{Ah}}}{{Gd{}{{Cb{c}}}}}}444444444444444444444444444444444444444444444444444444444{{{ADd{ce}}}bN`BGb}5555555555555{BFjBFj}{{BBd{C`{{Fj{BFj}}}}}BBd}1{BEnAn}{{{In{JdJ`}}JbAJ`}{{In{JjJ`}}}}`{BFjCGj}{AL`Eb}{BEnEb}`{EbBFj}{cBFj{{Hb{{Al{Eb}}}}}}{CCfBFj}``{ce{}{{CGn{CGl}}}}0`{{CEh{Al{Aj}}}{{j{n}}}}{{CEh{j{Af}}}{{j{n}}}}{{ANhEbAh}{{Bb{bB`}}}}{{ANh{C`{Ah}}Ah}{{Bb{bB`}}}}`{{BAdBAd}d}{{BBjBBj}d}{{ANhANh}d}{{BNbBNb}d}{{BNdBNd}d}{{BNfBNf}d}{{OhOh}d}{{BNjBNj}d}{{BNlBNl}d}{{BFfBFf}d}{{BO`BO`}d}{{BObBOb}d}{{BOdBOd}d}{{BOfBOf}d}{{BOhBOh}d}{{BOjBOj}d}{{BOlBOl}d}{{BElBEl}d}{{BOnBOn}d}{{C@`C@`}d}{{C@bC@b}d}{{C@dC@d}d}{{C@fC@f}d}{{C@hC@h}d}{{C@jC@j}d}{{C@lC@l}d}{{C@nC@n}d}{{CA`CA`}d}{{CAbCAb}d}{{CAdCAd}d}{{CAhCAh}d}{{CAjCAj}d}{{CAlCAl}d}{{CB`CB`}d}{{CBbCBb}d}{{BJ`BJ`}d}{{BFjBFj}d}{{BFjc}BFj{{AM`{BFj}}}}{{CC`CC`}d}{{BLjBLj}d}{{{BGn{An}}{BGn{An}}}d}{{{BGn{{ADd{c}}}}{BGn{{ADd{c}}}}}dN`}{{CCbCCb}d}{{BHbBHb}d}{{CChCCh}d}{{CCjCCj}d}{{CClCCl}d}{{CCnCCn}d}{{CD`CD`}d}{{CDdCDd}d}{{CDfCDf}d}{{{ADd{CH`}}CH`}d}{{{ADd{Cd}}Cd}d}{{{ADd{ce}}{ADd{ce}}}d{CHbN`}BGb}{{CGbCGb}d}{{BBnBBn}d}{{B@dB@d}d}{{BC`Cd}d}{{BC`BC`}d}{{AMdAMd}d}{{B@nB@n}d}{{MhMh}d}{{CDnCDn}d}{{BFjc}BFj{{AM`{BFj}}}}{{{AEj{}{{Cb{c}}}}e}c{}{}}0{{ce}d{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CHdBFjd}BFj}{{BIdANnCHf}{{Bb{AnB`}}}}{{BJfANn}{{Bb{AnB`}}}}{{BIdANnBfCHf}{{Bb{CHhB`}}}}{{BIlANnBfCHf}{{Bb{AnB`}}}}``{{BFjc}BFj{{BBf{Ed}}}}{{BFjc}BFj{{Hb{{Al{Eb}}}}}}{{ce}{{Bb{gB@`}}}{}CHj{}}{{BBdd}{{Bb{EdB`}}}}{AEl{{Bb{AnB`}}}}{{BBde}BBd{{AM`{BFj}}AB`}{{Hb{{Al{c}}}}}}{BFjBFj}{AEl{{Bb{{Gb{An{G`{Fn}}}}B`}}}}``{{BFjBFjBFj}BFj}{CElCEj}{CF`CEj}{{BJl{j{l}}Fd}{{Bb{{j{l}}B`}}}}{Nb{{Gb{LbLb}}}}{{BJlAh}{{Bb{{j{h}}B`}}}}{{BJl{j{l}}}{{Bb{{j{h}}B`}}}}{{BJlAhEb}{{Bb{AnB`}}}}{A@ld}``{BMb{{C`{{Bb{ANnB`}}}}}}{{BBdFd}{{Bb{ANnB`}}}}{BMb{{Bb{ANnB`}}}}{A@lMj}{BEn{{Dh{Mj}}}}{{CHlFn}BFj}{{CHlAh}BFj}{BC`{{Al{AMd}}}}```{{BBdc}BBd{{AM`{BFj}}}}{{BFjc}BFj{{AM`{BFj}}}}`10{{BFjAEh}BFj}{{AEnc}{{Bb{AEnB`}}}{}}{{AF`{j{n}}}{{Bb{{j{c}}B`}}}D`}{{BEn{j{n}}}{{Bb{AnB`}}}}{{BBdBFj}BBd}5{{B@nc}B@n{{Dd{FdAMd}{{Db{d}}}}}}{{BIlAnBfCHf}{{Bb{AnB`}}}}{{BJlAhd}{{Bb{{j{Ej}}B`}}}}{{BJl{j{l}}dd}{{Bb{{j{Ej}}B`}}}}{{BJlAh}{{Bb{{j{Ej}}B`}}}}{CHn{{Bb{ANnB`}}}}{{CEnANn}{{Bb{bB`}}}}{A@n{{j{c}}}D`}{{AKn{j{Ej}}{j{Ej}}}{{Bb{{j{Ej}}B`}}}}{BGdBBd}{{{BFd{c}}}{{Bb{ANnB`}}}BFh}{{{BJn{c}}ANn}{{Bb{bB`}}}BKb}{{{CI`{c}}}{{Bb{ANnB`}}}BFh}{{{BHj{c}}}{{Bb{ANnB`}}}BHl}{{{CIb{c}}ANn}{{Bb{bB`}}}BKb}{{{BKd{c}}ANn}{{Bb{bB`}}}BKb}{{{CId{c}}ANn}{{Bb{bB`}}}BKb}{{{CIf{c}}}{{Bb{ANnB`}}}BFh}{{{CIh{c}}}{{Bb{ANnB`}}}BFh}{{{BKh{c}}}{{Bb{ANnB`}}}BFh}{{{BKl{c}}ANn}{{Bb{IhB`}}}BKb}{CE`{{Bb{BBdB`}}}}{A@l{{j{h}}}}1{CAf{{Bb{BBdB`}}}}{BGh{{Bb{BBdB`}}}}{{{CI`{c}}{C`{{ADd{CIj}}}}d}{{Bb{ANnB`}}}BFh}{{BKjFd}d}{{}BFj}{BHhBFj}{BBdBBd}{BFjBFj}`0``{{}{{BGn{{ADd{BGl}}}}}}{BMh{{Bb{AnB`}}}}2{{BFjBFj}BFj}{{AnAn}{{Bb{AnB`}}}}{{{ADd{CIl}}}{{Bb{bB@`}}}}{{BHnGf}{{Bb{bGh}}}}{{BM`Gf}{{Bb{bGh}}}}{{BLlGf}{{Bb{bGh}}}}{{BAdGf}{{Bb{bGh}}}}{{BBjGf}{{Bb{bGh}}}}{{BN`Gf}{{Bb{bGh}}}}{{ANhGf}{{Bb{bGh}}}}0{{BNbGf}{{Bb{bGh}}}}{{BNdGf}{{Bb{bGh}}}}{{BNfGf}{{Bb{bGh}}}}{{OhGf}{{Bb{bGh}}}}{{NbGf}{{Bb{bGh}}}}{{BIdGf}{{Bb{bGh}}}}{{BGfGf}{{Bb{bGh}}}}{{CInGf}{{Bb{bGh}}}}{{BNjGf}{{Bb{bGh}}}}{{BNlGf}{{Bb{bGh}}}}{{BFfGf}{{Bb{bGh}}}}{{BO`Gf}{{Bb{bGh}}}}{{BObGf}{{Bb{bGh}}}}{{BOdGf}{{Bb{bGh}}}}{{BOfGf}{{Bb{bGh}}}}{{CHhGf}{{Bb{bGh}}}}{{BOhGf}{{Bb{bGh}}}}{{BOjGf}{{Bb{bGh}}}}{{BOlGf}{{Bb{bGh}}}}{{BElGf}{{Bb{bGh}}}}{{BOnGf}{{Bb{bGh}}}}{{C@`Gf}{{Bb{bGh}}}}{{C@bGf}{{Bb{bGh}}}}{{C@dGf}{{Bb{bGh}}}}0{{C@fGf}{{Bb{bGh}}}}0{{C@hGf}{{Bb{bGh}}}}{{C@jGf}{{Bb{bGh}}}}{{C@lGf}{{Bb{bGh}}}}{{C@nGf}{{Bb{bGh}}}}{{CA`Gf}{{Bb{bGh}}}}{{CAbGf}{{Bb{bGh}}}}{{CAdGf}{{Bb{bGh}}}}{{CAhGf}{{Bb{bGh}}}}{{CAjGf}{{Bb{bGh}}}}{{CAlGf}{{Bb{bGh}}}}{{CB`Gf}{{Bb{bGh}}}}{{CBbGf}{{Bb{bGh}}}}{{CBfGf}{{Bb{bGh}}}}{{BFjGf}{{Bb{bGh}}}}0{{CC`Gf}{{Bb{bGh}}}}{{BLjGf}{{Bb{bGh}}}}0{{{BGn{c}}Gf}{{Bb{bGh}}}{}}{{CCbGf}{{Bb{bGh}}}}0{{BHbGf}{{Bb{bGh}}}}0{{CCdGf}{{Bb{bGh}}}}{{CCfGf}{{Bb{bGh}}}}{{CChGf}{{Bb{bGh}}}}{{CCjGf}{{Bb{bGh}}}}{{CClGf}{{Bb{bGh}}}}{{CCnGf}{{Bb{bGh}}}}{{CD`Gf}{{Bb{bGh}}}}{{BLnGf}{{Bb{bGh}}}}{{CDbGf}{{Bb{bGh}}}}{{CDdGf}{{Bb{bGh}}}}{{CDfGf}{{Bb{bGh}}}}{{{ADd{ce}}Gf}{{Bb{bGh}}}{ACnN`}BGb}{{{ADd{ce}}Gf}{{Bb{bGh}}}{B@bN`}BGb}{{{ADd{ce}}Gf}{{Bb{bGh}}}N`BGb}{{CGbGf}{{Bb{bGh}}}}{{CDhGf}{{Bb{bGh}}}}{{BBnGf}{{Bb{bGh}}}}{{B@dGf}{{Bb{bGh}}}}{{BC`Gf}{{Bb{bGh}}}}{{AMdGf}{{Bb{bGh}}}}{{B@nGf}{{Bb{bGh}}}}{{MhGf}{{Bb{bGh}}}}{{CDjGf}{{Bb{bGh}}}}{{CDlGf}{{Bb{bGh}}}}{{CDnGf}{{Bb{bGh}}}}{{AhBCh}Ed}````{{BFjce}BFj{{Dd{AnAn}{{Db{{Bb{{C`{An}}B`}}}}}}HhHjAB`}{{Hb{{Al{BFj}}}}}}{{BGdd}BGd}``{{Ahc}{{Bb{BFjB`}}}{{Hb{{Al{BFj}}}}}}{{BFj{C`{Lb}}}BFj}{cc{}}000000000000000000000000000000000{LbOh}1111111111111{CBfBBd}{BG`BBd}3333333333{C@dBEl}44444444444444444444444444444{AhBFj}{IhBFj}{AjBFj}{KlBFj}{LdBFj}{BJ`BFj}{LbBFj}{MbBFj}{IfBFj}{L`BFj}{dBFj}{LlBFj}{cc{}}{FnBFj}11{CJ`{{BGn{{ADd{BHn}}}}}}{CJb{{BGn{{ADd{BHn}}}}}}{CJd{{BGn{{ADd{BHn}}}}}}{CJf{{BGn{{ADd{BHn}}}}}}{BHb{{BGn{{ADd{BHn}}}}}}{CJh{{BGn{{ADd{BHn}}}}}}{CJj{{BGn{{ADd{BHn}}}}}}{CCb{{BGn{{ADd{BHn}}}}}}{CJl{{BGn{{ADd{BHn}}}}}}:{CJn{{BGn{{ADd{BHn}}}}}};;{CJnBHb}{CJjBHb}{CCbBHb}{CJfBHb}??????{CD`CCn}{cc{}}0000{{{Nl{c}}}{{ADd{{Al{c}}}}}{}}{Ed{{ADd{Ah}}}}{CEj{{ADd{CK`}}}}{{{Al{c}}}{{ADd{{Al{c}}}}}AB`}{CKb{{ADd{CKb}}}}{{{Fj{ce}}}{{ADd{{Al{c}}e}}}{}{BGbAB`}}{{{ADd{Ah}}}{{ADd{{Al{Aj}}}}}}{{{Cf{ce}}}{{ADd{ce}}}N`BGb}{CKd{{ADd{CKd}}}}{CKfc{}}:{c{{ADd{c}}}{}}{{{Dh{c}}}{{ADd{c}}}{CKhN`}}{CKj{{ADd{CKb}}}}{Ah{{ADd{Ah}}}}{CKl{{ADd{CKd}}}}{CK`{{ADd{CK`}}}}{CKnCGb}{cc{}}0000{{{ADd{B@n}}}B@d}1{BA`B@d}{B@nB@d}0{{{Al{An}}}B@d}3{CL`BC`}5{CLbBC`}66{{{Fj{AMd}}}B@n}7777{{c{C`{Hd}}}CLd{}}{{{CLf{Fn}}{CLf{Aj}}{C`{Hd}}}CLh}{{{CLf{Fn}}{CLf{Aj}}{C`{Hd}}}CLj}{g{{Bb{ic}}}{}{}{{Gl{c}{{Cb{e}}}}}{}}00{c{{AIj{{j{n}}}}}{{Gd{}{{Cb{d}}}}}}{c{{AIj{{j{e}}}}}{{Gd{}{{Cb{}}}}}A`}{e{{ADd{{Al{c}}}}}{}{{Gd{}{{Cb{c}}}}}}{eB@d{{AM`{Mj}}}{{Gd{}{{Cb{c}}}}}}{{gFd}{{CLl{Fn}}}Hb{{Gd{}{{Cb{{C`{c}}}}}}}{{Gd{}{{Cb{{C`{e}}}}}}}}0{e{{CLl{Fn}}}{{Gd{}{{Cb{{C`{d}}}}}}}{{Gd{}{{Cb{{C`{c}}}}}}}}{{Ahe}ABd{}{{Ch{}{{Cb{{C`{c}}}}}}}}{{gACj}{{CLl{Fn}}}BDn{{Gd{}{{Cb{{C`{c}}}}}}}{{Gd{}{{Cb{{C`{e}}}}}}}}673{{Ahe}ABd{}{{Ch{}{{Cb{c}}}}}}{c{{AIj{{j{e}}}}}{{Hf{}{{Cb{}}}}}A`}{e{{ADd{{Al{c}}}}}Hh{{Hf{}{{Cb{c}}}}}}{c{{Bb{{BFd{CIl}}B`}}}{{AM`{CEj}}}}{c{{Bb{{CIh{CIl}}B`}}}{{AM`{CEj}}}}{{}{{ADd{c}}}N`}{c{{ADd{ec}}}BGbN`}{{Ah{Al{c}}}ABd{}}{{Ah{Al{{C`{c}}}}}ABd{}}{Ah{{Bb{CLn}}}}{c{{AIj{{j{e}}}}}{{Hn{}{{Cb{}}}}}A`}{c{{AIj{{j{n}}}}}{{Hn{}{{Cb{d}}}}}}{Eb{{BGn{{ADd{BGl}}}}}}{{Ahc}CM`{}}{{{Fj{c}}ACj}{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}}AB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{{Fj{c}}ACj}{{AHn{}{{AK`{e}}{AKb{c}}{AKd{g}}}}}{AKf{AKh{e}}}AB`{{Fl{}{{Cb{e}}}}HnHhHj}}`{{AhcFd}AFb{}}{{FdcACj}{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}}AB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{AhFd}AFd}{{FdACj}{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}}AB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}`{{BFjc{BGn{{ADd{BGl}}}}CMb}BFj{{Dd{An}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}}`{{BFjc}BFj{{AM`{BFj}}}}{{BFjFdFd}BFj}{{{ADd{ce}}{ADd{ce}}}d{CMdN`}BGb}{{BEnFd}{{Bb{I`B`}}}}{{BHfBFjd}BFj}{{BHhBFjd}BFj}{{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}Fd}{{C`{c}}}AB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}6{{B@dAh}{{C`{Eb}}}}{{AFfFd}{{Bb{I`B`}}}}{{AL`Fd}{{Bb{I`B`}}}}{{AFfFd}I`}{{AL`Fd}I`}{{B@dFd}{{C`{{Gb{{AN`{AMn}}Eb}}}}}}0{BMfBFj}{BBdCDb}{CDdEb}{{}Eb}{{BNhFnBNb{C`{AJ`}}}{{Bb{BN`B`}}}}00{{CFlB@dCMfMjMj}{{C`{Mj}}}}{{BGlB@dCMf{Al{Mj}}}Mj}{{B@dAh}{{C`{Mj}}}}{ACj{{Al{AMd}}}}{CMhFd}{{B@dAh}{{C`{{Gb{Fd{AN`{AMn}}Eb}}}}}}{{{BKh{c}}}{{Bb{{ADd{CDh}}B`}}}BFh}{{{ADd{ce}}}{{C`{c}}}N`BGb}{{{ADd{ce}}}cN`BGb}{CMj{{Fj{Ah}}}}{B@d{{Fj{Ah}}}}{B@n{{Fj{Ah}}}}{{BEnFd}{{C`{Ib}}}}{{BEnFdFd}{{C`{Ib}}}}{BHn{{C`{{BGn{{ADd{BGl}}}}}}}}{{BNhBN`BNbJb{C`{AJ`}}BNf}{{Bb{CMlB`}}}}{c{{Bb{CMnB`}}}{BHlBFhN`}}{{CInB@d}{{Bb{{ADd{B@d}}B`}}}}{{cFd}{{Fj{{Gb{FdFd}}}}}{{Ch{}{{Cb{Fd}}}}}}{{ANbFd}I`}{{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}Fd}{{C`{c}}}AB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{BEnFd}I`}{CE`d}{CAfd}`{{BBde}BG`{{AM`{BFj}}AB`}{{Hb{{Al{c}}}}}}{{CN`{Fj{An}}BAd}{{Bb{{Gb{An{Fj{An}}Bf}}B`}}}}{{BBdBFjcBAd}BG`{{Hb{{Al{BFj}}}}}}2{{ANhANh{Al{Fn}}BNbJb{C`{AJ`}}}{{Bb{{Fj{{Nl{Lb}}}}B`}}}}{{BNh{Al{Fn}}BNbJb{C`{Ed}}ddBNf}{{Gb{{Fj{{Nl{Lb}}}}{Fj{Fn}}{Fj{Fn}}}}}}{{BDddd}{{Bb{BfB`}}}}{{{AEj{}{{Cb{c}}}}e}c{}{}}{{BFjc}BFj{{AM`{BFj}}}}{{{ADd{ce}}{ADd{ce}}}d{CMdN`}BGb}21{{{BFd{c}}d}{{BFd{c}}}BFh}{{CAfd}CAf}`{BEnd}{CNbd}`{{BAdc}bAFh}{{BBjc}bAFh}{{ANhc}bAFh}{{BNbc}bAFh}{{BNdc}bAFh}{{BNfc}bAFh}{{BNjc}bAFh}{{BNlc}bAFh}{{BFfc}bAFh}{{BO`c}bAFh}{{BObc}bAFh}{{BOdc}bAFh}{{BOfc}bAFh}{{BOhc}bAFh}{{BOjc}bAFh}{{BOlc}bAFh}{{BElc}bAFh}{{BOnc}bAFh}{{C@`c}bAFh}{{C@bc}bAFh}{{C@dc}bAFh}{{C@fc}bAFh}{{C@hc}bAFh}{{C@jc}bAFh}{{C@lc}bAFh}{{C@nc}bAFh}{{CA`c}bAFh}{{CAbc}bAFh}{{CAdc}bAFh}{{CAhc}bAFh}{{CAjc}bAFh}{{CAlc}bAFh}{{CB`c}bAFh}{{CBbc}bAFh}{{BJ`c}bAFh}{{BFjc}bAFh}{{CC`c}bAFh}{{BLjc}bAFh}{{CCbc}bAFh}{{BHbc}bAFh}{{CChc}bAFh}{{CCjc}bAFh}{{CClc}bAFh}{{CCnc}bAFh}{{CD`c}bAFh}{{CDdc}bAFh}{{CDfc}bAFh}{{{ADd{ce}}g}b{CNdN`}BGbAFh}{{BBnc}bAFh}{{B@dc}bAFh}{{AMdc}bAFh}{{Mhc}bAFh}{{CDnc}bAFh}{{CNfAnC@fd}{{Bb{{Gb{{Gb{{Fj{Lb}}{Fj{Lb}}}}d}}B`}}}}{{CNfAnC@fd}{{Bb{{Gb{{AIf{Lb}}{AIf{Lb}}}}B`}}}}{{BHhBFj}BFj}{{BG`{C`{Fd}}}BBd}{{BFj{C`{Fd}}}BFj}{BJl{{Bb{{j{l}}B`}}}}{BJl{{j{l}}}}`{{{Al{{j{l}}}}Ahd}{{Bb{{j{l}}B`}}}}{CNh{{j{Kn}}}}{CFh{{j{Kn}}}}{BMj{{Bb{{j{Kn}}B`}}}}`{CFj{{j{J`}}}}`{{BGdC@d}BGd}``{OhLb}`{{{In{JdJ`}}{j{l}}CDn{Ff{Fn}{{Db{AIn}}}}{Ff{AIn}{{Db{Fn}}}}AJ`AJ`}{{Bb{{j{J`}}B`}}}}{{{In{JdJ`}}{C`{Ah}}{Ff{Fn}{{Db{AIn}}}}{Ff{AIn}{{Db{Fn}}}}AJ`AJ`}{{Bb{{j{J`}}B`}}}}{BFjBFj}{AInd}{{{BJn{c}}d}{{BJn{c}}}BKb}``0`{{}b}{cb{AB`BGb}}``{{CMjAh}{{C`{Fd}}}}{{B@dAh}{{C`{Fd}}}}{{B@nAh}{{C`{Fd}}}}{{{Al{Lb}}}{{`{{Ch{}{{Cb{Fd}}}}}}}}{{CMnAj{C`{Fd}}d{C`{B@d}}FdFd{C`{BFf}}{C`{Aj}}Aj{C`{BO`}}dd{C`{Fd}}d}{{Bb{{Gb{B@dFdFd}}B`}}}}{{{BFd{c}}{C`{Fd}}}{{BFd{c}}}BFh}{{{CIf{c}}{C`{Fd}}}{{CIf{c}}}BFh}{{{CIh{c}}{C`{Fd}}}{{CIh{c}}}BFh}``{{}Fd}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{A@l{{Cf{Cd}}}}{{CNjANnee}{{Bb{ANnB`}}}{{Hb{Ah}}}{{Gd{}{{Cb{c}}}}}}{{BBdBBdcc}BBd{{AM`{BFj}}}}{NbIh}`{{B@dFd{AN`{AMn}}Eb}{{Bb{{C`{Eb}}B`}}}}{{BFjBFjFnEb}BFj}{{BFjBFjBFj}BFj}`{{AnBOf}An}{{BFjBOf}BFj}{ce{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BC`{{Gb{{Fj{AMd}}{Fj{{Cf{Cd}}}}{C`{Hd}}}}}}{{{AIj{c}}}c{}}{{{ADd{ce}}}{{C`{c}}}{}BGb}3{BFj}{B@d}{BC`}{CNlBHh}{BHhBHh}{{{ADd{ce}}}{}N`BGb}{B@fAn}{{{ADd{BEn}}}An}{CDhCNn}{BBf{{Fj{c}}}{}}{C@dd}{{AnAnAnCAd}{{Bb{{j{n}}B`}}}}{{BFjccCAd}BFj{{AM`{BFj}}}}{cd{{Hb{CK`}}}}{{{Al{Aj}}}d}{{ANh{C`{Ah}}}d}{BEnd}{B@dd}{B@nd}{BKjd}{BFjBFj}{An{{Bb{{j{n}}B`}}}}{AFj{{Bb{{j{n}}B`}}}}2{ANhd}{{AnAn}{{Bb{{j{n}}B`}}}}{{BFjc}BFj{{AM`{BFj}}}}54{AFl{{Bb{{j{n}}B`}}}}6{CFf{{j{n}}}}{CFh{{j{n}}}}{BMj{{Bb{{j{n}}B`}}}}{BIdd}:::{BEn{{j{n}}}};;0{Nbd}<{Ohd}`{And}{{{ADd{CIl}}}d}{{}d}{{CO`Eh}{{Bb{dB`}}}}{cd{}}03?{CFf{{j{Ij}}}}{CFh{{j{Ij}}}}{BMj{{Bb{{j{Ij}}B`}}}}{{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}}{{ADb{cgAD`}}}AB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{B@d{{`{{Ch{}{{Cb{{Gb{{AN`{AMn}}Eb}}}}}}}}}}{BC`{{ADb{{Fj{{Cf{CH`}}}}CObAD`}}}}{B@d{{`{Jl}}}}000{CE`{{Bb{{C`{{Cf{Ch}}}}B`}}}}{{BHfBFjd}BFj}{{BHhBFjd}BFj}{{CNjANneeBEl}{{Bb{ANnB`}}}{{Hb{Ah}}}{{Gd{}{{Cb{c}}}}}}{{BBdBBdccBEl}BBd{{Hb{{Al{BFj}}}}}}{{COdANnAhAhC@n{C`{I`}}{C`{Ed}}}{{Bb{ANnB`}}}}{{COfANnAhAheeC@n{C`{I`}}}{{Bb{ANnB`}}}{{Hb{Ah}}}{{Gd{}{{Cb{c}}}}}}{BBdBGd}{{COhAhd}{{Bb{{j{l}}B`}}}}{{COh{j{l}}d}{{Bb{{j{l}}B`}}}}{{BGdd}BGd}`{CHlBFj}{COjBFj}{CDh{{C`{{Fj{COl}}}}}}``{{}BFj}{BHhBFj}{BBdBBd}{{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}}{{C`{c}}}AB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{BFjBFj}{COnBBd}3{{{ADd{ce}}{ADd{ce}}}d{CMdN`}BGb}`{{CNjANnee}{{Bb{ANnB`}}}{{Hb{Ah}}}{{Gd{}{{Cb{c}}}}}}{{BBdBBdcc}BBd{{AM`{BFj}}}}{{BGdc}BGd{{Hb{{Al{BFj}}}}}}{{{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}}e{}{}{}}{{{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}c}e{}{}{}}{{c{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}}e{}{}{}}<{BEnFd}<9{B@dFd}{BC`Fd}{B@nFd}{{BBdLb}BBd}{{BEnFd}An}{BKjd}`{BFjBHh}{cBFjD@`}{D@`BFj}{D@bBFj}{CDdBFj}{{BFjc}BFj{{AM`{BFj}}}}0``{{{BFd{c}}d}{{BFd{c}}}BFh}{{{CIh{c}}d}{{CIh{c}}}BFh}{{CAfd}CAf}{{BGhd}BGh}```{BFjBFj}{COh{{j{Ej}}}}0{{COh{Al{An}}}{{Bb{{j{h}}B`}}}}{{COhFnCGd}{{Bb{{j{h}}B`}}}}{{COhFnd}{{Bb{AnB`}}}}{{COh{j{l}}d}{{Bb{{j{l}}B`}}}}4{COh{{Bb{AnB`}}}}{COhAn}01{COh{{Bb{{j{Ej}}B`}}}}{COh{{j{h}}}}{{COhAn}{{Bb{{j{h}}B`}}}}{{COhFnFd}{{j{h}}}}{{COhEh}{{Bb{{j{h}}B`}}}}{{COhAj}An}7{COh{{Bb{{j{h}}B`}}}}01{{{AEj{}{{Cb{c}}}}e}c{}{}}{{BFjc}BFj{{AM`{BFj}}}}{{{ADd{ce}}{ADd{ce}}}d{CMdN`}BGb}21``````{{AJfAJf}{{Bb{{Gb{AJfAJf}}B`}}}}{{{j{h}}{j{h}}}{{Bb{{Gb{{j{h}}{j{h}}}}B`}}}}{{{ADd{ce}}}cAB`{BGbAB`}}{{COjc}BFj{{Dd{Ah}{{Db{{Bb{EdB`}}}}}}HhHj}}{{BBdcCDb{C`{{ADd{CIn}}}}{C`{Ah}}}BBd{{Dd{ANn}{{Db{{Bb{ANnB`}}}}}}HhHj}}{{BFjc{BGn{{ADd{BGl}}}}}BFj{{Dd{An}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}}{{BFjBFjc{BGn{{ADd{BGl}}}}}BFj{{Dd{AnAn}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}}{{BFjc}{{Bb{BFjB`}}}{{Dl{BFj}{{Db{{Bb{BFjB`}}}}}}}}{{CMh{C`{Ed}}}{{Bb{MjB`}}}}{{CMhc}{{Bb{MjB`}}}{{Oj{Eb}{{Db{Eb}}}}}}{c{{BGn{{ADd{BGl}}}}}{{Dd{Eb}{{Db{Eb}}}}HhHj}}{c{{BGn{{ADd{BGl}}}}}{{Dd{{Al{Eb}}}{{Db{Eb}}}}HhHj}}{{BFjc}BFj{{Dl{BFj}{{Db{BFj}}}}}}{c{{BGn{{ADd{BGl}}}}}{{Dd{Mj}{{Db{Mj}}}}HhHj}}{{COj{ADd{Dd}}}BFj}{c{{BGn{{ADd{BGl}}}}}{{Dd{{Al{Mj}}}{{Db{Mj}}}}HhHj}}:{{ce{BGn{{ADd{BGl}}}}}BFj{{Dd{{Al{An}}}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}{{Hb{{Al{BFj}}}}}}{{BFjc{Al{BFj}}{BGn{{ADd{BGl}}}}}BFj{{Dd{{Al{An}}}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}}{{BFjBHb{Al{BFj}}dd}BFj}2{CMh{{Bb{MjB`}}}}0000{CDdCDd}{{{C`{{Al{Fd}}}}B@n{C`{{Al{An}}}}{C`{D@d}}}ANn}{{{C`{{Al{Ed}}}}B@d{C`{{Al{An}}}}d}{{C`{{Fj{Fd}}}}}}{AhBFj}{BHfBFj}{BHhBFj}{AFn{{C`{c}}}{}}{BBdBBd}{BFjBFj}{D@fAn}{BEn{{Bb{AnB`}}}}`75{AFn{{C`{Kl}}}}43{BEn{{C`{Kl}}}}987{AG`{{C`{c}}}{}}651{D@hAn}4{{BBdBBh}BBd}``{{{CI`{c}}d}{{CI`{c}}}BFh}{{B@dB@d}b}{{EbEb}{{Bb{EbB`}}}}````{CFj{{j{J`}}}}`{BMj{{Bb{{j{Ij}}B`}}}}1`{AhBFj}{BHfBFj}{BHhBFj}{AFn{{C`{c}}}{}}{BBdBBd}{BFjBFj}{D@fAn}{BEn{{Bb{AnB`}}}}{AFn{{C`{{Gb{cc}}}}}{}}`````{CNh{{j{Kn}}}}{CFh{{j{Kn}}}}{BMj{{Bb{{j{Kn}}B`}}}}`=``6{CFf{{j{Kn}}}}21`{{D@j{C`{AJ`}}}{{Bb{D@jB`}}}}{{D@l{C`{AJ`}}}{{Bb{D@lB`}}}}{ANhFn}{ANhd}{{{BFl{}{{Db{c}}}}An}c{}}{{ANhFn}ANh}{{BFjBFj}}{{BFnAn}{{Bb{AnB`}}}}``{BEnFd}{CE`{{C`{Fd}}}}{CAf{{C`{Fd}}}}{BGh{{C`{Fd}}}}````{{{BJn{c}}Fd}{{BJn{c}}}BKb}`{BHfBFj}{BHhBFj}{AEd{{Bb{FdB`}}}}{BFjBFj}{BEn{{Bb{FdB`}}}}{BEnAh}{BFjCOj}````33`{CNh{{j{Ij}}}}{CFh{{j{Ij}}}}{BMj{{Bb{{j{Ij}}B`}}}}{CFj{{j{J`}}}}{ANhFn}`{{{ADd{ce}}{ADd{ce}}}d{CHbN`}BGb}{C@fd}{BFj}{An{{Bb{AnB`}}}}0{ANhd}{{D@nFd}{{C`{Fd}}}}{{BFjc}BFj{{AM`{BFj}}}}0{CMh{{Bb{MjB`}}}}{{}c{}}{cCHnBHl}{cCEnBKb}2{{Ahc}DA`{}}{c{{AIj{c}}}{}}{BBdBGd}{c{{BFd{c}}}BFh}{{{Al{Mj}}}CMh}{c{{BJn{c}}}BKb}{c{{CI`{c}}}BFh}{c{{BHj{c}}}BHl}{c{{CIb{c}}}BKb}{{}CEl}{c{{BKd{c}}}BKb}{{}CF`}{FnANh}{c{{CId{c}}}BKb}{c{{CIf{c}}}BFh}{{ANhANhANh}BNh}{c{{CIh{c}}}BFh}{{DAb{ADd{CDh}}{ADd{B@n}}Fd{C`{{Fj{Fd}}}}{C`{{ADd{CIj}}}}{C`{D@d}}Fdd{C`{{Fj{An}}}}C@l}{{Bb{BKjB`}}}}{c{{BKh{c}}}BFh}{c{{BKl{c}}}{BKbBKb}}{C@dBEl}{cCAf{{Hb{CK`}}}}{cBGh{{Hb{CK`}}}}{c{{BGn{c}}}{}}{{BFjBFjBFj}CCd}{{}CCf}{{Ah{Fj{Mj}}{BGn{{ADd{BGl}}}}c}BLnBHn}{c{{ADd{c}}}{}}{{}B@d}{{ACj{Fj{{Cf{Cd}}}}{C`{Hd}}}BC`}{{cACjd}AMd{{AM`{Ed}}}}{e{{ADd{c}}}{}{{Oj{{CGh{c}}}{{Db{c}}}}}}{ACjBC`}{{AGbFdFd}{{j{c}}}D`}{{BEnFdFd}An}{AhBFf}{{ce}{{ADd{ce}}}{}BGb}{{B@dFd{AN`{AMn}}Eb}{{Bb{B@dB`}}}}{{FnAh}{{Bb{AnB`}}}}{EdBFf}{{ACjFd}BC`}{{{ADd{{Al{CEj}}}}}CAf}{{{ADd{{Al{CEj}}}}}BGh}{AjBFf}{{}{{ADd{{BJj{c}}}}}{}}{c{{ADd{{BJj{e}}c}}}BGb{}}{Fd{{ADd{{Al{{BJj{c}}}}}}}{}}{{Fdc}{{ADd{{Al{{BJj{e}}}}c}}}BGb{}}3210{CMlC`}{{BL`Fd}{{Bb{{C`{{Fj{ANn}}}}B`}}}}{{BLdFd}{{Bb{{C`{{Fj{ANn}}}}B`}}}}{{BLbFd}{{Bb{{C`{{Fj{ANn}}}}B`}}}}{{BLfFd}{{Bb{{C`{{Fj{ANn}}}}B`}}}}{{BKjFd}{{Bb{{C`{{Fj{ANn}}}}B`}}}}{{BFj{BCf{BFj}}}b}0{BFjBFj}0{{{AEj{}{{Cb{c}}}}e}c{}{}}0`{{}Oh}{{}Nb}`{BEnFd}{BBdBBd}5````{{{BKh{c}}}{{Bb{FdB`}}}BFh}````{AEl{{Bb{{G`{Fn}}B`}}}}{{BGdc}BGd{{Hb{{Al{BFj}}}}}}{{BBd{DAf{DAd}}{DAf{DAh}}}{{Bb{DAjB`}}}}`{{BFjc}BFj{{AM`{BFj}}}}{CFf{{j{Lj}}}}{CFh{{j{Lj}}}}{BMj{{Bb{{j{Lj}}B`}}}}{BMj{{Bb{{j{Ij}}B`}}}}{{CBjc}BFj{{AM`{BFj}}}}{{CBnc}BFj{{AM`{BFj}}}}{{CNjANnee}{{Bb{ANnB`}}}{{Hb{Ah}}}{{Gd{}{{Cb{c}}}}}}{{BBdBBdcc}BBd{{AM`{BFj}}}}`{{BFje}BFj{{AM`{BFj}}AB`}{{Hb{{Al{c}}}}}}{{BFjeCD`}BFj{{AM`{BFj}}AB`}{{Hb{{Al{c}}}}}}```{AhANh}{{Ah{Al{Ah}}Ah}{{In{IlIj}}}}{{Ah{Al{Ah}}Ah}{{In{JnJ`}}}}{{Ah{Al{Ah}}AhJb}{{In{JdJ`}}}}`{{ANhANh}{{C`{ANf}}}}{{{ADd{ce}}{ADd{ce}}}{{C`{ANf}}}{CMdN`}BGb}{CE`CK`}{CAfCK`}{BGhCK`}{CE`{{Al{CEj}}}}{CAf{{Al{CEj}}}}{BGh{{Al{CEj}}}}``{{}BFj}{c{{DAl{{ADd{c}}}}}{}}{{ce}{{DAl{{ADd{ce}}}}}{}BGb}````{{BFjc}BFj{{AM`{BFj}}}}```{{COjAh}BFj}0{{ANnANnd}{{Bb{{Gb{{Od{{Fj{Lb}}{Fj{Nb}}}}{Od{{Fj{Oh}}{Fj{Nb}}}}}}B`}}}}`{D@fAn}{BFjBFj}{BBd{{Bb{{Gb{ANnANn}}B`}}}}``{{{ADd{c}}DAn}b{AIbN`}}{{{ADd{ce}}{ADd{ce}}}dN`BGb}{{AhBFjMh}BFj}{{AG`KlMh}{{Bb{{C`{c}}B`}}}{}}{{BBdBFjMh}BBd}{{BFjBFjMh}BFj}{{D@hKlMh}{{Bb{AnB`}}}}{{BEnKlMh}{{Bb{AnB`}}}}{CFf{{j{Kn}}}}{CFh{{j{Kn}}}}{BMj{{Bb{{j{Kn}}B`}}}}{{ce}{{Bb{gB@`}}}{}CHj{}}```{{{BFd{c}}d}{{BFd{c}}}BFh}{{CAfd}CAf}`{{DB`CB`{C`{Ih}}}An}{{BFjCB`{C`{Ih}}}BFj}{{{ADd{CIl}}{Al{Aj}}}{{Bb{FdB@`}}}}{{{ADd{CIl}}DBb}{{Bb{bB@`}}}}{{{BKh{c}}C@l}{{BKh{c}}}BFh}{{{ADd{CIl}}{Fj{Aj}}}{{Bb{FdB@`}}}}{{{ADd{CIl}}Ed}{{Bb{FdB@`}}}}{c{{Bb{eB@`}}}{}DBd}{{{ADd{CIl}}{Al{DBf}}}{{Bb{FdB@`}}}}{CE`d}{BEnAn}{CAfd}{BGhd}```{{ce}BFj{{Dd{AnAn}{{Db{{Bb{{C`{An}}B`}}}}}}HhHjAB`}{{Hb{{Al{BFj}}}}}}{AGdAn}0{{{BFl{}{{Db{c}}}}An}c{}}{{BFjBFj}}{{BFnAn}{{Bb{AnB`}}}}{{B@dAh}{{C`{Eb}}}}{{BEnAh}b}{{BBdei}BBd{{Hb{Ah}}}{{Gd{}{{Cb{c}}}}}{{Hb{Ah}}}{{Gd{}{{Cb{g}}}}}}{{B@dAh{AN`{AMn}}}{{C`{{AN`{AMn}}}}}}{{CHl{Fj{Ed}}}BFj}{{cBFj}BFj{{AM`{BFj}}}}{{An{j{Ej}}}{{Bb{{j{h}}B`}}}}{{BFjc}BFj{{AM`{BFj}}}}{{AnAnAnAn{C`{Eb}}}{{Bb{AnB`}}}}{{BJlAhAh}{{Bb{{j{l}}B`}}}}{{BFjcc{C`{c}}{C`{Eb}}}BFj{{AM`{BFj}}}}1{{CMh{C`{Eb}}}{{Bb{MjB`}}}}{{BJlAhAhFd}{{Bb{{j{l}}B`}}}}3{{{In{JdJ`}}{C`{Ah}}{j{l}}CDn}{{Bb{{In{JdJ`}}B`}}}}{{BFj{Al{Fn}}}BFj}{CK`CEj}`{AGfAGf}{BEnAn}{BHfBFj}{BHhBFj}{BBdBBd}{BFjBFj}`{{BGdc}BGd{{Hb{{Al{BFj}}}}}}{{CN`{Fj{An}}BBj}{{Bb{{Gb{An{Fj{An}}Bf}}B`}}}}{{BBdBFjcBBj}BG`{{Hb{{Al{BFj}}}}}}{{BFjBBj}BFj}{{AGhDdMl}{{Bb{AnB`}}}}{{BFj{ADd{Dd}}{BGn{{ADd{BGl}}}}Ml}BFj}{{BEnDdMl}{{Bb{AnB`}}}}{{BFjFdc}BFj{{Dl{{j{Dn}}}{{Db{{C`{Kl}}}}}}HhHjDf}}{{DBhBMn}{{Bb{AnB`}}}}{{BFjDBj}BFj}100101{{BFjMhKlDBj}BFj}212121{{DBl{j{l}}ANh{C`{AJ`}}}{{Bb{DBlB`}}}}{{BMhLb}{{Bb{AnB`}}}}{{BFjLb}BFj}{{BNhFn{C`{AJ`}}}{{Bb{FnB`}}}}0{{BMhLd}{{Bb{AnB`}}}}{{BFjLd}BFj}2````{CE`{{C`{D@d}}}}{CAf{{C`{D@d}}}}{BGh{{C`{D@d}}}}`````{{COh{j{h}}}{{j{h}}}}{{}{{BGn{{ADd{BGl}}}}}}{{BFjBFjdd{C`{Ih}}}BFj}0{{{BFd{c}}Fd}{{BFd{c}}}BFh}{{BGfDBn}{{Bb{ANnB`}}}}{{BGhDBn}{{Bb{ANnB`}}}}{{cCAn}{{Bb{BBdB`}}}{{Hb{CK`}}}}{{{ADd{{Al{CEj}}}}CAn}{{Bb{BBdB`}}}}{{cCBd}{{Bb{BBdB`}}}{{Hb{CK`}}}}{{{ADd{{Al{CEj}}}}CBd}{{Bb{BBdB`}}}}{{DC`{Al{Lb}}e}{{Bb{AnB`}}}Df{{Gd{}{{Cb{{C`{c}}}}}}}}{{AGjc{C`{e}}}{{Bb{AGjB`}}}{{Gd{}{{Cb{Lb}}}}}{}}{{AGjci}{{Bb{AGjB`}}}{{Gd{}{{Cb{Lb}}}}}{}{}{{Dd{{C`{e}}}{{Db{{C`{g}}}}}}}}{{{CI`{c}}}{{Bb{{ADd{B@n}}B`}}}BFh}{{{BHj{c}}}{{Bb{B@dB`}}}BHl}{BKj{{ADd{B@n}}}}{{{BKh{c}}}{{Bb{{ADd{B@n}}B`}}}BFh}{{BGf{C`{Fd}}}{{Bb{{ADd{B@d}}B`}}}}{BBd{{Bb{{ADd{B@d}}B`}}}}{{BGh{C`{Fd}}}{{Bb{{ADd{B@d}}B`}}}}{CDhDCb}``````{CNh{{j{Kn}}}}{CFh{{j{Kn}}}}{BMj{{Bb{{j{Kn}}B`}}}}`{CFj{{j{J`}}}}`{{{ADd{CIl}}DCd}{{Bb{IhB@`}}}}{{BBdc}BBd{{Hb{{Al{BFj}}}}}}0````{{AGj{j{n}}{C`{c}}}{{Bb{AGjB`}}}{}}{{B@dAhEb}{{C`{Eb}}}}{{B@dFdEb}{{C`{Eb}}}}{{{BKh{c}}d}{{BKh{c}}}BFh}{{{BKl{c}}d}{{BKl{c}}}BKb}{{{CI`{c}}d}{{CI`{c}}}BFh}{{{BHj{c}}d}{{BHj{c}}}BHl}{{{CIf{c}}d}{{CIf{c}}}BFh}4{{CHnd}CHn}{{BFjId}BFj}{{BC`{C`{Hd}}}b}{{AGlFn}{{j{c}}}D`}{{BEnFn}An}{{BHfBFj}BFj}{{BHhBFj}BFj}{{BBdc}BBd{{AM`{BFj}}}}{{BFjBFj}BFj}{{AGnFnc}{{j{e}}}{}D`}{{BBdce}BBd{{AM`{BFj}}}{{AM`{BFj}}}}{{BFjce}BFj{{AM`{BFj}}}{{AM`{BFj}}}}{{B@dAh}{{C`{Eb}}}}{{B@dFd}{{C`{{Gb{{AN`{AMn}}Eb}}}}}}{BFjBFj}{A@nb}{BEnb}{{BFj{C`{Ih}}}BFj}``{{BBdCEjBOb}{{Bb{bB`}}}}{{BBdCEjBOl}{{Bb{bB`}}}}{{BBdCEjC@b}{{Bb{bB`}}}}{{BBdCEjCA`}{{Bb{bB`}}}}`````{{BEnFnFd}An}{{BHhBFjBFj}BFj}{{BBdFnLb}BBd}={{BC`FdFd}b}0```{{AH`FdFd}AH`}{{cFdFd}e{}{}}1022{{BC`FdFd}BC`}0`{{AEbd}{{j{c}}}D`}{{BHfEh}BFj}{{BHhEh}BFj}{{BBdcEl}BBd{{BBf{{AN`{AMn}}}}}}{{BFjEh}BFj}{{BFjeEl}BFj{{AM`{BFj}}AB`}{{Hb{{Al{c}}}}}}{{BBdcEl}BBd{{Hb{{Al{BFj}}}}}}{{AEbEh}{{j{c}}}D`}{{BEnEh}{{Bb{AnB`}}}}{{{ADd{c}}}{{C`{AIb}}}{AIbN`}}{{BJl{j{l}}}{{j{h}}}}{{BJl{j{l}}Fd}{{Bb{AJdB`}}}}0{{{j{l}}{j{l}}e}{{j{h}}}{{Ch{}{{Cb{Ah}}}}}{{Dd{AhAh}{{Db{c}}}}}}2{{{j{l}}{j{l}}Fde}{{Bb{AJdB`}}}{{Ch{}{{Cb{Ah}}}}}{{Dd{AhAh}{{Db{c}}}}}}2{BFjBFj}`{{CEh{Al{Aj}}}{{j{n}}}}{{CEh{j{Af}}}{{j{n}}}}`{{BHfAj}BFj}{{BHhAj}BFj}{{AHbAj}{{C`{Kl}}}}{{BBdAj}BBd}{{BFjAj}BFj}{{BEnAj}{{C`{Kl}}}}{{DCfAj}An}{{BEnAj}{{Bb{AnB`}}}}{{LbLb}Nb}{BFjDCh}{{{j{l}}Ahd}{{j{l}}}}{{BJlAn}{{Bb{{j{l}}B`}}}}{BJl{{j{Ej}}}}0{BJl{{j{l}}}}{{BJlAnAn}{{Bb{{j{l}}B`}}}}3````{{BMjAh}{{Bb{AnB`}}}}`{{BFjEb}BFj}`{{{j{l}}{j{l}}}{{j{l}}}}606060{{BJl{j{l}}}{{j{l}}}}10{{{ADd{ce}}}FdN`BGb}{BFjCHl}{{{BFl{}{{Db{c}}}}An}c{}}{{BFjBFj}}{{BFnAn}{{Bb{AnB`}}}}{{BGdc}BGd{{Hb{Ah}}}}{{COjAh}BFj}{BElAh}`1{AhBFj}{BHfBFj}{BHhBFj}{AFn{{C`{c}}}{}}{BBdBBd}{BFjBFj}{D@fAn}{{}{{BGn{{ADd{BGl}}}}}}{{ci}{{Bb{gB@`}}}{}{}{}{{Oj{e}{{Db{g}}}}}}{{BHhBFj}BFj}{{BBdLb}BBd}{{BG`{C`{Fd}}}BBd}{{BFj{C`{Fd}}}BFj}{{AHdc}{{Bb{AHdB`}}}N`}{{BEn{j{Ej}}}{{Bb{AnB`}}}}{{DCj{Al{Nb}}Id}DCj}{{DCj{Al{Nb}}}DCj}{{BEn{Al{Lb}}}{{Bb{AnB`}}}}{{BEn{Al{Lb}}}An}{{AHfc}AHfN`}{{BEn{j{Ej}}}An}{BC`{{C`{Hd}}}}{{BFjBFjBFj}BFj}{{CBhc}CBj{{AM`{BFj}}}}{{CBlc}CBn{{AM`{BFj}}}}`{{BFjBFjANhBNb}BFj}```{{BMjJb}{{Bb{{j{J`}}B`}}}}{BBd{{Bb{{Gb{DAj{DAf{DAd}}{DAf{DAh}}}}B`}}}}{CBf{{Bb{{Gb{DAj{DAf{DAd}}{DAf{DAh}}}}B`}}}}1{CDd{{C`{I`}}}}{{BHhFd}BFj}{{B@dd}B@n}{BC`{{Cf{Cd}}}}{AHh{{Fj{{Al{Aj}}}}}}{{BBdd}{{Bb{EdB`}}}}{BFj{{Bb{EdB`}}}}{{DCl{C`{Ah}}d}{{Bb{ANnB`}}}}{{BFb{C`{Ah}}d}{{Bb{ANnB`}}}}{{BIdB@d}{{Bb{MjB`}}}}{{BFjB@dCMf}{{Bb{MjB`}}}}{{BJl{j{Ej}}d}{{Bb{{j{J`}}B`}}}}{BHfBFj}{BJl{{j{l}}}}{COjBFj}{Oh{{C`{Lb}}}}{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000{BFjBFj}{CMh{{Bb{MjB`}}}}{{BMjAh}{{Bb{AnB`}}}}{cEd{}}0000000{{B@dB@d}{{Bb{dB`}}}}`887``{{BBdLbcEl}BBd{{Hb{{Al{BFj}}}}}}{{{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}}g{}{}{}}{{{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}c}g{}{}{}}{{c{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}}g{}{}{}}{{DCn{C`{AJ`}}{j{l}}Ah}{{Bb{DCnB`}}}}{{ANhFn{C`{AJ`}}ceg}{{Bb{FnB`}}}{{Dd{Fn}{{Db{Fn}}}}}{{Dd{Fn}{{Db{AIn}}}}}{{Dd{AIn}{{Db{Fn}}}}}}{{ANhFn{C`{AJ`}}}{{Bb{FnB`}}}}{{BNhFn{C`{AJ`}}}{{Bb{FnB`}}}}00010{{{BFd{c}}d}{{BFd{c}}}BFh}{{CAfd}CAf}`32{g{{Bb{AJje}}}{}{}{{Gd{}{{Cb{{Bb{ce}}}}}}}}0{{ACjg}{{Bb{AJle}}}{}{}{{Gd{}{{Cb{{Bb{ce}}}}}}}}0{ALl{{Bb{eg}}}{}{{AJj{c}}AHn}{}}0{{ALlACj}{{Bb{eg}}}{}{{AJl{c}}AHn}{}}0{{ABfAh}{{Bb{{j{c}}e}}}D`{}}{{ABh{j{c}}}{{Bb{{j{c}}e}}}D`{}}10{{ABhAhEb}{{Bb{{j{c}}e}}}D`{}}0{c{{Bb{e}}}{}{}}0000000000000{DBj{{Bb{BMnB`}}}}111111111111111111111111111111111111111111111111111111111111111111111111111111111111111{I`{{Bb{CDdB`}}}}222{{{ADd{{Al{c}}e}}}{{Bb{{ADd{{Nl{c}}e}}}}}{}BGb}33{BMn{{Bb{MlB`}}}}44444444444{CNn{{Bb{CDhAOf}}}}{{B@dAh}{{Bb{EbB`}}}}{{B@dFd}{{Bb{{Gb{{AN`{AMn}}Eb}}B`}}}}{{B@dAh}{{Bb{MjB`}}}}{{B@dAh}{{Bb{{Gb{Fd{AN`{AMn}}Eb}}B`}}}}3{{CMjAh}{{Bb{FdB`}}}}:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::{{CMhc}{{Bb{MjB`}}}{{Oj{Eb}{{Db{{Bb{EbB`}}}}}}}}{{CMhc}{{Bb{MjB`}}}{{Oj{{Al{Eb}}}{{Db{{Bb{EbB`}}}}}}}}{{BFjc}{{Bb{BFjB`}}}{{Dl{BFj}{{Db{{Bb{BFjB`}}}}}}}}{{CMhc}{{Bb{MjB`}}}{{Oj{Mj}{{Db{{Bb{MjB`}}}}}}}}{{D@nFd}{{Bb{FdB`}}}}{Aj{{Bb{CAhB`}}}}{Lb{{Bb{CAlB`}}}}{Ld{{Bb{CBbB`}}}}{c{{Bb{{ADd{c}}DD`}}}{}}{{ACj{Fj{{Cf{Cd}}}}{C`{Hd}}}{{Bb{BC`B`}}}}{{ce}{{Bb{{ADd{ce}}DD`}}}{}BGb}{{}{{Bb{{ADd{{BJj{c}}}}DD`}}}{}}{c{{Bb{{ADd{{BJj{e}}c}}DD`}}}BGb{}}10`{c{{Bb{{DAl{{ADd{c}}}}DD`}}}{}}{{ce}{{Bb{{DAl{{ADd{ce}}}}DD`}}}{}BGb}{{BHn{Fj{Aj}}}{{Bb{bB`}}}}{{{ADd{ce}}}{{Bb{c{ADd{ce}}}}}{}BGb}```{cOf{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}Ah}``{AEd{{Bb{AEdB`}}}}{BHfBFj}{BHhBFj}{{BBd{C`{{Fj{Ed}}}}B@j}BBd}{BFjBFj}{BEn{{Bb{AnB`}}}}4321{{BBde}BBd{{Hb{Ah}}}{{Gd{}{{Cb{c}}}}}}{{{ADd{{DDb{c}}}}}{{Bb{cb}}}Hh}{{{ADd{ce}}}cAB`{BGbAB`}}4{{DDdcAhANhANh}{{Bb{ANnB`}}}{{BBf{Ed}}}}0{{{BKh{c}}d}{{BKh{c}}}BFh}```{{BGdC@f}BGd}`{BC`{{C`{Hd}}}}0{{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}Fd}cAB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{CO`dd}{{Bb{ANnB`}}}}{{BFjdd}BFj}`2`{BC`{{Al{{Cf{Cd}}}}}}{{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}}gAB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{BC`COb}{{BHfAj}BFj}{{BHhAj}BFj}{{AHbAj}{{C`{Kl}}}}{{BBdAj}BBd}{{BFjAj}BFj}{{BEnAj}{{C`{Kl}}}}{{DCfAj}An}{{BEnAj}{{Bb{AnB`}}}}`{{DDfNf{Fj{Ih}}}{{Bb{bB`}}}}{{DDfNf{Al{Ih}}}{{Bb{bB`}}}}`{{{ADd{{DDb{c}}}}g}{{Bb{eb}}}Hh{}{{Oj{c}{{Db{e}}}}}}{ce{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{ADd{ce}}}FdN`BGb}{CFf{{j{Kn}}}}{CFh{{j{Kn}}}}{BMj{{Bb{{j{Kn}}B`}}}}210{BNf{{C`{Lb}}}}{ANhFn}`{ANhd}```{cCBh{{AM`{BFj}}}}{{CBjc}CBl{{AM`{BFj}}}}{{CBnc}CBl{{AM`{BFj}}}}````{{BGdBBd}BGd}{{CCdBFj}CCd}{{{BJn{c}}{DDh{Fd}}}{{BJn{c}}}BKb}{{{CIf{c}}{DDh{Fd}}}{{CIf{c}}}BFh}{{BGh{C`{{DDh{Fd}}}}}BGh}{{CAfd}CAf}{Fdc{}}0{FdB@d}{{{BFd{c}}Fd}{{BFd{c}}}BFh}{{{CIh{c}}{C`{{DDh{Fd}}}}}{{CIh{c}}}BFh}{{BElC@`}BEl}{{BBdBFj}BBd}{{B@d{AN`{AMn}}Eb}{{C`{Eb}}}}{{{BFd{c}}{C`{{Fj{Ed}}}}}{{BFd{c}}}BFh}{{{CI`{c}}{C`{{Fj{Ed}}}}}{{CI`{c}}}BFh}{{{BHj{c}}{C`{{Fj{Ed}}}}}{{BHj{c}}}BHl}{{{BKh{c}}{C`{{Fj{Ed}}}}}{{BKh{c}}}BFh}{{BBdc}BBd{{Hb{{Al{BFj}}}}}}`0{{{BFd{c}}{C`{Ah}}}{{BFd{c}}}BFh}{{CAf{C`{Ah}}}CAf}{{{CIb{c}}{C`{BOn}}}{{CIb{c}}}{}}{{CEl{C`{BOn}}}CEl}{{{BKd{c}}{C`{BOn}}}{{BKd{c}}}BKb}{{CF`{C`{BOn}}}CF`}{{{BKl{c}}CAb}{{BKl{c}}}BKb}{{BBdc}BBd{{Hb{{Al{BBd}}}}}}{{{BKl{c}}{C`{Fd}}}{{BKl{c}}}BKb}{{{BJn{c}}{C`{Ed}}}{{BJn{c}}}BKb}0{{CCdBFj}CCd}{{CCfBFj}CCf}{{{BFd{c}}d}{{BFd{c}}}BFh}{{CAfd}CAf}{{CMhEb}{{Bb{MjB`}}}}{{CAf{C`{{ADd{B@d}}}}}CAf}{{{BFd{c}}{C`{{ADd{B@d}}}}}{{BFd{c}}}BFh}{{{BFd{c}}{C`{{Al{Eb}}}}}{{BFd{c}}}BFh}{{{BFd{c}}BNl}{{BFd{c}}}BFh}{{CAfBNl}CAf}{{{BFd{c}}Aj}{{BFd{c}}}BFh}{{CAfAj}CAf}{{CElCEj}CEl}{{CF`CEj}CF`}{{{BJn{c}}{C`{Fd}}}{{BJn{c}}}BKb}{{CCfBFjBFjBFj}CCf}<{{{BKh{c}}{C`{{Fj{An}}}}}{{BKh{c}}}BFh}{{CCdBFjBFjBFj}CCd}2{{CCdBFj}CCd}{{CCfBFj}CCf}{{{BFd{c}}d}{{BFd{c}}}BFh}{{{CIf{c}}d}{{CIf{c}}}BFh}{{{CIh{c}}d}{{CIh{c}}}BFh}{{CAfd}CAf}{{BGhd}BGh}{{CAf{C`{Fd}}}CAf}{{BGh{C`{Fd}}}BGh}{{{CId{c}}DDj}{{CId{c}}}BKb}{{{CIf{c}}DDj}{{CIf{c}}}BFh}{{{BJn{c}}Ed}{{BJn{c}}}BKb}{{AMd{DDl{EdEd}}}AMd}{{B@n{DDl{EdEd}}}B@n}=<<=<;8={{CE`c}CE`{{AM`{{C`{Fd}}}}}}{{{BFd{c}}{C`{Fd}}}{{BFd{c}}}BFh}{{{CI`{c}}{C`{Fd}}}{{CI`{c}}}BFh}{{{BHj{c}}{C`{Fd}}}{{BHj{c}}}BHl}{{{CIh{c}}{C`{Fd}}}{{CIh{c}}}BFh}{{{BKh{c}}{C`{Fd}}}{{BKh{c}}}BFh}{{CAfc}CAf{{AM`{{C`{Fd}}}}}}={{BGhc}BGh{{AM`{{C`{Fd}}}}}}=63{{CCfBFj}CCf};{{{BFd{c}}{C`{BO`}}}{{BFd{c}}}BFh}{{CAf{C`{BO`}}}CAf}{{BBdCDb}BBd}{{{BFd{c}}BNj}{{BFd{c}}}BFh}{{CE`CEj}CE`}{{{BFd{c}}{C`{e}}}{{BFd{c}}}BFh{{AM`{CEj}}}}{{{CIh{c}}{C`{e}}}{{CIh{c}}}BFh{{AM`{CEj}}}}{{CAfCEj}CAf}{{BGhCEj}BGh}{{CE`{ADd{{Al{CEj}}}}}CE`}{{CAf{ADd{{Al{CEj}}}}}CAf}{{BGh{ADd{{Al{CEj}}}}}BGh}{{{CIb{c}}d}{{CIb{c}}}{}}{{{BKd{c}}d}{{BKd{c}}}BKb}{{{BFd{c}}{C`{{ADd{CIj}}}}}{{BFd{c}}}BFh}{{{BKh{c}}{C`{{ADd{CIj}}}}}{{BKh{c}}}BFh}{{BBdd}BBd}{{{BFd{c}}{C`{{Fj{Fd}}}}}{{BFd{c}}}BFh}{{{CI`{c}}{C`{{Fj{Fd}}}}}{{CI`{c}}}BFh}{{{BHj{c}}{C`{{Fj{Fd}}}}}{{BHj{c}}}BHl}{{{CIf{c}}{C`{{Fj{Ed}}}}}{{CIf{c}}}BFh}{{{BKh{c}}{C`{{Fj{Fd}}}}}{{BKh{c}}}BFh}5{{{BFd{c}}{C`{Aj}}}{{BFd{c}}}BFh}{{{BJn{c}}Aj}{{BJn{c}}}BKb}{{CAf{C`{Aj}}}CAf}{{{BJn{c}}BOh}{{BJn{c}}}BKb}{{CE`d}CE`}{{{BFd{c}}d}{{BFd{c}}}BFh}{{{CIh{c}}d}{{CIh{c}}}BFh}{{CAfd}CAf}{{BGhd}BGh}>{{{BKl{c}}{C`{Fd}}}{{BKl{c}}}BKb}{{CE`c}CE`{{AM`{{C`{D@d}}}}}}{{{BFd{c}}{C`{D@d}}}{{BFd{c}}}BFh}{{{CI`{c}}{C`{D@d}}}{{CI`{c}}}BFh}{{{BHj{c}}{C`{D@d}}}{{BHj{c}}}BHl}{{{BKh{c}}{C`{D@d}}}{{BKh{c}}}BFh}{{BBdAh{C`{Lb}}}BBd}{{CAf{C`{D@d}}}CAf}{{CAfc}CAf{{AM`{{C`{D@d}}}}}}{{BGh{C`{D@d}}}BGh}{{BGhc}BGh{{AM`{{C`{D@d}}}}}}{CMh{{Bb{MjB`}}}}{{{BFd{c}}{C`{{ADd{B@d}}}}}{{BFd{c}}}BFh}{{{CIf{c}}{ADd{B@d}}}{{CIf{c}}}BFh}{{{CIh{c}}{ADd{B@d}}}{{CIh{c}}}BFh}{{{BKh{c}}{C`{{ADd{B@n}}}}}{{BKh{c}}}BFh}{{CAf{C`{{ADd{B@d}}}}}CAf}{{BGh{C`{{ADd{B@d}}}}}BGh}{{CAfc}{{Bb{CAfB`}}}{{Dd{B@d}{{Db{{Bb{B@dB`}}}}}}}}{{{CIf{c}}B@d}{{CIf{c}}}BFh}{{{CIh{c}}B@d}{{CIh{c}}}BFh}{{CCdBFj}CCd}{{CCfBFj}CCf}{{{BFd{c}}Aj}{{BFd{c}}}BFh}{{{BJn{c}}Aj}{{BJn{c}}}BKb}{{CAfAj}CAf}{{BBdd}BBd}{{{BFd{c}}Fd}{{BFd{c}}}BFh}{{CAfFd}CAf}102{{{BKl{c}}d}{{BKl{c}}}BKb}3{{{BJn{c}}{C`{Ed}}}{{BJn{c}}}BKb}{{CCdJb}CCd}{{CCd{C`{Ed}}}CCd}{{{BFd{c}}d}{{BFd{c}}}BFh}{{CAfd}CAf}8{{BC`{C`{Hd}}}BC`}{{BC`{C`{Hd}}}{{Cf{Cd}}}}{{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}{C`{Hd}}}{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}}AB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}?{{CCdBFj}CCd}{BBdBBd}{{{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}}e{}{}{}}{{{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}}e{}{}{}}{{{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}c}e{}{}{}}10{{c{A@b{}{{Ol{c}}{On{e}}{A@`{g}}}}}e{}{}{}}210213210210{{{ADd{CIl}}{Al{Aj}}}{{Bb{FdB@`}}}}{{ce}{{Bb{FdB@`}}}{}DBd}{{{ADd{CIl}}{Al{DDn}}}{{Bb{FdB@`}}}}{{BFjc}BFj{{AM`{BFj}}}}{CFf{{j{Ij}}}}{CFh{{j{Ij}}}}{BMj{{Bb{{j{Ij}}B`}}}}``{{AHj{j{n}}{j{c}}}{{Bb{{j{c}}B`}}}D`}````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{BCdc}An{{Dd{{Gb{Lb{BCf{Lb}}}}}{{Db{C`}}}}HhHj}}{{BCdc}An{{Dd{{Gb{Lb{BCf{Lb}}}}}{{Db{}}}}HhHj}}{{{Al{{Nl{Lb}}}}c}An{{Dd{{Nl{Lb}}}{{Db{C`}}}}HhHj}}{{{Al{{Nl{Lb}}}}c}An{{Dd{{Nl{Lb}}}{{Db{}}}}HhHj}}{{{Al{c}}e{C`{{ADd{ACl}}}}}{{AIf{c}}}{BDlBDn}{{Ch{}{{Cb{{Gb{LbLb}}}}}}Hn}}{{{Al{c}}Hde{C`{{ADd{ACl}}}}}{{AIf{c}}}{BDlBDn}{{Ch{}{{Cb{{Gb{LbLb}}}}}}Hn}}{{{j{c}}LbLb}{{j{c}}}D`}{{{Fj{{Nl{Lb}}}}{Al{{Cf{Cd}}}}}d}{{BE`Bf}An}{{BEbBEb}BEb}0``````{{{j{c}}{j{e}}gik}{{j{m}}}D`D`{{Dd{}{{Db{}}}}}{{Dd{}{{Db{}}}}}{{Dd{}{{Db{}}}}}D`}0{{{j{c}}{j{e}}i}{{j{k}}}D`D`Cd{{Dl{}{{Db{g}}}}}{{D`{}{{Gj{g}}}}}}{{{j{c}}{j{e}}g}{{j{i}}}D`D`{{AHl{C`C`}}}D`}{{{j{c}}{j{e}}g}bD`D`{{Dl{C`C`}}}}{{{j{c}}{j{e}}i}{{j{k}}}D`D`{}{{Dl{}{{Db{g}}}}}D`}{{{j{c}}{j{e}}iAh}{{j{k}}}D`D`{CdAHn}{{Dl{}{{Db{g}}}}}{{D`{}{{Gj{g}}}}}}{{{j{c}}{j{e}}iAh}{{j{k}}}D`D`Cd{{Dl{}{{Db{g}}}}}{{D`{}{{Gj{g}}}}}}5{{{j{c}}{j{e}}g}{{Bb{AnB`}}}D`D`{{Dl{}{{Db{{Cf{Cd}}}}}}}}{{{j{c}}{j{e}}gdd}{{j{c}}}D`D`{{Dl{}{{Db{{Cf{Cd}}}}}}}}64{{{j{c}}{j{e}}k}{{Bb{{j{m}}i}}}D`D`{}{}{{Dl{C`C`}{{Db{{Bb{{C`{g}}i}}}}}}}D`}{{{j{c}}{j{e}}{j{g}}i}{{j{k}}}D`D`D`{{AI`{C`C`C`}}}D`}{{{j{c}}{j{e}}k}{{Bb{{j{m}}i}}}D`D`CdAIb{{Dl{}{{Db{{Bb{gi}}}}}}}{{D`{}{{Gj{g}}}}}}2{{{j{c}}{j{e}}kAh}{{Bb{{j{m}}i}}}D`D`CdAIb{{Dl{}{{Db{{Bb{gi}}}}}}}{{D`{}{{Gj{g}}}}}}{{{j{c}}{j{e}}idd}{{Bb{{j{c}}g}}}D`D`AIb{{Dl{}{{Db{{Bb{{Cf{Cd}}g}}}}}}}}{{{j{c}}{j{e}}{j{g}}m}{{Bb{{j{o}}k}}}D`D`D`{}{}{{Dl{C`C`C`}{{Db{{Bb{{C`{i}}k}}}}}}}D`}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{}{}{{Dl{C`}{{Db{{Bb{{C`{e}}g}}}}}}}D`}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{}{}{{Dl{}{{Db{{Bb{eg}}}}}}}D`}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{CdAHn}AIb{{Dl{}{{Db{{Bb{eg}}}}}}}{{D`{}{{Gj{e}}}}}}{{{j{c}}e}{{j{g}}}D`{{AId{C`}}}D`}{{{j{c}}e}{{j{g}}}D`AIdD`}{{{j{c}}g}{{j{i}}}D`Cd{{Dl{}{{Db{e}}}}}{{D`{}{{Gj{e}}}}}}0{{{j{c}}g}{{j{i}}}D`{CdAHn}{{Dl{}{{Db{e}}}}}{{D`{}{{Gj{e}}}}}}0``{DE`{{j{Ej}}}}0{{DE`{j{J`}}d}{{Bb{AnB`}}}}{{DE`{j{l}}d}{{Bb{AnB`}}}}{DE`An}{DE`{{Bb{AnB`}}}}1{DE`{{Bb{{j{Ej}}B`}}}}{DE`{{j{Bl}}}}{{DE`An}{{Bb{AnB`}}}}{{DE`Eh}{{Bb{{j{Bl}}B`}}}}{{DE`Aj}{{Bb{AnB`}}}}5{DE`{{Bb{{j{h}}B`}}}}01{DEb{{j{Bl}}}}`{ce{}{}}0{{BLhBFj}BFj}{Fdc{}}0{Fdb}2{cc{}}{{}Fd}54{c{{Bb{e}}}{}{}}0{cOf{}}7`````````{{cf}b{}}{{BIb{C`{Ah}}d}{{Bb{{In{IlIj}}B`}}}}{{BIb{C`{Ah}}}{{Bb{{In{IlIj}}B`}}}}{{BIb{C`{Ah}}Jbdd{C`{Ed}}{j{l}}}{{Bb{{In{JdJ`}}B`}}}}{{BIb{C`{Ah}}Jbd{C`{Ed}}{j{l}}}{{Bb{{In{JdJ`}}B`}}}}{{BIb{C`{Ah}}d}{{Bb{{In{JnJ`}}B`}}}}==````{DBjDBj}{{ce}b{}{}}``{CFf{{j{Kn}}}}{CFh{{j{Kn}}}}{CFj{{j{J`}}}}{{}DBj}{Fdc{}}0{Fdb}{{DBjDBj}d}{{DBjGf}{{Bb{bGh}}}}``{cc{}}{CNh{{j{Kn}}}}87{{}Fd}{ce{}{}}{CFf{{j{n}}}}{CFh{{j{n}}}}{CFf{{j{Ij}}}}{CFh{{j{Ij}}}}==``6>=?>{CNh{{j{Ij}}}}1>{CFf{{j{Lj}}}}{CFh{{j{Lj}}}}{{Ah{Al{Ah}}Ah}{{In{IlIj}}}}{{Ah{Al{Ah}}Ah}{{In{JnJ`}}}}{{Ah{Al{Ah}}AhJb}{{In{JdJ`}}}}{CFf{{j{Kn}}}}{CFh{{j{Kn}}}}{{DBhBMn}{{Bb{AnB`}}}}000000?1{CFj{{j{J`}}}}`>{c{{Bb{e}}}{}{}}0`{cOf{}}`{ce{}{}}`6565````>=````````{{cf}b{}}{{BIb{C`{Ah}}d}{{Bb{{In{IlIj}}B`}}}}{{BIb{C`{Ah}}}{{Bb{{In{IlIj}}B`}}}}{{BIb{C`{Ah}}Jbdd{C`{Ed}}{j{l}}}{{Bb{{In{JdJ`}}B`}}}}{{BIb{C`{Ah}}Jbd{C`{Ed}}{j{l}}}{{Bb{{In{JdJ`}}B`}}}}{DEd{{j{l}}}}{{BIb{C`{Ah}}d}{{Bb{{In{JnJ`}}B`}}}}77{DEfDEf}{{ce}b{}{}}{Fdc{}}0{Fdb}{{DEfDEf}d}{{ce}d{}{}}00{{DEfGf}{{Bb{bGh}}}}{cc{}}{{DEfc}bAFh}`{{}Fd}{ce{}{}}{{DEfAh}d}1{c{{Bb{e}}}{}{}}0{cOf{}}3````{{cf}b{}}44{{{DEh{c}}}{{DEh{c}}}{AB`A`}}>==<8{Ah{{C`{DEf}}}}76`{{{DEh{c}}Ah}C`A`}{{DEj{Al{Aj}}{C`{Jb}}}{{C`{c}}}{}}{{{DEh{Ij}}{Al{Aj}}{C`{Jb}}}{{C`{Ld}}}}{{{DEh{J`}}{Al{Aj}}{C`{Jb}}}{{C`{Fn}}}}`:8{{c{C`{Jb}}}{{Bb{{DEn{}{{DEl{e}}}}B`}}}{}{}}{{DEf{C`{Jb}}}{{Bb{{DEh{J`}}B`}}}}{{DEf{C`{Jb}}}{{Bb{{DEh{Ij}}B`}}}};:=```````9===={CEbCEb}{{ce}b{}{}}{{}CEb}{Fdc{}}000{Fdb}0{{CEbCEb}d}{{DF`DF`}d}{{ce}d{}{}}00{{CEbGf}{{Bb{bGh}}}}{cc{}}0{Ah{{Bb{DF`}}}}{{Ahg}{{Bb{CEbB`}}}{{Hb{Ah}}}{{AM`{Ed}}}{{Gd{}{{Cb{{Gb{ce}}}}}}}}{{CEbc}bAFh}{{}Fd}0{ce{}{}}0``0{c{{Bb{e}}}{}{}}000{cOf{}}022```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eAJj{}{{Gd{}{{Cb{c}}}}}}0{{ACje}AJl{}{{Gd{}{{Cb{c}}}}}}0{AJnEb}{{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}}{{C`{{Al{c}}}}}AB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{AJfAJfc}{{Bb{AJfB`}}}AKn}{{AL`Eb}{{Bb{AnB`}}}}`{ALle{}{{AJj{c}}AHn}}0{{ALlACj}e{}{{AJl{c}}AHn}}0{{{AKj{Ah}}}Eb}{AL`Eb}`{{AKn{j{Ej}}{j{Ej}}}{{Bb{{j{Ej}}B`}}}}{{{Fj{c}}ACj}{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}}AB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{{Fj{c}}ACj}{{AHn{}{{AK`{e}}{AKb{c}}{AKd{g}}}}}{AKf{AKh{e}}}AB`{{Fl{}{{Cb{e}}}}HnHhHj}}{{FdcACj}{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}}AB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{FdACj}{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}}AB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}Fd}{{C`{c}}}AB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{AL`Fd}{{Bb{I`B`}}}}{{AL`Fd}I`}{{}Eb}{{ANbFd}I`}4{{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}}{{ADb{cgAD`}}}AB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}}{{C`{c}}}AB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{{AJfAJf}{{Bb{{Gb{AJfAJf}}B`}}}}{{{j{h}}{j{h}}}{{Bb{{Gb{{j{h}}{j{h}}}}B`}}}}{{EbEb}{{Bb{EbB`}}}}`{{}c{}}0{g{{Bb{AJje}}}{}{}{{Gd{}{{Cb{{Bb{ce}}}}}}}}0{{ACjg}{{Bb{AJle}}}{}{}{{Gd{}{{Cb{{Bb{ce}}}}}}}}0{ALl{{Bb{eg}}}{}{{AJj{c}}AHn}{}}0{{ALlACj}{{Bb{eg}}}{}{{AJl{c}}AHn}{}}0{{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}Fd}cAB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}0{{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}}gAB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}{Fdc{}}0{{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}{C`{Hd}}}{{AHn{}{{AK`{c}}{AKb{e}}{AKd{g}}}}}AB`{AKf{AKh{c}}}{{Fl{}{{Cb{c}}}}HnHhHj}}```````````{{AJfAJfc}{{Bb{AJfB`}}}AKn}{{AKn{j{Ej}}{j{Ej}}}{{Bb{{j{Ej}}B`}}}}=<`````````{{}b}0{{}d}{{{In{JdJ`}}{j{l}}CDn{Ff{Fn}{{Db{AIn}}}}{Ff{AIn}{{Db{Fn}}}}AJ`AJ`}{{Bb{{j{J`}}B`}}}}{{{In{JdJ`}}{C`{Ah}}{Ff{Fn}{{Db{AIn}}}}{Ff{AIn}{{Db{Fn}}}}AJ`AJ`}{{Bb{{j{J`}}B`}}}}{{{In{JdJ`}}{C`{Ah}}{j{l}}CDn}{{Bb{{In{JdJ`}}B`}}}}```{{c{C`{Hd}}}CLd{}}{{{CLf{Fn}}{CLf{Aj}}{C`{Hd}}}CLh}{{{CLf{Fn}}{CLf{Aj}}{C`{Hd}}}CLj}`{CGjBFj}{ce{}{}}0{{CGjJb}BFj}2{{CGjBFjJb}BFj}{{CGjEd}BFj}444{Fdc{}}0{Fdb}6{cc{}}7{{}Fd}78888888888{{CGj{C`{Ed}}BFjCDn}BFj}{{CGjBFjc}BFj{{Hb{Ah}}}}:{{CGjAh}BFj};90;;;;;;;{{CGjBFjEd}BFj}{c{{Bb{e}}}{}{}}0{cOf{}}=>><>`{{BEdANnBf}{{Bb{AnB`}}}}{BEd{{Bb{AhB`}}}}`??{{}DFb}<<;{{DFb{C`{ACj}}}{{Bb{AC`B`}}}};:{ce{}{}}{DFbd}{{FdFd}DFb}{{DFb{Cf{Cd}}}b}{DFbb}::94`{{{j{c}}}FdA`}0{{IdId}Id}{{{j{Ej}}Lb}{{Bb{bB`}}}}{{{AIf{Lb}}Lb}{{Bb{bB`}}}}{An{{Bb{AnB`}}}}{{AnBf}An}0{{AnAh}An}0`{{cf}b{}}{DFdACl}{DFd{{Cf{Cd}}}}1>>{DFdDFd}{{ce}b{}{}}{DFdACj}{{}DFd}{Fdc{}}0{Fdb}{{DFdFd}b}{{DFdGf}{{Bb{bGh}}}}{cc{}}{{}Fd}{ce{}{}}{DFdFd}{FdDFd}{DFdb}703{c{{Bb{e}}}{}{}}0{cOf{}}{DFd{{C`{DFf}}}}6````{{AIhcd}LbAHn}{{{j{c}}}{{Gb{Fd{j{c}}}}}D`}``{DFhAn}{BMj{{Bb{{j{Ij}}B`}}}}{BMj{{Bb{{j{Kn}}B`}}}}0{BMj{{Bb{{j{n}}B`}}}}22112{BMj{{Bb{{j{Lj}}B`}}}}322{{BMjAh}{{Bb{AnB`}}}}{{BMjJb}{{Bb{{j{J`}}B`}}}}1445`{{AH`FdFd}AH`}0`{{Fd{Fj{d}}}b}```11{{Fd{Al{An}}El}{{Bb{{AIj{{j{Ej}}}}B`}}}}{{{Al{An}}{Al{d}}d}{{Bb{AIlB`}}}}{{Ah{Al{An}}{Al{d}}d}{{Bb{{j{Ef}}B`}}}}{{Ah{Al{An}}}{{Bb{{j{Ef}}B`}}}}{An{{Bb{{Cf{Cd}}B`}}}}{{{Al{An}}}{{Bb{AIlB`}}}}{{{Al{An}}}{{Bb{{j{Ef}}B`}}}}0```````````88``{BJh{{j{l}}}}{BJl{{Bb{{j{l}}B`}}}}{BJl{{j{l}}}}{{BJl{j{l}}}{{j{l}}}}{{BJlAhd}{{Bb{{j{n}}B`}}}}{{BJl{j{l}}dd}{{Bb{{j{n}}B`}}}}{{BJlAh}{{Bb{{j{n}}B`}}}}{{BJlAhd}{{Bb{{j{Ej}}B`}}}}{{BJl{j{l}}d}{{Bb{{j{Ej}}B`}}}}{{BJl{j{l}}Fd}{{Bb{{j{l}}B`}}}}{{BJlAh}{{Bb{{j{h}}B`}}}}{{BJl{j{l}}}{{Bb{{j{h}}B`}}}}{{BJlAhEb}{{Bb{AnB`}}}}5{{BJl{j{l}}dd}{{Bb{{j{Ej}}B`}}}}{{BJlAh}{{Bb{{j{Ej}}B`}}}}=<{{{Al{{j{l}}}}Ahd}{{Bb{{j{l}}B`}}}}{{BJlAhAh}{{Bb{{j{l}}B`}}}}0{{BJlAhAhFd}{{Bb{{j{l}}B`}}}}1{{BJl{j{l}}}{{j{h}}}}{{BJl{j{l}}Fd}{{Bb{AJdB`}}}}0{{{j{l}}{j{l}}e}{{j{h}}}{{Ch{}{{Cb{Ah}}}}}{{Dd{AhAh}{{Db{c}}}}}}2{{{j{l}}{j{l}}Fde}{{Bb{AJdB`}}}{{Ch{}{{Cb{Ah}}}}}{{Dd{AhAh}{{Db{c}}}}}}2{{{j{l}}Ahd}{{j{l}}}}{{BJlAn}{{Bb{{j{l}}B`}}}}{BJl{{j{Ej}}}}0{BJl{{j{l}}}}{{BJlAnAn}{{Bb{{j{l}}B`}}}}3{{{j{l}}{j{l}}}{{j{l}}}}404040{{BJl{j{l}}}{{j{l}}}}10{{BJl{j{Ej}}d}{{Bb{{j{J`}}B`}}}}444````````{{eFdFd}{{DFj{Fn}}}{{Hb{Ah}}}{{Ch{}{{Cb{c}}}}}}{{eFdFd}{{DFl{Fn}}}{{Hb{{Al{Aj}}}}}{{Ch{}{{Cb{c}}}}}}```````````{{cf}b{}}0{BEn{{Bb{AnB`}}}}{{Ah{Fj{{Cf{Cd}}}}ACj}{{Bb{AnB`}}}}{{Ah{Fj{{Cf{Cd}}}}ACj{C`{{DDl{EdEd}}}}}{{Bb{AnB`}}}}{{Anc}{}{AbKj}}0{{AnAn}}0{{AnAn}{{Bb{AnB`}}}}{An{{C`{Fd}}}}0{{BEnEh}{{j{Ej}}}}{BEn{{Bb{{j{Ej}}B`}}}}`{An{{Bb{{j{Bl}}B`}}}}{{AnFd}{{Cf{Cd}}}}{BEnACl}0{An{{j{h}}}}{BEn{{j{c}}}D`}0{AnBEn}{AnAn}0{BEn{{Bb{FdB`}}}}{An{{Bb{FdB`}}}}{An{{Bb{{j{Af}}B`}}}}{An{{Bb{{j{Ef}}B`}}}}{{BEnAn}{{Bb{AnB`}}}}00{An{{Bb{{j{n}}B`}}}}{ce{}{}}00000{{BEnEb}{{Bb{AnB`}}}}{{AnEb}{{Bb{AnB`}}}}0{An{{Bb{AJfB`}}}}5{{AnAn}{{Bb{AnB`}}}}{{Anc}{{Bb{AnB`}}}Ad}{BEn{{Fh{{Fb{{Cf{Cd}}}}{Ff{{Cf{Cd}}}{{Db{Fd}}}}}}}}{BEn{{Fj{{Cf{Cd}}}}}}0{An{{Fj{{Cf{Cd}}}}}}?{IdId}{AnAn}{BEn{{ADd{BEn}}}}{{ce}b{}{}}0{Anb}{An{{Bb{{In{IlIj}}B`}}}}{An{{Bb{{In{JdJ`}}B`}}}}{An{{Bb{{In{JhJf}}B`}}}}{{}An}{Fdc{}}00{An}111{{AnAn}}{{Anc}{}{AbKj}}10{Fdb}00{BEnAn}{BEnEb}{An{{Bb{{In{JjJ`}}B`}}}}{{IdId}d}{{AnAn}d}{{{AEj{}{{Cb{c}}}}e}c{}{}}{{Anc}{{Bb{{j{n}}B`}}}AMb}{{AnAh}{{Bb{{j{n}}B`}}}}{{AnAn}{{Bb{{j{n}}B`}}}}3{{Anc}{}AMb}1{{AnAh}}66{{ce}d{}{}}00{AnFd}{An{{Bb{AnB`}}}}{{AnAn}{{Bb{AnB`}}}}{{AnI`Fd}{{Bb{AnB`}}}}{An{{Bb{{j{E`}}B`}}}}{An{{Bb{{j{Dn}}B`}}}}{BEn{{Dh{Mj}}}}{{AnAEh}{{Bb{AnB`}}}}{{BEn{j{n}}}{{Bb{AnB`}}}}{{An{j{n}}d}{{Bb{AnB`}}}}{{IdGf}{{Bb{bGh}}}}{{AnGf}{{Bb{bGh}}}}0{AnEd}{cc{}}0{{{In{JjJ`}}}An}{{{j{c}}}AnD`}{{{In{JnJ`}}}An}{{{In{IlIj}}}An}4{{{In{JdJ`}}}An}{{Ah{Al{I`}}d}{{Bb{AnB`}}}}{{Ah{Al{I`}}Ebd}{{Bb{AnB`}}}}{{Ah{Cf{Cd}}}{{Bb{AnB`}}}}{{Ah{Fj{{Cf{Cd}}}}Eb}An}{g{{Bb{ic}}}{}{}{{Gl{c}{{Cb{e}}}}}{}}{cAn{{Gd{}{{Cb{Ed}}}}}}{cAn{{Gd{}{{Cb{{C`{d}}}}}}}}{cAn{{Gd{}{{Cb{L`}}}}}}{cAn{{Gd{}{{Cb{{C`{Lb}}}}}}}}{cAn{{Gd{}{{Cb{Kl}}}}}}{cAn{{Gd{}{{Cb{Ih}}}}}}{cAn{{Gd{}{{Cb{Aj}}}}}}{cAn{{Gd{}{{Cb{Fn}}}}}}0{cAn{{Gd{}{{Cb{{C`{Kl}}}}}}}}{cAn{{Gd{}{{Cb{{C`{Aj}}}}}}}}{cAn{{Gd{}{{Cb{Ll}}}}}}{cAn{{Gd{}{{Cb{d}}}}}}{cAn{{Gd{}{{Cb{{C`{Ld}}}}}}}}{cAn{{Gd{}{{Cb{{C`{Ih}}}}}}}}{cAn{{Gd{}{{Cb{{C`{Mb}}}}}}}}{cAn{{Gd{}{{Cb{{C`{If}}}}}}}}{cAn{{Gd{}{{Cb{Mb}}}}}}><{cAn{{Gd{}{{Cb{If}}}}}};{cAn{{Gd{}{{Cb{Lb}}}}}}{cAn{{Gd{}{{Cb{{C`{L`}}}}}}}}{cAn{{Gd{}{{Cb{Ld}}}}}}03{cAn{{Gd{}{{Cb{{C`{Fn}}}}}}}}5:{cAn{{Gd{}{{Cb{Ih}}}}}}{cAn{{Gd{}{{Cb{{C`{Ll}}}}}}}}{cAn{{Gd{}{{Cb{Ah}}}}}}>6{{Ah{Fj{Fn}}}An}{{Ah{Fj{If}}}An}{{Ah{Fj{Ih}}}An}{{Ah{Fj{Mb}}}An}{{Ah{Fj{Aj}}}An}{{Ah{Fj{L`}}}An}{{Ah{Fj{Ld}}}An}{{Ah{Fj{Lb}}}An}{{Ah{Fj{Ll}}}An}{{Ah{Fj{Kl}}}An}{{AhFdEb}An}{{AnFdFd}An}{{BEnFd}{{Bb{I`B`}}}}{AnFd}{AnBn}{{BEnFd}{{C`{Ib}}}}{{BEnFdFd}{{C`{Ib}}}}{{BEnFd}I`}{{{AEj{}{{Cb{c}}}}e}c{}{}}{{AnAn}{{Bb{{j{n}}B`}}}}{{AnAh}{{Bb{{j{n}}B`}}}}{{Anc}{{Bb{{j{n}}B`}}}AMb}3{{AnAh}}13{BEnd}{{Idc}bAFh}{{An{C`{Fd}}}An}{An{{Bb{{j{Lj}}B`}}}}{An{{Bb{{j{Ij}}B`}}}}{An{{Bb{{j{J`}}B`}}}}{An{{Bb{{j{Kn}}B`}}}}{An{{Bb{{j{Ej}}B`}}}}`{An{{Bb{{j{h}}B`}}}}{{}Fd}00{ce{}{}}00{AnANn}1{B@fAn}{AnAn}={An{{Bb{{j{n}}B`}}}}000{BEn{{j{n}}}}0{{}d}0{AnId}{AnDFn}{BEnFd}{{BEnFd}An}<{AnBFj}{{{AEj{}{{Cb{c}}}}e}c{}{}}{{AnAn}{{Bb{{j{n}}B`}}}}{{Anc}{{Bb{{j{n}}B`}}}AMb}{{AnAh}}3201{An{{Bb{{C`{c}}B`}}}Kj}{BEn{{Bb{AnB`}}}}{BEn{{C`{Kl}}}}?0121{{AnAn}}0{{Anc}{}{AbKj}}0;{BEn{{Bb{FdB`}}}}{BEnAh}{{Ahc}An{{Hb{{Al{{C`{Ah}}}}}}}}{{Ah{Lf{Ld}}}An}{{Ahc}An{{Hb{{Al{{C`{Ed}}}}}}}}{{Ahc}An{{Hb{{Al{Ld}}}}}}{{Ahc}An{{Hb{{Al{{C`{If}}}}}}}}{{Ahc}An{{Hb{{Al{{C`{Mb}}}}}}}}{{Ahc}AnB@f}{{Ahc}An{{Hb{{Al{I`}}}}}}{{Ahc}An{{Hb{{Al{{C`{L`}}}}}}}}{{Ahc}An{{Hb{{Al{{C`{Ll}}}}}}}}{{Ahc}An{{Hb{{Al{{Al{Aj}}}}}}}}{{Ahc}An{{Hb{{Al{{C`{{Fj{Aj}}}}}}}}}}{{Ah{Lf{Fn}}}An}{{Ahc}An{{Hb{{Al{Fn}}}}}}{{Ahc}An{{Hb{{Al{AMl}}}}}}{{Ahc}An{{Hb{{Al{{C`{{Dh{{Al{Aj}}}}}}}}}}}}{{Ahc}An{{Hb{{Al{{Dh{Ah}}}}}}}}{{Ahc}An{{Hb{{Al{{C`{AMj}}}}}}}}{{Ahc}An{{Hb{{Al{{Fj{Aj}}}}}}}}{{Ahc}An{{Hb{{Al{{C`{AJb}}}}}}}}{{Ahc}An{{Hb{{Al{{C`{{Al{Aj}}}}}}}}}}{{Ahc}An{{Hb{{Al{Aj}}}}}}{{AhAn}An}{{Ahc}An{{Hb{{Al{{C`{Fn}}}}}}}}{{Ahc}An{{Hb{{Al{{C`{AMl}}}}}}}}{{Ahc}An{{Hb{{Al{d}}}}}}{{Ahc}An{{Hb{{Al{{C`{AIn}}}}}}}}{{Ahc}An{{Hb{{Al{{C`{An}}}}}}}}{{Ahc}An{{Hb{{Al{Ed}}}}}}{{Ahc}An{{Hb{{Al{Ih}}}}}}{{Ahc}An{{Hb{{Al{Ah}}}}}}{{Ahc}An{{Hb{{Al{{C`{{Dh{Ah}}}}}}}}}}{{Ahc}An{{Hb{{Al{Lb}}}}}}{{Ahc}An{{Hb{{Al{{C`{Kl}}}}}}}}{{Ah{Lf{Ih}}}An}{{Ahc}An{{Hb{{Al{{C`{Lb}}}}}}}}{{Ahc}An{{Hb{{Al{Mb}}}}}}{{Ahc}An{{Hb{{Al{L`}}}}}}{{Ahc}An{{Hb{{Al{{Dh{{Al{Aj}}}}}}}}}}{{Ahc}An{{Hb{{Al{AJb}}}}}}{{Ahc}An{{Hb{{Al{AMj}}}}}}{{Ahc}An{{Hb{{Al{{C`{d}}}}}}}}{{Ahc}An{{Hb{{Al{Ll}}}}}}{{Ahc}An{{Hb{{Al{If}}}}}}{{Ahc}An{{Hb{{Al{AIn}}}}}}{{Ahc}An{{Hb{{Al{{C`{Ld}}}}}}}}{{Ahc}An{{Hb{{Al{Kl}}}}}}{{Ah{Lf{Lb}}}An}{{Ahc}An{{Hb{{Al{{C`{Aj}}}}}}}}{{Ahc}An{{Hb{{Al{An}}}}}}{{Ahc}An{{Hb{{Al{{C`{Ih}}}}}}}}{{AhEb}An}{{BEnFdFd}An}{{AhFd}An}{DFnC`}{{{AEj{}{{Cb{c}}}}e}c{}{}}{{AnAn}{{Bb{{j{n}}B`}}}}{{Anc}{{Bb{{j{n}}B`}}}AMb}{{AnAh}{{Bb{{j{n}}B`}}}}3{{AnAh}}3{{Anc}{}AMb}{An{{Bb{ABbB`}}}}{BEnFd}`{An{{Cf{Jl}}}}{An{{Bb{AnB`}}}}{{BEnKlMh}{{Bb{AnB`}}}}{BEnAn}{{Anc}{}{AbKj}}0{{AnAn}}{{BEnAh}b}{{AnAh}An}{{An{Al{Fn}}}{{Bb{AnB`}}}}5{IdId}{{BEnDdMl}{{Bb{AnB`}}}}{{AnKldd{C`{Ih}}}{{Bb{AnB`}}}}{{AnFddd{C`{Ih}}}{{Bb{AnB`}}}}{{AnId}b}{{BEnFn}An}{BEnb}{Anb}{{An{C`{Ih}}}An}{DFn{{Gb{Fd{C`{Fd}}}}}}{{BEnFnFd}An}{{AnEh}{{Bb{AnB`}}}}{{BEnEh}{{Bb{AnB`}}}}{{BEnAj}{{C`{Kl}}}}{{BEnAj}{{Bb{AnB`}}}}{An{{Bb{{j{l}}B`}}}}{{AnFd}{{Bb{{Dh{Ah}}B`}}}}{{AnEb}{{Bb{AnB`}}}}{An{{Bb{AJdB`}}}}{{Anc}{}{AbKj}}{{AnAn}}10{An{{Bb{cB`}}}Kj}{An{{Bb{AnB`}}}}{{An{C`{Fd}}}An}{{BEn{j{Ej}}}{{Bb{AnB`}}}}{{An{Al{Nb}}Id}An}{{An{Al{Nb}}}An}{{BEn{Al{Lb}}}{{Bb{AnB`}}}}{{BEn{Al{Lb}}}An}{{An{Al{Lb}}d}An}{{An{j{Ej}}d}{{Bb{AnB`}}}}{{BEn{j{Ej}}}An}{{An{Al{Lb}}}An}{{An{j{Ej}}d}An}{An{{Bb{{In{JnJ`}}B`}}}}{{AnFdd}{{Cf{Cd}}}}{{An{C`{Ah}}d}{{Bb{ANnB`}}}}>{ce{}{}}0{An{{Dh{An}}}}{cEd{}}{{AnAn}{{Bb{AnB`}}}}{c{{Bb{e}}}{}{}}00{{{Gb{Ah{Cf{Cd}}}}}{{Bb{AnB`}}}}{{{Gb{AMd{Cf{Cd}}}}}{{Bb{AnB`}}}}{{{Gb{Ah{Fj{{Cf{Cd}}}}}}}{{Bb{AnB`}}}}{{{Gb{AMd{Fj{{Cf{Cd}}}}}}}{{Bb{AnB`}}}}444{cOf{}}00{An{{Bb{{j{M`}}B`}}}}{An{{Bb{{j{Ej}}B`}}}}{An{{Bb{{j{Lh}}B`}}}}{An{{Bb{{j{Ln}}B`}}}}{BEn{{Bb{AnB`}}}}{An{{Bb{AnB`}}}}{BEn{{Bb{{j{c}}B`}}}D`}`{{BEnAj}{{C`{Kl}}}}{{BEnAj}{{Bb{AnB`}}}}{ce{}{}}00{{AnAh}An}{{Anc}An{AbKj}}{{An{j{n}}An}{{Bb{AnB`}}}}````{{AnAnc}An{{Dl{AnAn}{{Db{An}}}}}}{{{BFl{}{{Db{c}}}}An}c{}}{{BFnAn}{{Bb{AnB`}}}}{{{j{Bd}}An}{{Bb{AnB`}}}}`210210210210``{{BMlAn}{{Bb{AnB`}}}}{{{j{F`}}An}{{Bb{AnB`}}}}{{BMlc}{{Bb{AnB`}}}Ad}{{{j{F`}}c}{{Bb{AnB`}}}Ad}```{{cf}b{}}<<{CGdCGd}{{ce}b{}{}}{{}CGd}{Fdc{}}0{Fdb}{{CGdCGd}d}{{ce}d{}{}}00{{CGdGf}{{Bb{bGh}}}}{cc{}}{{CGdc}bAFh}{{}Fd}{ce{}{}}0{c{{Bb{e}}}{}{}}0{cOf{}}2``>{DjAn}033{DjDj}>1<<;754{AnDj}{{Dj{Cf{Cd}}}b}65546{{Dj{Cf{Cd}}e}c{}{{Dd{Dj}{{Db{c}}}}}}","D":"AEJfKd","p":[[1,"unit"],[1,"bool"],[5,"Private",10006],[5,"ListType",1684],[5,"ChunkedArray",17],[5,"StringType",1684],[5,"BooleanType",1684],[10,"PolarsNumericType",1684],[10,"Num",10007],[10,"ToPrimitive",10008],[5,"BinaryType",1684],[1,"str"],[1,"u8"],[1,"slice"],[5,"Series",9528],[6,"PolarsError",3067],[6,"Result",10009],[10,"NumOpsDispatchInner",9929],[6,"GroupsProxy",3444],[5,"ObjectType",1684],[10,"PolarsObject",1255],[5,"FixedSizeListType",1684],[5,"Settings",17],[6,"Option",10010],[17,"Item"],[10,"Array",10011],[5,"Box",10012],[10,"Iterator",10013],[5,"AmortizedListIter",10014],[17,"IsNested"],[5,"FalseT",1684],[10,"PolarsDataType",1684],[17,"Output"],[10,"Fn",10015],[10,"Copy",10016],[6,"Cow",10017],[5,"UnstableSeries",9982],[10,"FnMut",10015],[5,"Float64Type",1684],[5,"Float32Type",1684],[6,"DataType",1684],[5,"String",10018],[5,"BinaryOffsetType",1684],[5,"SortOptions",1377],[5,"UInt32Type",1684],[5,"SortMultipleOptions",1377],[10,"PolarsIntegerType",1684],[10,"NumOpsDispatchCheckedInner",9950],[5,"Iter",10019],[1,"usize"],[1,"fn"],[5,"Map",10020],[5,"Vec",10021],[10,"DoubleEndedIterator",10022],[1,"i64"],[5,"OffsetsBuffer",10023],[1,"tuple"],[10,"IntoIterator",10024],[5,"Formatter",10025],[5,"Error",10025],[17,"Array"],[10,"FallibleIterator",10026],[10,"PolarsAsRef",10027],[10,"Borrow",10028],[10,"AsRef",10029],[5,"Bitmap",10030],[10,"IntoParallelIterator",10031],[10,"Send",10016],[10,"Sync",10016],[10,"NoOption",10032],[10,"TrustedLen",10033],[6,"AnyValue",1684],[10,"PolarsObjectSafe",1255],[6,"IsSorted",9528],[1,"f32"],[1,"u64"],[5,"Int32Type",1684],[5,"DateType",1684],[5,"Logical",1684],[5,"Int64Type",1684],[6,"TimeUnit",1684],[5,"DatetimeType",1684],[5,"Int128Type",1684],[5,"DecimalType",1684],[5,"DurationType",1684],[10,"ExactSizeIterator",10034],[5,"TimeType",1684],[10,"PolarsFloatType",1684],[10,"PolarsIterator",1183],[5,"Iter",10035],[5,"IterNames",10035],[6,"ChunkedArrayLayout",17],[10,"NumCast",10008],[1,"f64"],[5,"Int8Type",1684],[1,"i8"],[1,"u32"],[1,"i32"],[5,"Range",10036],[5,"UInt64Type",1684],[5,"Int16Type",1684],[1,"i16"],[5,"UInt8Type",1684],[5,"UInt16Type",1684],[1,"u16"],[10,"ParallelIterator",10031],[10,"IndexedParallelIterator",10031],[6,"QuantileInterpolOptions",3807],[5,"Field",1684],[5,"RollingOptionsFixedWindow",3807],[10,"PolarsOpsNumericType",10037],[10,"Sized",10016],[5,"ChunkId",3807],[17,"HasViews"],[5,"RandomState",10038],[5,"BytesHash",10039],[5,"OwnedRepr",10040],[1,"array"],[5,"Dim",10041],[5,"ArrayBase",10042],[5,"ViewRepr",10042],[6,"Either",10043],[5,"TypeId",10044],[5,"NullableIdxSize",3807],[10,"FnOnce",10015],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",865],[5,"AnonymousListBuilder",893],[5,"AnonymousOwnedListBuilder",893],[5,"ListBooleanChunkedBuilder",893],[5,"ListPrimitiveChunkedBuilder",893],[10,"ListBuilderTrait",893],[10,"ChunkedBuilder",893],[5,"ListStringChunkedBuilder",893],[5,"ListBinaryChunkedBuilder",893],[5,"ListNullChunkedBuilder",893],[5,"BinViewChunkedBuilder",893],[10,"ViewType",10045],[5,"BooleanChunkedBuilder",893],[5,"NullChunkedBuilder",893],[5,"PrimitiveChunkedBuilder",893],[10,"Clone",10046],[5,"NullChunked",10047],[10,"NewChunkedArray",893],[10,"ChunkedCollectInferIterExt",1167],[10,"ChunkedCollectIterExt",1167],[10,"Canonical",1181],[5,"BooleanArray",10048],[5,"BoolIterNoNull",1183],[5,"FixedSizeListArray",10049],[5,"FixedSizeListIterNoNull",1183],[5,"StructIter",1183],[5,"SomeIterator",1183],[5,"ObjectArray",1255],[6,"ArrowDataType",1684],[10,"Any",10044],[10,"Debug",10025],[5,"BitmapIter",10050],[6,"ZipValidity",10051],[5,"Arc",3807],[5,"ObjectChunkedBuilder",1326],[10,"AnonymousObjectBuilder",1349],[5,"ObjectRegistry",1349],[17,"FuncRet"],[10,"ChunkApply",1377],[10,"ChunkApplyKernel",1377],[10,"ChunkSort",1377],[10,"ChunkUnique",1377],[10,"ChunkCast",1377],[6,"FillNullStrategy",1377],[10,"ChunkCompare",9528],[10,"ChunkExplode",1377],[10,"ChunkFillNullValue",1377],[10,"ChunkFilter",1377],[10,"ChunkFull",1377],[10,"ChunkFullNull",1377],[10,"ChunkAnyValue",1377],[10,"Hasher",10052],[10,"IsFirstDistinct",1377],[10,"IsLastDistinct",1377],[10,"ChunkAgg",1377],[10,"ChunkQuantile",1377],[10,"ChunkExpandAtIndex",1377],[10,"Reinterpret",1377],[10,"ChunkReverse",1377],[10,"ChunkRollApply",1377],[10,"ChunkSet",1377],[10,"ChunkShift",1377],[10,"ChunkShiftFill",1377],[10,"SlicedArray",1377],[10,"ChunkVar",1377],[10,"ChunkTake",1377],[10,"ChunkTakeUnchecked",1377],[10,"ChunkBytes",1377],[10,"ChunkZip",1377],[10,"BinaryFnMut",1577],[10,"StaticArray",1684],[10,"TernaryFnMut",1577],[10,"Error",10053],[10,"UnaryFnMut",1577],[5,"PrimitiveArray",10054],[6,"SearchSortedSide",1617],[5,"NoNull",3807],[5,"RowsEncoded",10055],[5,"NaiveDateTime",10056],[6,"Tz",10057],[5,"NaiveTime",10058],[5,"StructChunked",1684],[5,"CategoricalChunked",1684],[5,"CategoricalChunkedBuilder",1684],[10,"ArrayFromIter",1684],[10,"ArrayFromIterDtype",1684],[10,"AsRefDataType",1684],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",10059],[10,"From",10029],[5,"BinaryViewArrayGeneric",10045],[6,"RevMapping",1684],[10,"CategoricalMergeOperation",1684],[10,"LogicalType",1684],[6,"CategoricalOrdering",1684],[5,"OwnedObject",1684],[6,"UnknownKind",1684],[5,"CategoricalType",1684],[6,"ArrowTimeUnit",1684],[10,"ArrayCollectIterExt",1684],[5,"GlobalRevMapMerger",1684],[10,"Into",10029],[10,"NumericNative",1684],[5,"ArrowField",3807],[6,"PrimitiveType",10060],[6,"IntegerType",10061],[5,"TimeDelta",10062],[5,"NaiveDate",10063],[5,"LazyCompact",10064],[5,"SmartString",10065],[10,"GetAnyValue",1684],[5,"CatIter",1684],[6,"Ordering",10066],[5,"Duration",3807],[1,"u128"],[6,"PhysicalType",10061],[5,"DataFrame",3160],[5,"StringCacheHolder",3045],[5,"ErrString",3067],[6,"PolarsWarning",3067],[6,"Error",10067],[5,"TryReserveError",10068],[5,"Error",10069],[6,"Error",10070],[5,"Utf8Error",10071],[5,"Error",10072],[10,"Display",10025],[5,"Schema",3807],[10,"IntoSeries",9528],[6,"NullStrategy",3160],[6,"UniqueKeepStrategy",3160],[5,"HashSet",10073],[5,"ArrowSchema",3807],[5,"Row",3698],[5,"GroupBy",3444],[5,"DynamicGroupOptions",3807],[5,"RangeToInclusive",10036],[5,"RangeInclusive",10036],[5,"RangeFull",10036],[5,"RangeFrom",10036],[5,"RangeTo",10036],[5,"RecordBatchIter",3160],[5,"PhysRecordBatchIter",3160],[5,"LazyFrame",3807],[10,"IntoVec",3807],[5,"MeltArgs",3415],[5,"RollingGroupOptions",3807],[10,"RangeBounds",10036],[6,"IndexOrder",3807],[5,"StructArray",3807],[5,"RecordBatch",10074],[5,"GroupsIdx",3444],[5,"UnitVec",10075],[6,"GroupByMethod",3444],[5,"SlicedGroups",3444],[5,"GroupsProxyParIter",3444],[10,"UnindexedConsumer",10076],[6,"GroupsIndicator",3444],[6,"AAggExpr",10077],[10,"IntoGroupsProxy",3444],[5,"Copied",10078],[5,"Zip",10079],[5,"GroupsProxyIter",3444],[10,"IsFloat",10080],[10,"NativeType",10081],[10,"AggList",3682],[10,"TakeExtremum",3682],[10,"PhysicalAggExpr",3695],[6,"AnyValueBuffer",3698],[6,"AnyValueBufferTrusted",3698],[10,"JoinDispatch",3807],[5,"JoinArgs",3807],[10,"SeriesTrait",9528],[10,"DfTake",3807],[10,"DataFrameOps",3807],[5,"CsvReader",3807],[6,"CommentPrefix",3807],[10,"MmapBytesReader",10082],[6,"Expr",3807],[10,"LhsNumOps",9929],[10,"NumOpsDispatch",9929],[5,"LazyGroupBy",3807],[10,"Allocator",10083],[5,"JoinBuilder",3807],[10,"AnonymousScan",3807],[5,"LazyJsonLineReader",3807],[5,"ScanArgsAnonymous",3807],[10,"FunctionOutputField",3807],[5,"SpecialEq",3807],[6,"VisitRecursion",10084],[6,"FunctionExpr",3807],[10,"ArgAgg",3807],[5,"ArrayNameSpace",3807],[5,"ListNameSpace",3807],[5,"IpcStreamReader",3807],[10,"Read",10085],[10,"SeriesUdf",3807],[10,"AsBinary",3807],[10,"StringMethods",8775],[10,"PhysicalExpr",3807],[5,"BorrowedFd",10086],[10,"AsFd",10086],[10,"AsList",3807],[10,"PartitionedAggregation",3807],[10,"AsRawFd",10087],[6,"AggExpr",3807],[10,"SeriesSealed",3807],[10,"StatsEvaluator",10088],[5,"PhysicalIoHelper",3807],[10,"AsString",3807],[20,"MaybeUninit",10089],[10,"StringNameSpaceImpl",3807],[5,"CsvWriter",3807],[5,"BatchedWriter",10090],[10,"Write",10085],[5,"IpcWriter",3807],[5,"BatchedWriter",10091],[5,"ParquetReader",3807],[5,"BatchedParquetReader",3807],[5,"ParquetWriter",3807],[5,"BatchedWriter",10092],[5,"BatchedCsvReaderMmap",3807],[5,"BatchedCsvReaderRead",3807],[5,"OwnedBatchedCsvReaderMmap",3807],[5,"OwnedBatchedCsvReader",3807],[5,"BinaryNameSpace",8758],[6,"Operator",3807],[10,"RenameAliasFn",3807],[5,"UserDefinedFunction",3807],[10,"SeriesBinaryUdf",3807],[5,"InProcessQuery",3807],[5,"HashMap",10093],[5,"CategoricalNameSpace",3807],[10,"RoundSeries",3807],[10,"TemporalMethods",9412],[10,"NumOpsDispatchChecked",9950],[5,"RollingOptionsImpl",3807],[5,"Bounds",3807],[6,"ClosedWindow",3807],[6,"Label",3807],[6,"StartBy",3807],[5,"Window",3807],[5,"CsvReaderOptions",3807],[6,"CsvEncoding",3807],[5,"UnionArgs",3807],[6,"NullValues",3807],[5,"CsvWriterOptions",3807],[5,"SerializeOptions",3807],[6,"InterpolationMethod",3807],[6,"QuoteStyle",3807],[5,"IpcScanOptions",3807],[5,"IpcWriterOptions",3807],[6,"IpcCompression",3807],[6,"JoinCoalesce",3807],[5,"JsonWriterOptions",3807],[6,"JoinType",3807],[6,"JoinValidation",3807],[5,"ParquetOptions",3807],[5,"AsOfOptions",3807],[6,"ParallelStrategy",3807],[6,"AsofStrategy",3807],[5,"ParquetWriteOptions",3807],[6,"ParquetCompression",3807],[6,"ClosedInterval",3807],[5,"LazyCsvReader",3807],[5,"GzipLevel",3807],[6,"RankMethod",3807],[5,"BrotliLevel",3807],[5,"ScanArgsIpc",3807],[5,"RankOptions",3807],[5,"ZstdLevel",3807],[5,"ScanArgsParquet",3807],[6,"DslPlan",3807],[5,"When",3807],[5,"Then",3807],[5,"ChainedWhen",3807],[5,"ChainedThen",3807],[6,"Excluded",3807],[6,"BooleanFunction",3807],[5,"DatetimeArgs",3807],[5,"DurationArgs",3807],[5,"RollingCovOptions",3807],[5,"StrptimeOptions",3807],[5,"JoinOptions",3807],[6,"WindowType",3807],[6,"WindowMapping",3807],[5,"OptState",3807],[6,"LiteralValue",3807],[5,"AnonymousScanOptions",3807],[5,"FileMetaData",3807],[5,"RollingVarParams",3807],[5,"RollingQuantileParams",3807],[6,"NonExistent",3807],[10,"LazyFileListReader",3807],[5,"CloudOptions",8936],[10,"Ord",10066],[6,"ColumnOrder",10094],[10,"BinaryNameSpaceImpl",3807],[5,"PathBuf",10095],[5,"IpcStreamWriterOption",3807],[10,"SerWriter",3807],[5,"IpcWriterOption",3807],[10,"CrossJoin",3807],[10,"ExprEvalExtension",3807],[10,"DateMethods",8775],[10,"DatetimeMethods",8775],[10,"DurationMethods",8775],[10,"BinaryUdfOutputField",3807],[10,"Default",10096],[5,"RowGroupMetaData",10097],[5,"ParquetStatistics",3807],[6,"NullBehavior",9956],[5,"DotNode",10098],[5,"Weak",10099],[5,"DateLikeNameSpace",9291],[1,"char"],[10,"FromIterator",10024],[10,"Scalar",10100],[10,"PartialEq",10066],[10,"ListNameSpaceExtension",3807],[5,"ExecutionState",10101],[5,"AggregationContext",3807],[10,"Command",10102],[5,"StructNameSpace",3807],[10,"SerReader",3807],[5,"IpcReader",3807],[5,"IpcStreamWriter",3807],[5,"JsonWriter",3807],[5,"JsonReader",3807],[5,"JsonLineReader",3807],[10,"PhysicalIoExpr",10088],[5,"File",10103],[10,"UdfSchema",3807],[6,"RangeFunction",10104],[6,"ArrayFunction",10105],[6,"ListFunction",10106],[6,"BinaryFunction",10107],[6,"StructFunction",10108],[6,"StringFunction",10109],[6,"TemporalFunction",10110],[6,"CategoricalFunction",10111],[5,"Path",10095],[5,"CStr",10112],[5,"OsStr",10113],[1,"never"],[10,"ToOwned",10017],[5,"CString",10114],[5,"OsString",10113],[5,"MutableStatistics",10115],[5,"GrowableStruct",10116],[5,"MutableStructArray",10117],[10,"FromData",9285],[5,"Buffer",10118],[10,"FromDataUtf8",9285],[10,"FromDataBinary",9285],[5,"ListArray",10119],[6,"Ambiguous",3807],[10,"NamedFromOwned",3807],[5,"FunctionOptions",10120],[10,"PartialOrd",10066],[6,"Context",10121],[5,"FieldsMapper",3807],[10,"IndexOfSchema",3807],[5,"BoundsIter",3807],[6,"ReaderBytes",10082],[10,"PolarsTemporalGroupby",3807],[10,"PolarsArray",3807],[10,"Hash",10052],[10,"SeriesJoin",3807],[10,"TimeMethods",8775],[10,"DataFrameJoinOps",3807],[10,"IntoListNameSpace",3807],[5,"FileMetaData",10122],[10,"SeriesMethods",3807],[5,"StructValueIter",10123],[10,"AsofJoin",3807],[10,"AsofJoinBy",3807],[10,"ListNameSpaceImpl",3807],[5,"ExprNameNameSpace",3807],[5,"KeyValue",10122],[10,"IntoLazy",3807],[10,"Literal",3807],[5,"Null",3807],[5,"RowIndex",10124],[10,"ChunkAggSeries",3807],[10,"QuantileAggSeries",3807],[10,"PolarsMonthEnd",3807],[10,"PolarsMonthStart",3807],[10,"IndexToUsize",3807],[10,"NamedFrom",3807],[6,"RowGroupFetcher",10125],[6,"IR",10126],[5,"Arena",10127],[6,"AExpr",10077],[5,"Node",10127],[5,"Pin",10128],[5,"Request",10053],[10,"SeriesRank",3807],[5,"BorrowedCursor",10129],[10,"VarInt",10130],[5,"IoSliceMut",10085],[10,"SeriesOpsTime",8775],[5,"RollingOptions",8775],[10,"PolarsRound",3807],[5,"AnonymousScanArgs",3807],[10,"ChunkedSet",3807],[5,"SchemaDescriptor",10131],[6,"SeekFrom",10085],[10,"VarAggSeries",3807],[5,"StringNameSpace",10132],[10,"TakeChunked",3807],[10,"ToDummies",3807],[10,"PolarsTruncate",3807],[5,"AllocError",10083],[5,"RwLock",10133],[10,"PolarsUpsample",3807],[10,"VecHash",3807],[5,"NonZero",10134],[6,"JsonFormat",3807],[5,"BTreeMap",10135],[5,"IoSlice",10085],[10,"ArrayNameSpace",8739],[10,"AsArray",8739],[10,"AsString",8868],[6,"Pattern",8868],[5,"DatetimeInfer",8906],[10,"StrpTimeParser",8906],[17,"Error"],[10,"TryFromWithUnit",8906],[6,"CloudType",8936],[5,"AnonymousBuilder",9346],[5,"MutableNullArray",9376],[5,"MutableBitmap",10136],[10,"AsSeries",9412],[5,"Utf8Array",10137],[5,"BinaryArray",10138],[5,"SeriesIter",9528],[8,"FillNullLimit",1377],[10,"InitHashMaps",1684],[10,"InitHashMaps2",1684],[5,"TrueT",1684],[8,"PolarsResult",3067],[15,"IO",8687],[15,"Context",8687],[15,"Count",8681],[15,"Slice",8682],[8,"ChunkJoinOptIds",3807],[8,"DynArgs",3807],[8,"AllowedOptimizations",3807],[10,"ListFromIter",3807],[15,"Quantile",8565],[15,"Min",8565],[15,"Max",8565],[15,"IsBetween",8572],[15,"Any",8572],[15,"All",8572],[15,"GroupBy",8575],[15,"Sort",8575],[15,"Cache",8575],[15,"ExtContext",8575],[15,"DataFrameScan",8575],[15,"Select",8575],[15,"HStack",8575],[15,"Scan",8575],[15,"MapFunction",8575],[15,"Filter",8575],[15,"Distinct",8575],[15,"Slice",8575],[15,"Sink",8575],[15,"Join",8575],[15,"Union",8575],[15,"HConcat",8575],[15,"SortBy",8627],[15,"Filter",8627],[15,"Cast",8627],[15,"Sort",8627],[15,"Gather",8627],[15,"RenameAlias",8627],[15,"Ternary",8627],[15,"Function",8627],[15,"Window",8627],[15,"AnonymousFunction",8627],[15,"Slice",8627],[15,"BinaryExpr",8627],[15,"Round",8661],[15,"RoundSF",8661],[15,"Clip",8661],[15,"BackwardFill",8661],[15,"ForwardFill",8661],[15,"Random",8661],[15,"GatherEvery",8661],[15,"Rank",8661],[15,"ValueCounts",8661],[15,"Replace",8661],[15,"CumCount",8661],[15,"CumSum",8661],[15,"CumProd",8661],[15,"CumMin",8661],[15,"CumMax",8661],[15,"Range",8684],[10,"Utf8FromIter",9524],[10,"BinaryFromIter",9524]],"b":[[31,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[32,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[33,"impl-Add-for-ChunkedArray%3CT%3E"],[34,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[35,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[36,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[37,"impl-Add-for-%26ChunkedArray%3CT%3E"],[38,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[39,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[40,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[41,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[42,"impl-Add-for-ChunkedArray%3CStringType%3E"],[44,"impl-AggList-for-ChunkedArray%3CT%3E"],[45,"impl-AggList-for-ChunkedArray%3CListType%3E"],[46,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[47,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[48,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[49,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[50,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[54,"impl-ChunkedArray%3CFixedSizeListType%3E"],[55,"impl-ChunkedArray%3CListType%3E"],[56,"impl-ChunkedArray%3CFixedSizeListType%3E"],[57,"impl-ChunkedArray%3CListType%3E"],[61,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[62,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[63,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[64,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[65,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[66,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[68,"impl-ChunkedArray%3CListType%3E"],[69,"impl-ChunkedArray%3CFixedSizeListType%3E"],[71,"impl-ChunkedArray%3CFloat64Type%3E"],[72,"impl-ChunkedArray%3CFloat32Type%3E"],[75,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[76,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[77,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[78,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[79,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[80,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[81,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[82,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[83,"impl-ChunkedArray%3CT%3E"],[84,"impl-ChunkedArray%3CStringType%3E"],[85,"impl-ChunkedArray%3CBinaryType%3E"],[88,"impl-ChunkedArray%3CFixedSizeListType%3E"],[89,"impl-ChunkedArray%3CListType%3E"],[90,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[91,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[92,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[93,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[94,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[95,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[96,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[97,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[98,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[99,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[100,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[101,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[103,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[104,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[105,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[106,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[107,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[108,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[109,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[110,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[111,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[112,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[113,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[114,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[115,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[116,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[117,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[120,"impl-ChunkedArray%3CStringType%3E"],[121,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[125,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[126,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[128,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[129,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[130,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[133,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[134,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[135,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[138,"impl-Flags-for-Settings"],[139,"impl-Settings"],[140,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[141,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[142,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[153,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[154,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[155,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[156,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[157,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[158,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[159,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[161,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[162,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[163,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[164,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[165,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[166,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[167,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[193,"impl-Div-for-%26ChunkedArray%3CT%3E"],[194,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[195,"impl-Div-for-ChunkedArray%3CT%3E"],[196,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[205,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[206,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[207,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[208,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[209,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[210,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[211,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[212,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[213,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[214,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[215,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[216,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[217,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[218,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[219,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[220,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[221,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[222,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[223,"impl-ChunkExplode-for-ChunkedArray%3CStringType%3E"],[224,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[225,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[228,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[229,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[230,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[231,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[232,"impl-ChunkFilter%3CListType%3E-for-ChunkedArray%3CListType%3E"],[233,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[234,"impl-ChunkFilter%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[235,"impl-ChunkFilter%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[236,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[237,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[238,"impl-ChunkFilter%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[241,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[242,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[243,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[244,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[245,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[246,"impl-Debug-for-ChunkedArray%3CT%3E"],[247,"impl-Debug-for-ChunkedArray%3CListType%3E"],[248,"impl-Binary-for-Settings"],[249,"impl-Octal-for-Settings"],[250,"impl-UpperHex-for-Settings"],[251,"impl-LowerHex-for-Settings"],[252,"impl-Debug-for-Settings"],[254,"impl-ChunkedArray%3CListType%3E"],[255,"impl-ChunkedArray%3CFixedSizeListType%3E"],[261,"impl-Settings"],[262,"impl-Flags-for-Settings"],[270,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[271,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[272,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[273,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[274,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[275,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[276,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[277,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[278,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[279,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[280,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[281,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[283,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[284,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[285,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[286,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[287,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[288,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[289,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[290,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[291,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[292,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[293,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[294,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[295,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[296,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[297,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[298,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[299,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[300,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[301,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[302,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[303,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[304,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[307,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[308,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[309,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[310,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[311,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[312,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[313,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[314,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[315,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[316,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[317,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[318,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[319,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[320,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[321,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[322,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[323,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[324,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[325,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[326,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[329,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[330,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[331,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[332,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[333,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[334,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[335,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[336,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[337,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[338,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[339,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[340,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[341,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[342,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[343,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[344,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[346,"impl-ChunkedArray%3CFixedSizeListType%3E"],[347,"impl-ChunkedArray%3CListType%3E"],[349,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[350,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[351,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[352,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[353,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[354,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[355,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[356,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[357,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[358,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[359,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[360,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[361,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[362,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[363,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[364,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[365,"impl-ChunkedArray%3CListType%3E"],[366,"impl-ChunkedArray%3CFixedSizeListType%3E"],[368,"impl-ChunkedArray%3CListType%3E"],[369,"impl-ChunkedArray%3CFixedSizeListType%3E"],[374,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[375,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[376,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[377,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[378,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[379,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[380,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[381,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[382,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[383,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[384,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[385,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[387,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[388,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[389,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[390,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[391,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[392,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[393,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[394,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[395,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[396,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[397,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[398,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[399,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[400,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[401,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[402,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[403,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[404,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[411,"impl-ChunkedArray%3CListType%3E"],[412,"impl-ChunkedArray%3CFixedSizeListType%3E"],[424,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[425,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[426,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[427,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[428,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[429,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[430,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[431,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[434,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[435,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[456,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[457,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[458,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[459,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[460,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[461,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[467,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[468,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[469,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[470,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[471,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[472,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[473,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[474,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[475,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[476,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[477,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[478,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[479,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[480,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[481,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[482,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[483,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[484,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[485,"impl-ChunkedArray%3CBooleanType%3E"],[486,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[487,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[488,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[489,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[490,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[491,"impl-ChunkedArray%3CBooleanType%3E"],[492,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[493,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[494,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[495,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[496,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[497,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[498,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[499,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[500,"impl-ChunkedArray%3CBooleanType%3E"],[501,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[502,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[503,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[504,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[506,"impl-ChunkedArray%3CT%3E"],[507,"impl-ChunkedArray%3CBooleanType%3E"],[508,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[509,"impl-Mul-for-ChunkedArray%3CT%3E"],[510,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[511,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[513,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[514,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[515,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[517,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[518,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[519,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[520,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[521,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[522,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[523,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[524,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[525,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[526,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[527,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[528,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[529,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[530,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[531,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[532,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[533,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[534,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[535,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[536,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[537,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[538,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[539,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[540,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[541,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[542,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[543,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[544,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[545,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[546,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[547,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[548,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[549,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[550,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[551,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[552,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[553,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[554,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[555,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[556,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[558,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[559,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[560,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[561,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[562,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[563,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[564,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[565,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[570,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[571,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[573,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[574,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[575,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[576,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[577,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[578,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[579,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[580,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[581,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[582,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[583,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[584,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[585,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[586,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[587,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[588,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[589,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[590,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[593,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[594,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[595,"impl-ChunkExplode-for-ChunkedArray%3CStringType%3E"],[597,"impl-ChunkedArray%3CListType%3E"],[598,"impl-ChunkedArray%3CStringType%3E"],[599,"impl-ChunkedArray%3CListType%3E"],[600,"impl-ChunkedArray%3CStringType%3E"],[603,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[604,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[605,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[606,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[607,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[608,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[615,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[616,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[617,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[618,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[619,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[620,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[621,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[622,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[623,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[624,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[625,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[626,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[627,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[628,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[629,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[630,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[631,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[632,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[633,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[634,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[635,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[636,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[637,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[638,"impl-Rem-for-ChunkedArray%3CT%3E"],[639,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[640,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[644,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[645,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[646,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[647,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[648,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[649,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[650,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[651,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[656,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[657,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[658,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[659,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[660,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[661,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[662,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[663,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[664,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[665,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[666,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[667,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[668,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[669,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[670,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[677,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[678,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[679,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[680,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[681,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[682,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[683,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[684,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[685,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[686,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[687,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[688,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[689,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[690,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[691,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[692,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[695,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[696,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[697,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[698,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[699,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[700,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[701,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[702,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[703,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[704,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[706,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[707,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[708,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[709,"impl-Sub-for-ChunkedArray%3CT%3E"],[710,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[711,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[712,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[716,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[717,"impl-ChunkedArray%3CBooleanType%3E"],[718,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[719,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[720,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[721,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[724,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[725,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[728,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[729,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[730,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[731,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[732,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[733,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[738,"impl-ChunkedArray%3CFixedSizeListType%3E"],[739,"impl-ChunkedArray%3CListType%3E"],[740,"impl-ChunkedArray%3CListType%3E"],[741,"impl-ChunkedArray%3CT%3E"],[748,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[749,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[750,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[751,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[752,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[753,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[755,"impl-ChunkedArray%3CListType%3E"],[756,"impl-ChunkedArray%3CFixedSizeListType%3E"],[773,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[774,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[775,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[776,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[777,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[782,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[783,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[784,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[785,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[786,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[787,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[788,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[789,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[790,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[791,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[792,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[793,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[794,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[795,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[796,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[797,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[798,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[799,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[800,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[801,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[802,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[803,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[804,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[805,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[806,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[807,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[808,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[809,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[810,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[811,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[812,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[813,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[814,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[815,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[816,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[826,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[827,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[828,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[829,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[830,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[831,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[832,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[833,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[834,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[835,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[836,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[837,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[838,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[839,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[840,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[841,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[842,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[843,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[844,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[845,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[846,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[847,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[848,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[849,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[850,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[851,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[852,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[853,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[854,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[855,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[856,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[857,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[858,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[859,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[860,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[861,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[1036,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1037,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1260,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1261,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1293,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1294,"impl-ObjectArray%3CT%3E"],[1306,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1307,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1317,"impl-ObjectArray%3CT%3E"],[1318,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1320,"impl-ObjectArray%3CT%3E"],[1321,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1323,"impl-Array-for-ObjectArray%3CT%3E"],[1324,"impl-ObjectArray%3CT%3E"],[1327,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1328,"impl-ObjectChunkedBuilder%3CT%3E"],[1330,"impl-ObjectChunkedBuilder%3CT%3E"],[1331,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[2058,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2059,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2060,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2061,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2062,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2066,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2067,"impl-Logical%3CDurationType,+Int64Type%3E"],[2308,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2309,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2310,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2311,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2312,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2320,"impl-PartialEq-for-DataType"],[2321,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2327,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2328,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2329,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2331,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2332,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2333,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2367,"impl-Debug-for-AnyValue%3C\'a%3E"],[2368,"impl-Display-for-AnyValue%3C\'_%3E"],[2370,"impl-Debug-for-DataType"],[2371,"impl-Display-for-DataType"],[2373,"impl-Display-for-TimeUnit"],[2374,"impl-Debug-for-TimeUnit"],[2379,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2380,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2395,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2396,"impl-From%3CK%3E-for-AnyValue%3C\'_%3E"],[2398,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2400,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2401,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2402,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2404,"impl-From%3C%26ArrowField%3E-for-Field"],[2427,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2428,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2452,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2453,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2454,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2455,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2456,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2460,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2461,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2462,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2463,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2464,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2499,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2500,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2501,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2503,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2504,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2505,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2604,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[2605,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[2606,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[2607,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[2608,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[2656,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2657,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2658,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2660,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2661,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2662,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2675,"impl-PolarsMonthEnd-for-Logical%3CDateType,+Int32Type%3E"],[2676,"impl-PolarsMonthEnd-for-Logical%3CDatetimeType,+Int64Type%3E"],[2677,"impl-PolarsMonthStart-for-Logical%3CDateType,+Int32Type%3E"],[2678,"impl-PolarsMonthStart-for-Logical%3CDatetimeType,+Int64Type%3E"],[2701,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[2702,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[2703,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2704,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[2705,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[2706,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2707,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[2708,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[2713,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2714,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2715,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2717,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2718,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2719,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2723,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[2724,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[2744,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[2745,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[2752,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2753,"impl-Logical%3CDurationType,+Int64Type%3E"],[2758,"impl-Logical%3CDateType,+Int32Type%3E"],[2759,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2760,"impl-Logical%3CTimeType,+Int64Type%3E"],[2774,"impl-Logical%3CDurationType,+Int64Type%3E"],[2775,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2822,"impl-Logical%3CTimeType,+Int64Type%3E"],[2823,"impl-Logical%3CDateType,+Int32Type%3E"],[2824,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2829,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[2830,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3111,"impl-Display-for-ErrString"],[3112,"impl-Debug-for-ErrString"],[3113,"impl-Display-for-PolarsError"],[3114,"impl-Debug-for-PolarsError"],[3118,"impl-From%3CError%3E-for-PolarsError"],[3119,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3120,"impl-From%3CError%3E-for-PolarsError"],[3121,"impl-From%3CError%3E-for-PolarsError"],[3122,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3124,"impl-From%3CError%3E-for-PolarsError"],[3248,"impl-Display-for-DataFrame"],[3249,"impl-Debug-for-DataFrame"],[3254,"impl-From%3C%26Schema%3E-for-DataFrame"],[3255,"impl-From%3CStructChunked%3E-for-DataFrame"],[3256,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3284,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3285,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3286,"impl-Index%3Cusize%3E-for-DataFrame"],[3287,"impl-Index%3C%26str%3E-for-DataFrame"],[3288,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3289,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3290,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3291,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3382,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3383,"impl-TryFrom%3C(RecordBatch%3CBox%3Cdyn+Array%3E%3E,+%26%5BArrowField%5D)%3E-for-DataFrame"],[3556,"impl-Display-for-GroupByMethod"],[3557,"impl-Debug-for-GroupByMethod"],[3563,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3565,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3566,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3600,"impl-IntoIterator-for-GroupsIdx"],[3601,"impl-IntoIterator-for-%26GroupsIdx"],[3603,"impl-IntoParallelIterator-for-GroupsIdx"],[3604,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4829,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[4830,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[5448,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[5449,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[5450,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[5912,"impl-PartialEq-for-Expr"],[5913,"impl-Expr"],[5916,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[5917,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[5927,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[5928,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[5929,"impl-PartialEq-for-Arc%3CT,+A%3E"],[5933,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[5934,"impl-PartialEq-for-StructArray"],[6187,"impl-Display-for-Duration"],[6188,"impl-Debug-for-Duration"],[6212,"impl-Debug-for-JoinType"],[6213,"impl-Display-for-JoinType"],[6214,"impl-Debug-for-JoinValidation"],[6215,"impl-Display-for-JoinValidation"],[6229,"impl-Debug-for-Expr"],[6230,"impl-Display-for-Expr"],[6232,"impl-Debug-for-Operator"],[6233,"impl-Display-for-Operator"],[6235,"impl-Display-for-BooleanFunction"],[6236,"impl-Debug-for-BooleanFunction"],[6237,"impl-Display-for-FunctionExpr"],[6238,"impl-Debug-for-FunctionExpr"],[6250,"impl-Debug-for-Arc%3CT,+A%3E"],[6251,"impl-Display-for-Arc%3CT,+A%3E"],[6252,"impl-Pointer-for-Arc%3CT,+A%3E"],[6323,"impl-From%3CDslPlan%3E-for-LazyFrame"],[6324,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[6365,"impl-From%3C%26str%3E-for-Expr"],[6366,"impl-From%3Cu64%3E-for-Expr"],[6367,"impl-From%3Cu8%3E-for-Expr"],[6368,"impl-From%3Cf64%3E-for-Expr"],[6369,"impl-From%3Ci32%3E-for-Expr"],[6370,"impl-From%3CAggExpr%3E-for-Expr"],[6371,"impl-From%3Cu32%3E-for-Expr"],[6372,"impl-From%3Cu16%3E-for-Expr"],[6373,"impl-From%3Cf32%3E-for-Expr"],[6374,"impl-From%3Ci8%3E-for-Expr"],[6375,"impl-From%3Cbool%3E-for-Expr"],[6376,"impl-From%3Ci16%3E-for-Expr"],[6378,"impl-From%3Ci64%3E-for-Expr"],[6381,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6382,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6383,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6384,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6385,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6386,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6387,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6388,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6389,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6391,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6394,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[6395,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[6396,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[6397,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[6410,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[6411,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[6412,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[6413,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[6414,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[6415,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[6416,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[6417,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[6418,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[6421,"impl-From%3CT%3E-for-Arc%3CT%3E"],[6422,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[6423,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[6424,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[6425,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[6426,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[6433,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[6435,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[6436,"impl-From%3CArrowSchema%3E-for-Schema"],[6437,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[6438,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[6439,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[6440,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[6442,"impl-From%3CMutableStructArray%3E-for-StructArray"],[6456,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6457,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6465,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6466,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6478,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6479,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7533,"impl-StructArray"],[7534,"impl-Array-for-StructArray"],[7542,"impl-Array-for-StructArray"],[7543,"impl-StructArray"],[8207,"impl-StructArray"],[8208,"impl-Array-for-StructArray"],[8450,"impl-LazyFileListReader-for-LazyCsvReader"],[8451,"impl-LazyCsvReader"],[8452,"impl-LazyFileListReader-for-LazyJsonLineReader"],[8453,"impl-LazyJsonLineReader"],[8498,"impl-LazyCsvReader"],[8499,"impl-LazyFileListReader-for-LazyCsvReader"],[8500,"impl-LazyJsonLineReader"],[8501,"impl-LazyFileListReader-for-LazyJsonLineReader"],[8531,"impl-StructArray"],[8532,"impl-Array-for-StructArray"],[8925,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[8926,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[8931,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[8932,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[9544,"impl-Add%3CT%3E-for-%26Series"],[9545,"impl-Add%3CT%3E-for-Series"],[9546,"impl-Add-for-Series"],[9547,"impl-Add-for-%26Series"],[9562,"impl-AsSeries-for-Series"],[9563,"impl-SeriesSealed-for-Series"],[9607,"impl-Div-for-%26Series"],[9608,"impl-Div%3CT%3E-for-%26Series"],[9609,"impl-Div-for-Series"],[9610,"impl-Div%3CT%3E-for-Series"],[9620,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9621,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9622,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9624,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9625,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9626,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9643,"impl-Display-for-Series"],[9644,"impl-Debug-for-Series"],[9648,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[9649,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[9650,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[9651,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[9653,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[9659,"impl-FromIterator%3CString%3E-for-Series"],[9660,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[9661,"impl-FromIterator%3C%26i8%3E-for-Series"],[9662,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[9663,"impl-FromIterator%3C%26f64%3E-for-Series"],[9664,"impl-FromIterator%3Cu64%3E-for-Series"],[9665,"impl-FromIterator%3Cu8%3E-for-Series"],[9666,"impl-FromIterator%3Ci64%3E-for-Series"],[9667,"impl-FromIterator%3C%26i64%3E-for-Series"],[9668,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[9669,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[9670,"impl-FromIterator%3C%26i16%3E-for-Series"],[9671,"impl-FromIterator%3C%26bool%3E-for-Series"],[9672,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[9673,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[9674,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[9675,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[9676,"impl-FromIterator%3Cu16%3E-for-Series"],[9677,"impl-FromIterator%3Ci8%3E-for-Series"],[9678,"impl-FromIterator%3Cf64%3E-for-Series"],[9679,"impl-FromIterator%3C%26f32%3E-for-Series"],[9680,"impl-FromIterator%3C%26u8%3E-for-Series"],[9681,"impl-FromIterator%3Cu32%3E-for-Series"],[9682,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[9683,"impl-FromIterator%3C%26i32%3E-for-Series"],[9684,"impl-FromIterator%3Ci32%3E-for-Series"],[9685,"impl-FromIterator%3Cf32%3E-for-Series"],[9686,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[9687,"impl-FromIterator%3C%26u16%3E-for-Series"],[9688,"impl-FromIterator%3Cbool%3E-for-Series"],[9689,"impl-FromIterator%3C%26u64%3E-for-Series"],[9690,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[9691,"impl-FromIterator%3C%26str%3E-for-Series"],[9692,"impl-FromIterator%3Ci16%3E-for-Series"],[9693,"impl-FromIterator%3C%26u32%3E-for-Series"],[9694,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[9695,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[9696,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[9697,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[9698,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[9699,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[9700,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[9701,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[9702,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[9703,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[9713,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9714,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9715,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9717,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9718,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9719,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9756,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9757,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9758,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9760,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9761,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9762,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9771,"impl-Mul-for-%26Series"],[9772,"impl-Mul-for-Series"],[9773,"impl-Mul%3CT%3E-for-%26Series"],[9774,"impl-Mul%3CT%3E-for-Series"],[9778,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[9779,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[9780,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[9781,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[9782,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[9783,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[9784,"impl-NamedFrom%3CT,+T%3E-for-Series"],[9785,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[9786,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[9787,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[9788,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[9789,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[9790,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[9791,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[9792,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[9793,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[9794,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[9795,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[9796,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[9797,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[9798,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[9799,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[9800,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[9801,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[9802,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[9803,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[9804,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[9805,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[9806,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[9807,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[9808,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[9809,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[9810,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[9811,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[9812,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[9813,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[9814,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[9815,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[9816,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[9817,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[9818,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[9819,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[9820,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[9821,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[9822,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[9823,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[9824,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[9825,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[9826,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[9827,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[9828,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[9834,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9835,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9836,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9838,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9839,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9840,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9848,"impl-Rem%3CT%3E-for-Series"],[9849,"impl-Rem%3CT%3E-for-%26Series"],[9850,"impl-Rem-for-%26Series"],[9874,"impl-Sub%3CT%3E-for-Series"],[9875,"impl-Sub-for-%26Series"],[9876,"impl-Sub%3CT%3E-for-%26Series"],[9877,"impl-Sub-for-Series"],[9903,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[9904,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"],[9905,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[9906,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAAwAEAAAAJkN4A0dDiAOIQ4iDiMOJA4pDiwOMQ4yDlcO","e":"OzAAAAEAAOkb+gMCAAAABQABAAgAAAALAAIAEAAAABIAAAAUAB8AOQAAAD4ABQBIAAIATAAKAFsABgBjAAoAcAAAAHIABAB4AAsAhgACAIsAAACNAAIAkgAGAJoABgCiAAgArgAEALQAAAC5AAcAwgAIAM0AFQDlAAoA8QAPAAIBAAAHAQAACQEBAA0BDQAcARAANAETAEoBEgBeARIAdQEAAHcBHgCYAQMApAERALkBAwDAAQEAxQEBAMgBBgDUASYA/QEHAAYCMgA7AgEAPgIRAFECAwBWAgQAXAIFAGYCAABoAhoAhQIHAJECDgChAgEApQIQALgCEQDMAgYA1wIBANwCAADgAgEA5wIBAO0CBwD3AgEA+gIKAAYDBAAMAwAADgMoADkDAAA7AyMAYQM0AJgDCAClAxEAugNYACAEEgA+BAcARwRYAKEEAACkBBQAvQQDAMUEAwDLBB4A7AQTAAEFBwAKBQAADQUBABAFAQAUBQ4AJAUAACcFAAApBQMALgUCADIFAAA0BQgAPgUAAEAFBQBIBQEASwUAAE0FAQBQBQMAVQUDAFoFAgBeBQMAZAUAAGcFAABvBQAAdAUAAHcFAQB8BQEAfwUAAIIFAACKBQAAkAUCAJsFBgCkBQ0AtAUFALwFCADIBQMAzQUAANAFAADSBQEA2AUFAOEFAQDqBQEA9gUAAPgFAQD7BQAA/gUAAAAGAAAEBgAABgYAAAsGDAAaBgIAKAYAACoGBwAzBgIAOQYAADsGAwBABgEAQwYFAE8GFQBmBgEAagYEAHAGAwB3BgYAiwYDAJAGBwCZBgQAoAYCAKQGBQCsBgAArgYMAL8GAQDDBgEAyQYBAMwGAQDPBgMA1AYAANYGAADZBgEA3QYAAN8GAQDiBgAA5AYCAOgGDAD2BgAA+AYBAPsGAAD9BgEAAAcAAAIHAQAFBwAABwcBAAoHAAAOBwAAEgcBABYHAAAZBwAAGwcAAB0HAwAiBwAAJQcHAC4HAQAxBwQANwcBADsHAAA9BwIAQgcAAEcHAwBMBwEATwcAAFEHAQBUBwAAVgcBAFkHAABbBwEAXgcAAGAHAQBjBwAAZQcAAGgHJQCPBxYApwdrABUITgBlCAcAbwiUAAUJBgANCSgANwkBADoJDwBMCQEAXAkBAF8JAABhCQIAZQkBAHwJAQCACQAAiAkAAIsJAACNCQYAlQkEAJsJAACdCQQAowkBAKYJGQDECQ4A1QkpAAAKAAArCggANgoAADgKAQA7CgQAQQoBAEYKAABICgUATwoAAFIKAgBXCgQAXQoAAF8KDwBxCgAAdAoSAIgKAACLCgwAmQoMAKcKAACpCgEArQoOAL0KAADECgAAxgoAAMsKDwDdCgAA3woCAOQKIAAKC2IAbgstAJ0LAQCgCzMA1QsBANgLCADiCwAA5AsBAOcLBADtCwEA8gsAAPQLAgD4CwAA/AsEAAIMBAAIDBAAGgwRAC0MAAAvDAQANQwEAD0MBABDDBUAWgwAAF0MAABgDAoAbAwCAHUMEACIDA8AmQwAAKAMAQCkDAIAqAwAAKoMAACvDAMAtwwCALsMAADKDAAAzAwAAM4MAQDVDAwA6AwCAPsMAQAIDQEADA0AABINAAAbDQEAHg0AACENAQAoDQAAKg0EADINBgA7DQkARg0AAEkNAQBNDQQAWQ0NAGgNAgBtDQoAeQ0BAHwNAwCBDQMAhg0JAJENBwCaDQEAnQ0YALcNKADhDQYA7A0AAO4NAQDxDQAA9A0EAPsNAAD/DQcADw4NAB4OAQAlDgMAKg4BAC4OAgAzDgAANQ4fAFgODABnDgUAbg4HAHcOIwCdDgsAqg4OALoOAQC+DgMAxQ4GAM8ODgDgDgYA6Q4AAOwOCAD2DgEA+g4DAP8OBQAGDwAACw8JABYPAQAaDwMAHw8BACIPCgAuDwAAMQ8AADMPCQA+DwAAQA8HAEkPAgBQDwAAUw8AAFsPAgBiDwAAZQ8BAGsPCgB3DwkAgg8AAIUPBgCNDwEAkA8DAJgPAwCfDwIApg8DAKsPAACtDwoAug8JAMYPAQDKDwAAzQ8AAM8PAgDTDwIA1w8EAN0PAgDjDwIA6Q8AAOsPAQDvDwAA8Q8EAPgPDAAGEAAACRABAAwQAwASEAIAGBAQACoQCQA2EAAAOBABADwQAAA+EAEAQhAAAEQQAQBIEAAAShADAFAQAQBTEAEAVxAAAFoQAABcEAMAYRACAGUQBgBuEAcAeBAAAHwQAQCAEAAAghAAAIQQAQCHEAEAihABAI8QAACREAoAnxAFAKYQBwCwEAIAtBAFAL4QAQDBEAAAwxABAMYQAwDMEAEAzxACANMQAADVEAMA2xAEAOEQAwDmEAIA6hAAAOwQAADuEAEA8RAAAPMQAAD2EAAA+RACAP4QAwADEQcADRECABQRAAAWEQUAHREDACIRAAAlEQAAJxEDAC0RAQAwEQMANRECADkRAgA9EQsAShEQAFwREQBvEQUAdhEDAH0RAQCBEQAAgxEFAIoRBACQEQAAkhEBAJYRAQCbEQEAoBEFAKoRBQCxEQMAuBEBALsRBQDCEQEAxhEBAMwRBADSEQYA2xEAAN0RAQDhEQAA4xEBAOcRAADpEQEA7REAAO8RBAD1EQMA+hEBAAASBwAJEgAADBIDABISAgAWElMAaxIDAHQSAAB5EgUAgRIAAIgSAACLEgAAjRIAAI8SAACTEgUAnRIAAKESAACoEgAArBIAALgSAQC7EgQAwRIAAMMSAgDHEgEAzRICANISBADYEgAA2hIBAOISDADxEu4A4RMAAOMTAADlEwEA6BMAAOoTAgDxEwEA9xMAAPkTAAADFAAABxQBABMURgBbFAoAZxRSALsUAgDAFAIAxhQCAMwUCgDaFAMA4BQAAOMUAADlFAAA7xQBAPMUAAD5FAAA+xQBAAAVAQAPFQAAFRUAABoVAgAgFQAAIhUFACoVKQBVFfYAThYAAFMWAQBWFgIAXBYCAGQWMQCXFjgA0RYMAOIWAQDnFgAA7RYCAPEWKAAbFw4AKxcIADcXkgDMFwAA0hcAANUXAADYFwUA3xcAAOMXAADpFwAA6xcAAPMXAAD2FwAA/xcAAAIYAgAHGAUADhgBABIYAAAUGAMAHBgAACAYAAAkGFYAfBgBAIAYAACmGAAAtBgBAMAYAADeGAsA6xgAAO4YCAD4GAAA+xgDAAUZAAAUGQAAHBkAACIZAAAkGQUAKxkAAC4ZAAAzGQAANhkEADwZAABCGQEARhkBAEwZBQBTGQIAVxkCAFwZAABeGQAAYxkAAGwZAABvGQEAchkCAHcZAAB5GQAAfRkBAIEZAwCJGQEAjRkAAJoZAACcGTgA2BkCAN8ZAADhGQAA4xkEAOoZAADsGQAA7xkAAPUZAgD7GXkAdxoAAHwaAQD1GgAA9xoFAP4aAQABGwMABxsAAAkbAgANGwEAERsAABQbAQAaGwAAIhsAACQbAAAnGwUALxsCAEAbAQBDGwEATBsAAE4bAQBRGwAAVRsCAFsbAABdGwEAYRsAAGYbAQBqGwEAcBsCAHQbAwB6Gw4AjhsAAJQbAQCbGwAAnhsFAKcbAACuGwIAwhsAAMobAQDOGwAA0RsBANQbAADXGwAA2xsAAOAbAADjGwAA6RsAAOsbAQDxGwgAABwHAA0cAAAPHAAAExwAABkcAAAbHAMAIxwBACYcAQApHAAALBwHADYcAQA5HAAAPBwDAE4cAABRHAEAXBwHAGgcAgBwHAAAdhwCAHocAACFHAAAhxwDAIwcBACTHAQAnRwDAKIcAACmHAIArhwAALocAAC/HAEAwhwBAMUcAwDLHAQA0RwEANwcAADeHAAA4hwAAOUcAgDrHAAA7xwAAPEcAADzHAEABx0AAAwdAAAWHQIAGh0EACEdAAAjHQAAJh0AACsdAAAvHQAAMR0CADUdAQA6HQAAPB0BAD8dAQBCHQEASR0DAFAdAABcHQAAXh0AAGUdBABvHQEAdB0AAHYdAQB7HQAAfR0AAIMdCQCOHQAAkB0AAJMdAACaHQAAnB0AAKMdAACqHQoAtx0CALwdAgDGHQAA1R0AANcdAADaHQIA3h0DAOQdAQDoHQAA7B0AAPAdVABHHgcAUB4AAFYeCwBlHgEAaB6GAPEeAAD1HnUAbR8AAG8fAwB6HwAAfR8AAH8fAACCH3QA+B8BAAUgAAALIAQAESABABUgAAAXIAAAGSAAABwgAAAjIAAAJSAAACcgdQClIAMAsSAAALQgAAC3IAAAuSABAL4gAADGIAAAzyAAANYgAADkIAAA8CABAAEhAAADIQAABSEAAAghAAARIQIAFSEFACghAAA0IQAANiEAADohAABAIQAATyEBAFUhAQBaIRQAcyEBAHYhRgC/IQAAwSEAAMMhAQDGIQEAySEEAM8hJgD4IQUA/yEJAAoiAgAQIgAAEiIDABciAQAaIgUAJCISADgiAQA7IgIAQCIAAEMiAwBIIggAViIBAFkiAABcIgEAXyIAAGMiBQBqIgAAbyIAAHQiAACDIgIAkiIHAKUiCACyIgAAtCILAMEiAgDFIhEA2CIBANsiDwDsIhcABiMAAAgjAgANIwwAGyMHACQjBAArIwIALyMFADcjAAA5IwwASiMBAE4jAQBUIwEAVyMBAFojAwBfIwAAYSMAAGQjAQBoIwAAaiMBAG0jAABvIwIAcyMMAIEjAACDIwEAhiMAAIgjAQCLIwAAjSMBAJAjAACSIwEAlSMAAJkjAACdIwEAoSMAAKQjAACmIwAAqCMDAK0jAACwIwcAuSMBALwjBADCIwEAxiMAAMgjAgDNIwAA0iMDANcjAQDaIwAA3CMBAN8jAADhIwEA5CMAAOYjAQDpIwAA6yMBAO4jAADwIwAA8yMRAAYkBgAPJAAAEiQQACQkCAAuJAEAMSQIADskAAA9JAEAQyQAAEUkBABOJAEAVyQCAF0kAABfJAAAaSQAAHgkAwCAJAoAjCQAAI4kCACZJAMAnyQRALIkAAC0JA8AxSQCAMwkAADfJAMA5iQGAPokBAABJQAACiUAAAwlAQATJQcAISUKADUlBAA7JQAAPSUCAEElBABJJQMATiUBAFIlAABYJQQAYSUCAGUlBgBvJQIAdiUCAHolAQCAJQ4AkiUBAJUlAQCZJQAAmyUAAJ4lAgCrJQMAsSUDALYlAAC5JQAAuyUuAO0lAADzJQEA9iUBAPolAAAAJgEAAyYCAAkmAwAUJgIAGyYAAB4mAQAiJgEAJyYAACwmAwAzJgYAOyYqAGgmAQBsJgEAbyYAAHEmAAB0JgEAeSYCAH4mAACAJgAAgyYBAIgmAQCMJgAAkCYAAJMmAwCbJgAApiYAAKgmAQCrJg4AwCYBAMQmAgDIJgAAyiYWAOMmAQDnJg4A9yYBAPomBQABJwoADScAAA8nAAARJwQA"}],\
["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCHCQQQQQQIFGTPPTTFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCFIKKNNNNNMNNNNCNNNNNNNMNNNNNNNNNNNNNNNNNNNCNNNNNMNNNNNNNNNMMNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPPPNMMMMMMNMCNNMMNNNNNNMMNMCMMCNNCMMCMMMMNNNNNMMNNNNNNMMMMNMNMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHKFFNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGFJJGPPPFPFPPPPIFPPPFPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFPRIIIIIKKKKRGPKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHMNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNHHNNNNNNNNNNHNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNFFFKGPFPPPGNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNGPPPPGFHHHPPPPPPFPPPPPPGIGPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHQQQQHHNNNNNNNNNOOOOJJJEEEEEEEEGPPNNNNNNNNHNHHHHHNNHHHHHNNNNNPIFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNONNONNNNOOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFFKSHHHNNNNNNNNNNNNNNNNOONNNNHNNNNNNNNNNNNNNNNNGFEKIFFEEPFFFKGKFEEEEPPPEPIPPPKKKPFPPIIGKEEPIIIPPEPEEEKEEPPEPKKPEPGPPPIFEKPPPKGEEIEKGPPGFFFPPEEPKPFPEPEKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOEONNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNMNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOONNOONMMNNNNNNNNNNNNCNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNOONNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHKFINNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPEPPKGGPPFFIKNNNNNNNNNNNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNMNNNNNNNMMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNMNNNMNNMNNNNNNMNNNNNMNNNNNNNNNNNNNNNNNMMMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNKKKRMMNNCMMNNMMNNMMNNMMNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNKKKKKFFFNHHHHHHHNHHENNNNNNNNHHNNHHNNNNNNNNNNNNNHHHNNNNCNNNNNNNMNNNNNHHHNNNNNNNNNMNNHNNNNENHHHNNNNNHNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_data_type_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkIdIter","ChunkedArray","ChunkedArrayLayout","FAST_EXPLODE_LIST","Multi","MultiNoNull","SORTED_ASC","SORTED_DSC","Settings","Single","SingleNoNull","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add_to","agg_list","all","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_slice","apply_values","apply_values_generic","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitand","bitand_assign","bitor","bitor","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","cast","cast","cast_and_apply_in_place","cast_unchecked","checked_div","checked_div_num","chunk_id","chunks","chunks_mut","clear","clone","clone","clone_into","clone_into","collect","comparison","complement","cont_slice","contains","data_views","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","difference","div","div","div","div","divide","drop","drop","drop","drop","dtype","empty","eq","equal","equal","equal_missing","equal_missing","extend","extend","fill_null_with_values","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iterator_par","from_name","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_flags","get_inner","get_object","get_object_unchecked","get_sorted_flag","get_unchecked","group_tuples","group_tuples_perfect","gt","gt","gt_eq","gt_eq","has_validity","head","init","init","init","init_rand","inner_dtype","insert","intersection","intersects","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_no_null_iter","into_series","is_all","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter","iter_names","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt_eq","lt_eq","max","max","max_as_series","mean","mean","median","median_as_series","min","min","min_as_series","min_max","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","none_to_nan","not","not_equal","not_equal","not_equal_missing","not_equal_missing","null_count","object","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_as_series","prune_empty_chunks","quantile","quantile_as_series","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","rem","rem","rem","rem","remainder","remove","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set","set_fast_explode","set_inner_dtype","set_null_count","set_sorted_flag","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","sort","sort_with","std","std_as_series","sub","sub","sub","sub","sub","sub_assign","subtract","sum","sum","sum_as_series","symmetric_difference","tail","take","take","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","to_ndarray","to_owned","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","toggle","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","type_id","union","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_as_series","vzip","vzip","vzip","with_chunk","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_null","append_null","append_null","append_null","append_null","append_option","append_option","append_value","append_value","append_value","append_value","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","finish","finish","finish","finish","finish","finish","finish","finish","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","init","init","init","init","into","into","into","into","list","new","new","new","new","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","from","from","from","from","from","from","from","get_list_builder","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new_with_values_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_iter","into_iter","new","next","next","next_back","next_back","par","size_hint","size_hint","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","list","string","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","clone","clone_into","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Some","Zero","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","clone","clone_into","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_array","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","slice_sorted_non_null_and_offset","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","descending","descending","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","hash","hash","init","init","into","into","maintain_order","maintain_order","multithreaded","multithreaded","new","new","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_order_descending","with_order_descending","with_order_descendings","with_order_reversed","with_order_reversed","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_to_buffer","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_binary","as_borrowed","as_ref","as_ref","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","bitand","bitor","bitor","bitxor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","call_categorical_merge_operation","cast","cast","cast","cast","cast","cast","cast","cast","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode_and_offsets","explode_and_offsets","field","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_amortized","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_owned","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_inner","get_object","get_object_unchecked","get_str","get_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash_impl","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_enum","is_float","is_float","is_integer","is_integer","is_known","is_list","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","last","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","max","max_as_series","max_as_series","max_as_series","mean","median","median","median_as_series","median_as_series","merge_dtypes","min","min_as_series","min_as_series","min_as_series","mmap_slice","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","n_unique","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","offsets","offsets","par_iter","par_iter","par_iter_indexed","par_iter_indexed","partial_cmp","partial_cmp","precision","precision","quantile","quantile","quantile_as_series","quantile_as_series","rand_bernoulli","remainder","remainder","remainder","remainder","remainder","remainder","remainder","reverse","reverse","reverse","reverse","reverse","reverse","revmap","scale","scale","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","set","set","set","set_fast_explode","set_inner_dtype","set_name","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","std_as_series","std_as_series","strict_cast","string_cache","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","sum","sum_as_series","sum_as_series","sum_as_series","take_unchecked","take_unchecked","take_unchecked","take_unchecked","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_decimal","to_logical","to_logical_type","to_ndarray","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string_unchecked","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","try_zip_and_apply_amortized","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unique","unique","unique","value","value_unchecked","value_within_range","values_iter","var_as_series","var_as_series","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_capacity","with_nullable_idx","with_validity_typed","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","append","append","append_null","append_value","arg_sort","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cast","clone","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drain_iter_and_finish","drop","drop","drop","drop","dtype","equal","equal","equal","equal_missing","equal_missing","equal_missing","finish","finish","finish","from","from","from","from","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","gt","gt","gt_eq","gt_eq","gt_eq","init","init","init","init","into","into","into","into","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","lt","lt","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","max_as_series","merge_map","min_as_series","n_unique","name","new","new","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unique","uses_lexical_ordering","value_counts","vzip","vzip","vzip","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","build_local","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","find","fmt","fmt","from","from","get","get_categories","get_optional","init","init","into","into","is_global","is_local","len","same_src","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow_mut","borrow_mut","constants","deref","deref","deref","deref_mut","deref_mut","drop","drop","feature_gated","fmt","fmt","fmt","from","from","from","get_warning_function","init","init","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","ahash","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","ArrowChunk","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","add","add","add","agg_chunks","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks_physical","max_horizontal","mean_horizontal","melt","melt2","min_horizontal","mul","mul","mul","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","rem","rem","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice_par","sort","sort_in_place","split_chunks","split_chunks_by_n","sub","sub","sub","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","MeltArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","id_vars","init","into","streamable","to_owned","try_from","try_into","type_id","value_name","value_vars","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Float32","Float32","Float64","Float64","Int32","Int32","Int64","Int64","Null","Null","Row","String","String","UInt32","UInt32","UInt64","UInt64","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","IdxHash","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","finish","fmt","from","from","hash","hash","idx","init","init","into","into","populate_multiple_key_hashmap","try_from","try_from","try_into","try_into","type_id","type_id","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vzip","vzip","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","DynArgs","Earliest","Err","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","MeltArgs","Midpoint","NamedFrom","NamedFromOwned","Nearest","NewChunkedArray","NoData","NonExistent","None","Null","Null","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","Ok","OutOfBounds","Physical","PolarsArray","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","QuantileAggSeries","QuantileInterpolOptions","Raise","Raise","RevMapping","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","Some","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","VarAggSeries","VecHash","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","allocator","as_fd","as_ptr","as_raw_fd","as_ref","assume_init","assume_init","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","context","context_trace","convert_inner_type","data_type","data_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default_arrays","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","df","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","fields","filter","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_params","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_str","from_vec","ge","get_mut","get_mut_unchecked","get_names","get_unchecked","gt","has_validity","hash","hash","hash","hash","hash","idx","increment_strong_count","increment_strong_count_in","index_of","indexes_to_usizes","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_mut","interpol","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_raw","into_series","is_empty","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","le","len","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_as_series","max_as_series","median_as_series","metadata","metadata","min_as_series","min_as_series","min_periods","name","ne","negative_to_usize","new","new","new","new_cyclic","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","null","null","partial_cmp","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_as_series","prod_as_series","provide","ptr_eq","quantile_as_series","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_as_series","store","string_cache","strong_count","sum_as_series","sum_as_series","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_or_clone","utf8","var_as_series","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","weights","window_size","with_metadata","with_metadata","write","write_vectored","error","error","msg","msg","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","set_global_random_seed","IndexOfSchema","Schema","SchemaRef","__clone_box","borrow","borrow_mut","clone","clone_into","contains","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","get","get_at_index","get_at_index_mut","get_field","get_full","get_names","get_names","hash","index_of","index_of","init","insert_at_index","into","into_iter","is_empty","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","len","merge","new","new_inserting_at_index","remove","rename","set_dtype","set_dtype_at_index","shift_remove","shift_remove_index","to_arrow","to_owned","to_supertype","try_from","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","type_id","vzip","with_capacity","with_column","Ascending","Ascending","ChunkCompare","Descending","Descending","IntoSeries","IsSorted","IsSorted","Not","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","__clone_box","__clone_box","_sum_as_series","_sum_as_series","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","append","arg_sort","arg_sort","arg_unique","arg_unique","arithmetic","array_ref","as_any","as_any_mut","as_any_mut","as_list","as_mut","as_ref","as_ref","as_single_ptr","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitand","bitor","bitor","bitxor","bitxor","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","categorical","checked_div","checked_div","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","compute_len","decimal","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","dot","drop","drop","drop","drop_nulls","drop_nulls","dtype","dtype","eq","eq","equal","equal","equal","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","field","fill_null","filter","filter_threaded","fmt","fmt","fmt","fmt_list","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_object","get_object","get_object_chunked_unchecked","get_object_chunked_unchecked","get_unchecked","get_unchecked","gt","gt","gt","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_series","is_sorted_flag","iter","len","limit","limit","list","lt","lt","lt","lt_eq","lt_eq","lt_eq","max","max_as_series","max_as_series","mean","mean","mean_as_series","median","median","median_as_series","median_as_series","min","min_as_series","min_as_series","mul","mul","mul","mul","n_chunks","n_chunks","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_as_series","quantile_as_series","rechunk","rem","rem","rem","rename","rename","reshape","reverse","reverse","rolling_map","rolling_map","sample_frac","sample_n","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","sort","sort_with","sort_with","std","std","std_as_series","std_as_series","str","str_value","strict_cast","sub","sub","sub","sub","sum","sum_as_series","tail","take","take_slice","take_slice_unchecked","take_slice_unchecked_threaded","take_threaded","take_unchecked","take_unchecked_from_slice","take_unchecked_threaded","to_arrow","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique","unique_stable","unpack","unstable","var","var","var_as_series","var_as_series","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","add","add_to","add_to","add_to","checked","div","divide","divide","divide","mul","multiply","multiply","multiply","rem","remainder","remainder","remainder","sub","subtract","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div","checked_div_num","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ArrayBox","UnstableSeries","__clone_box","as_mut","as_ref","borrow","borrow_mut","clone","clone_into","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","Arg","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","TrustMyLength","Wrap","__clone_box","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all_equal","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","coalesce_nulls","coalesce_nulls_series","collect_reversed","collect_trusted","concat_df","concat_df_unchecked","contains","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","dtypes_to_schema","dtypes_to_supertype","ensure_sorted_arg","eq","equivalent","equivalent","equivalent","flatten","fold_options","from","from","from","from_fallible_iter","from_iter","from_iter","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_par_iter","from_trusted_len_iter_rev","from_trusted_len_iter_rev","get_supertype","get_time_units","handle_casting_failures","hash","init","init","init","into","into","into","into_inner","into_iter","into_vec","into_vec","into_vec","materialize_dyn_int","new","new","next","next_back","rayon","size_hint","slice_slice","split_ca","split_df_as_ref","to_owned","trust_my_length","try_from","try_from","try_from","try_get_supertype","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[39,"polars_core::chunked_array"],[476,"polars_core::chunked_array::arithmetic"],[504,"polars_core::chunked_array::builder"],[608,"polars_core::chunked_array::builder::list"],[762,"polars_core::chunked_array::collect"],[776,"polars_core::chunked_array::float"],[778,"polars_core::chunked_array::iterator"],[815,"polars_core::chunked_array::iterator::par"],[817,"polars_core::chunked_array::object"],[888,"polars_core::chunked_array::object::builder"],[911,"polars_core::chunked_array::object::registry"],[939,"polars_core::chunked_array::ops"],[1062,"polars_core::chunked_array::ops::arity"],[1097,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1099,"polars_core::chunked_array::ops::gather"],[1102,"polars_core::chunked_array::ops::search_sorted"],[1131,"polars_core::chunked_array::ops::sort"],[1138,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1139,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[1146,"polars_core::chunked_array::ops::sort::options"],[1220,"polars_core::chunked_array::temporal"],[1221,"polars_core::chunked_array::temporal::conversion"],[1224,"polars_core::config"],[1228,"polars_core::datatypes"],[2600,"polars_core::datatypes::categorical"],[2739,"polars_core::datatypes::categorical::revmap"],[2791,"polars_core::datatypes::categorical::string_cache"],[2810,"polars_core::datatypes::revmap"],[2816,"polars_core::datatypes::string_cache"],[2820,"polars_core::error"],[2883,"polars_core::error::PolarsError"],[2887,"polars_core::error::constants"],[2890,"polars_core::export"],[2898,"polars_core::fmt"],[2928,"polars_core::frame"],[3192,"polars_core::frame::explode"],[3221,"polars_core::frame::group_by"],[3456,"polars_core::frame::group_by::GroupByMethod"],[3457,"polars_core::frame::group_by::GroupsProxy"],[3459,"polars_core::frame::group_by::aggregations"],[3472,"polars_core::frame::group_by::expr"],[3475,"polars_core::frame::row"],[3569,"polars_core::functions"],[3571,"polars_core::hashing"],[3619,"polars_core::prelude"],[4175,"polars_core::prelude::PolarsError"],[4179,"polars_core::prelude::default_arrays"],[4185,"polars_core::prelude::list"],[4208,"polars_core::prelude::null"],[4238,"polars_core::prelude::revmap"],[4244,"polars_core::prelude::slice"],[4247,"polars_core::prelude::string_cache"],[4251,"polars_core::prelude::utf8"],[4255,"polars_core::random"],[4256,"polars_core::schema"],[4328,"polars_core::series"],[4709,"polars_core::series::arithmetic"],[4734,"polars_core::series::arithmetic::checked"],[4742,"polars_core::series::ops"],[4768,"polars_core::series::unstable"],[4792,"polars_core::utils"],[4901,"polars_core::utils::flatten"],[4906,"dyn_clone::sealed"],[4907,"num_traits"],[4908,"num_traits::cast"],[4909,"core::option"],[4910,"core::iter::traits::iterator"],[4911,"core::ops::function"],[4912,"core::marker"],[4913,"core::ops::function"],[4914,"alloc::vec"],[4915,"core::iter::traits::double_ended"],[4916,"core::iter::traits::collect"],[4917,"core::fmt"],[4918,"core::fmt"],[4919,"core::result"],[4920,"polars_utils::iter::fallible"],[4921,"polars_arrow::bitmap::immutable"],[4922,"rayon::iter"],[4923,"polars_arrow::trusted_len"],[4924,"core::marker"],[4925,"bitflags::iter"],[4926,"bitflags::iter"],[4927,"core::iter::adapters::map"],[4928,"num_traits::cast"],[4929,"core::convert"],[4930,"rayon::iter"],[4931,"polars_utils::hashing"],[4932,"ndarray::aliases"],[4933,"ndarray::aliases"],[4934,"core::any"],[4935,"core::ops::function"],[4936,"core::clone"],[4937,"alloc::boxed"],[4938,"polars_arrow::array::boolean"],[4939,"core::any"],[4940,"polars_arrow::bitmap::utils::zip_validity"],[4941,"polars_arrow::offset"],[4942,"core::hash"],[4943,"core::error"],[4944,"polars_arrow::array::primitive"],[4945,"polars_row::row"],[4946,"chrono::naive::datetime"],[4947,"alloc::borrow"],[4948,"bytemuck::zeroable"],[4949,"core::convert"],[4950,"polars_arrow::datatypes::physical_type"],[4951,"core::borrow"],[4952,"smartstring::alias"],[4953,"polars_arrow::pushable"],[4954,"core::cmp"],[4955,"polars_arrow::datatypes::physical_type"],[4956,"polars_utils::idx_vec"],[4957,"rayon::iter::plumbing"],[4958,"core::iter::adapters::copied"],[4959,"core::iter::adapters::zip"],[4960,"polars_utils::float"],[4961,"polars_arrow::types::native"],[4962,"polars_arrow::array::binary"],[4963,"hashbrown::map"],[4964,"core::hash"],[4965,"std::os::fd::owned"],[4966,"std::os::fd::owned"],[4967,"core::mem::maybe_uninit"],[4968,"core::cmp"],[4969,"alloc::sync"],[4970,"core::cmp"],[4971,"std::fs"],[4972,"std::io::error"],[4973,"regex::error"],[4974,"simdutf8::basic"],[4975,"alloc::collections"],[4976,"alloc::ffi::c_str"],[4977,"core::ffi::c_str"],[4978,"alloc::borrow"],[4979,"std::path"],[4980,"std::ffi::os_str"],[4981,"polars_arrow::array::list"],[4982,"core::cmp"],[4983,"core::error"],[4984,"std::io"],[4985,"std::io"],[4986,"std::io"],[4987,"polars_arrow::array::utf8"],[4988,"polars_arrow::datatypes::schema"],[4989,"polars_arrow::datatypes"],[4990,"polars_arrow::legacy::trusted_len::rev"],[4991,"smartstring::config"],[4992,"smartstring"]],"if":"`````````````{{}b}``0``````````````{{}d}``````````````````{{cf}b{}}0{{{j{h}}}d}{{{j{c}}{j{c}}}el{}}{{{j{c}}e}gl{nA`}{}}10{{{j{c}}Ab}{{Ad{Ab}}}Af}{{{j{c}}Ah}Abl}{{{j{Aj}}}d}{{}Al}{{{j{Aj}}}{{An{d}}}}{{{j{h}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{j{h}}Bf}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}42{{{j{c}}{j{c}}}b{{Bl{}{{Bh{Bj}}}}}}{{{j{c}}e}{{j{c}}}l{{C`{An}{{Bn{An}}}}Cb}}{{{j{h}}c}{{j{h}}}{{Cf{Cd}{{Bn{Ab}}}}}}{{{j{h}}e}{{j{g}}}{}{{Cf{{An{Cd}}}{{Bn{{An{c}}}}}}Cb}Bl}{{{j{Ch}}c}Ab{{C`{Ab}{{Bn{Ab}}}}}}{{{j{Cj}}c}Ab{{C`{Ab}{{Bn{Ab}}}}}}{{{j{c}}g}{{j{i}}}Bl{}{{Cf{An}{{Bn{{An{e}}}}}}}Bl}{{{j{c}}e}{{j{c}}}l{{C`{}{{Bn{}}}}Cb}}{{{j{c}}C`}{{j{c}}}l}{{{j{c}}C`}{{j{e}}}lBl}{{{j{Cl}}c}{{j{Cl}}}{{Cf{{D`{Cn}}}{{Bn{{D`{Cn}}}}}}}}{{{j{Db}}c}{{j{Db}}}{{Cf{Bf}{{Bn{Bf}}}}}}{{{j{c}}e}bl{{C`{}{{Bn{}}}}Cb}}{{{j{c}}Ddg}{{j{i}}}Bl{}{{Cf{}{{Bn{e}}}}}Bl}{{{j{Db}}c}{{j{Db}}}{{Cf{BfDf}}}}{{{j{h}}C`}{{Ad{Dh}}}}{{{j{c}}g{D`{e}}}bl{}{{C`{Ane}{{Bn{e}}}}}}9{{{j{c}}g}{{j{i}}}Bl{}{{Cf{}{{Bn{e}}}}}Bl}{{{j{c}}Dj}Dll}{{{j{c}}{D`{Ab}}Dn}{{Ad{Dl}}}l}{{{j{c}}}{{Ad{Dl}}}l}`{{{j{Db}}}E`}{{{j{c}}}{{j{c}}}Bl}{{{j{c}}}DdBl}{{{j{h}}{j{c}}{j{e}}g}{{j{h}}}BlBl{{Cf{{An{Cd}}AnAn}{{Bn{{An{Ab}}}}}}}}{{{j{c}}{j{c}}}eEb{}}{{AlAl}Al}{{AlAl}b}210{AlCn}0321{ce{}{}}00000``{{{j{c}}Dd}{{Ad{Ab}}}l}{{{j{c}}e}{{j{g}}}l{{C`{}{{Bn{}}}}Cb}l}1{{{j{c}}Ab}{{Ad{Ab}}}Ed}{{{j{c}}e}{{Ad{Ab}}}EdA`}{{{j{c}}}EfBl}{{{j{c}}}{{Ej{Eh}}}Bl}0=={AlAl}{{ce}b{}{}}0``1{{{j{c}}}{{Ad{D`}}}l}{{AlAl}d}{{{j{c}}}{{`{{El{}{{B`{D`}}}}}}}l}{{}{{j{c}}}Bl}{{}Al}{Enc{}}00000{{AlAl}Al}{{{j{c}}e}gl{nA`}{}}0{{{j{c}}{j{c}}}el{}}0{{{j{c}}Ab}{{Ad{Ab}}}Af}{Enb}{{{j{c}}}bBl}11{{{j{c}}}DdBl}8;{{{j{c}}e}F`lA`}{{{j{c}}{j{c}}}F`l}01{{{j{c}}{j{c}}}bl}{{Alc}b{{Fb{}{{B`{Al}}}}}}{{{j{c}}}{{Ad{{j{c}}}}}l}{{{j{c}}F`}{{Ad{{j{c}}}}}l}{{{j{c}}}{{An{En}}}Bl}`{{{j{c}}Fd}Ffl}{{{j{Aj}}Fd}Ff}{{AlFd}Ff}0000{{{j{c}}e}bBl{{Cf{An}}}}{{{j{h}}c}b{{Cf{{An{Cd}}}}}}{cc{}}{c{{j{e}}}Fh{{Bl{}{{Fj{c}}}}}}11{Cn{{An{Al}}}}{CnAl}00{{Bfc}{{j{e}}}Fb{{Bl{}{{Fj{}}}}Bl}}{{{j{c}}e}{{j{c}}}{{Bl{}{{Fj{}}}}Bl}Fb}{{Bf{Ej{Eh}}}{{j{c}}}Bl}{{Bf{Ej{Eh}}Dd}{{j{c}}}Bl}{g{{Fl{ic}}}{}{}{{Fn{c}{{B`{e}}}}}{}}0{c{{j{e}}}{{Fb{}{{B`{{Gb{Ej{An{G`}}}}}}}}}l}{c{{j{Aj}}}{{Fb{}{{B`{{An{d}}}}}}}}{c{{j{e}}}{{Fb{}{{B`{An}}}}}l}{cAl{{Fb{}{{B`{Al}}}}}}{{Bfc}{{j{e}}}{{Bd{}{{B`{An}}}}}l}32{{Bfc}{{j{e}}}{{Bd{}{{B`{}}}}}l}`{Bf{{An{Al}}}}{c{{j{e}}}{{Gd{}{{B`{An}}}}}l}{{BfD`}{{j{c}}}l}{{Bf{D`{An}}}{{j{c}}}l}{c{{j{e}}}{{Gf{}{{B`{An}}}}}l}{{BfEj}{{j{c}}}l}{{BfEj{An{G`}}}{{j{c}}}l}{{BfEn}{{j{c}}}l}0{{{j{c}}En}{{j{c}}}Bl}{{BfEnDd}Dh}{{{j{c}}En}AnBl}{{{j{c}}En}{{Ad{Gh}}}l}{{{j{c}}En}Ghl}{{{j{h}}En}{{An{Ab}}}}{{{j{c}}}AlBl}{{{j{h}}}Ab}{{{j{{Gj{c}}}}En}{{An{Gl}}}Gn}0{AlH`}7{{{j{c}}dd}{{Ad{Ah}}}l}{{{j{c}}EndEn}AhEb}{{{j{c}}e}F`lA`}{{{j{c}}{j{c}}}F`l}10{{{j{c}}}dBl}{{{j{c}}{An{En}}}{{j{c}}}Bl}{{}En}00{{EnHb{An{Hd}}}{{j{c}}}l}{{{j{h}}}Dd}{{AlAl}b}{{AlAl}Al}{{AlAl}d}{ce{}{}}00{{{j{Hf}}{An{En}}En}{{Ad{Hh}}}}{{{j{Hf}}{An{En}}En}Hh}{{{j{c}}}el{}}{Alc{}}{{{j{c}}}{{`{HjHl{Hn{}{{B`{}}}}ElGf}}}l}{{{j{c}}}AbBl}{Ald}?0{{{j{c}}}F`I`}000{{{j{c}}}F`Bl}0{{{j{c}}}dBl}{{{j{c}}}H`Bl}{{{j{c}}}{{`{{Ib{}{{B`{An}}}}}}}Bl}{Al{{Id{Al}}}}{Al{{If{Al}}}}{{{j{c}}}{{Il{{Ih{Eh}}{Ij{Eh}{{Bn{{An{G`}}}}}}}}}Bl}`{{{j{c}}}AnBl}{{{j{c}}}{{An{En}}}Bl}{{{j{c}}}{{In{c}}}Bl}{{{j{c}}{j{c}}}el{}}0{{{j{c}}e}gl{}{}}0{{c{j{e}}}g{}l{}}0{{{j{c}}}EnBl}{{{j{c}}e}{{j{c}}}l{nJ`}}00{{{j{c}}En}{{j{c}}}Bl}{{{j{c}}{j{c}}}F`l}{{{j{c}}e}F`lA`}01{{{j{Aj}}}{{An{d}}}}{{{j{c}}}Anl}{{{j{c}}}Abl}{{{j{c}}}{{An{Jb}}}l}{{{j{Aj}}}{{An{Jb}}}}{{{j{c}}}{{An{Jb}}}Eb}{{{j{c}}}AbEb}654{{{j{c}}}{{An{Gb}}}l}{{BfD`}{{j{c}}}l}{{Bf{D`{Cn}}EnEn}{{j{Aj}}}}{{{j{c}}e}gl{nA`}{}}0{{{j{c}}{j{c}}}el{}}0{{{j{c}}Ab}{{Ad{Ab}}}Af}{{{j{c}}}{{Ad{En}}}l}{{{j{c}}}BfBl}{{Bf{Jf{Jd}}}{{j{Jh}}}}{{Bfc}{{j{Jj}}}{{Jl{{D`{{An{Hd}}}}}}}}{{Bfc}{{j{Cl}}}{{Jl{{D`{{Ej{Cn}}}}}}}}{{Bf{Jf{Jn}}}{{j{K`}}}}{{Bfc}{{j{Jh}}}{{Jl{{D`{{An{Jd}}}}}}}}{{Bfc}{{j{Kb}}}{{Jl{{D`{Kd}}}}}}{{Bfc}{{j{Cj}}}{{Jl{{D`{Hb}}}}}}{{Bfc}{{j{Aj}}}{{Jl{{D`{d}}}}}}{{Bf{Jf{Hd}}}{{j{Jj}}}}{{Bfc}{{j{Cl}}}{{Jl{{D`{{An{{Ej{Cn}}}}}}}}}}{{Bfc}{{j{K`}}}{{Jl{{D`{Jn}}}}}}{{Bfc}{{j{Ch}}}{{Jl{{D`{{An{Jb}}}}}}}}{{Bfc}{{j{Ch}}}{{Jl{{D`{Jb}}}}}}{{Bfc}{{j{Jh}}}{{Jl{{D`{Jd}}}}}}{{Bfc}{{j{Aj}}}{{Jl{{D`{{An{d}}}}}}}}{{Bfc}{{j{Db}}}{{Jl{{D`{Df}}}}}}{{Bf{Jf{Kd}}}{{j{Kb}}}}{{Bfc}{{j{Cj}}}{{Jl{{D`{{An{Hb}}}}}}}}{{Bfc}{{j{K`}}}{{Jl{{D`{{An{Jn}}}}}}}}{{Bfc}{{j{Db}}}{{Jl{{D`{{An{Df}}}}}}}}{{Bfc}{{j{Kb}}}{{Jl{{D`{{An{Kd}}}}}}}}{{Bfc}{{j{Jj}}}{{Jl{{D`{Hd}}}}}}{Bf{{j{{Gj{c}}}}}Gn}{{{j{c}}EnEn}{{j{c}}}l}{{Bf{Ej{c}}}{{j{{Gj{c}}}}}Gn}{{Bf{Ej{c}}G`}{{j{{Gj{c}}}}}Gn}{{BfEj}{{j{c}}}l}{{{j{c}}}{{j{c}}}I`}{AlAl}{{{j{c}}{j{c}}}F`l}{{{j{c}}e}F`lA`}01{{{j{c}}}EnBl}``{{{j{Db}}}{{`{{Kf{}{{B`{{An{Bf}}}}}}}}}}{{{j{h}}}{{`{{Kf{}{{B`{{An{Ab}}}}}}}}}}{{{j{Db}}}{{`{{Kh{}{{B`{{An{Bf}}}}}}}}}}{{{j{h}}}{{`{{Kh{}{{B`{{An{Ab}}}}}}}}}}{{{j{c}}}Abl}{{{j{c}}}bBl}{{{j{c}}JbKj}{{Ad{{An{Jb}}}}}Eb}{{{j{c}}JbKj}{{Ad{Ab}}}Eb}{{BfEnJb}{{Ad{{j{Aj}}}}}}{{BfEnJbJb}{{Ad{{j{c}}}}}l}{{BfEn}{{j{c}}}l}{{BfEnJbJb}{{j{c}}}l}{{{j{c}}}{{j{c}}}Bl}{{{j{c}}}KlBl}{{{j{c}}{j{c}}}el{}}{{{j{c}}e}gl{nA`}{}}10{{{j{c}}Ab}{{Ad{Ab}}}Af}{{AlAl}b}{{{j{c}}Bf}bBl}{{{j{c}}}{{j{c}}}l}{{{j{c}}C`Kn}{{Ad{Ab}}}l}{{{j{c}}Ene}{{Ad{{j{c}}}}}I`{{Cf{{j{c}}}{{Bn{An}}}}}}{{{j{c}}Jbdd{An{Hd}}}{{Ad{{j{c}}}}}Bl}{{{j{c}}Endd{An{Hd}}}{{Ad{{j{c}}}}}Bl}{{{j{c}}eAn}{{Ad{{j{c}}}}}l{{Fb{}{{B`{L`}}}}}}{{{j{c}}eg}{{Ad{{j{c}}}}}l{{Fb{}{{B`{L`}}}}}{{C`{An}{{Bn{An}}}}}}{{{j{c}}F`An}{{Ad{{j{c}}}}}l}{{AlAld}b}{{{j{h}}}b}{{{j{h}}Dd}b}{{{j{c}}L`}bBl}{{{j{c}}H`}bBl}{{AlH`}b}{{{j{c}}Jd}{{j{c}}}l}{{{j{c}}JdAn}{{j{c}}}l}{{{j{c}}}bBl}{{{j{c}}JdEn}{{j{c}}}Bl}{{{j{c}}d}{{j{c}}}l}{{{j{c}}Dj}{{j{c}}}l}{{{j{c}}Cn}{{An{Jb}}}l}{{{j{c}}Cn}AbEb}{{{j{c}}{j{c}}}el{}}{{{j{c}}e}gl{nA`}{}}01{{AlAl}Al}{{AlAl}b}{{{j{c}}Ab}{{Ad{Ab}}}Af}{{{j{c}}}Anl}{{{j{Aj}}}{{An{L`}}}}{{{j{c}}}Abl}5{{{j{c}}{An{En}}}{{j{c}}}Bl}{{{j{c}}Dl}{{Ad{{j{c}}}}}Bl}{{{j{c}}e}{{Ad{{j{c}}}}}Bl{{Jl{{D`{L`}}}}Lb}}{{{j{c}}e}{{j{c}}}{{Bl{}{{Ld{Bj}}}}Bl}{{Jl{{D`{L`}}}}Lb}}{{{j{c}}Dl}{{j{c}}}{{Bl{}{{Ld{Bj}}}}Bl}}`{{{j{c}}dLf}{{Ej{{Ej{Lh}}}}}Bl}{{{j{c}}}{{j{c}}}I`}{{{j{Db}}En}{{Ad{Ab}}}}{{{j{h}}Dd}b}{{{j{c}}}{{Ad{Lj}}}l}{{{j{h}}}{{Ad{Ll}}}}{ce{}{}}0{{{j{Cl}}}Ln}{{{j{c}}}{{Ej{An}}}l}{{{j{c}}}{{M`{Ej{Ej{An}}}}}l}{{AlAl}b}{{{j{c}}{j{c}}}el{}}0{{{j{c}}e}gl{}{}}0{{c{j{e}}}g{}l{}}0{{{j{h}}c}{{Ad{{j{h}}}}}{{Cf{Cd}{{Bn{{Ad{Ab}}}}}}}}{{{j{h}}e}{{Ad{{j{g}}}}}{}{{Cf{{An{Cd}}}{{Bn{{Ad{{An{c}}}}}}}}Cb}Bl}{{{j{c}}i}{{Fl{{j{k}}g}}}Bl{}{}{{Cf{An}{{Bn{{Fl{{An{e}}g}}}}}}Cb}Bl}{{{j{c}}i}{{Fl{{j{k}}g}}}Bl{}{}{{Cf{}{{Bn{{Fl{eg}}}}}}}Bl}{c{{Fl{e}}}{}{}}00{{Bfg}{{Fl{{j{i}}e}}}Fh{}{{Fb{}{{B`{{Fl{ce}}}}}}}{{Bl{}{{Fj{c}}}}Bl}}111{{{j{h}}{j{c}}e}{{Ad{{j{h}}}}}Bl{{Cf{{An{Cd}}An}{{Bn{{Ad{{An{Ab}}}}}}}}}}{cMb{}}00{{AlAl}Al}{{{j{c}}}{{Ad{{j{c}}}}}l}{{{j{c}}Ab}{{Ad{{j{c}}}}}Bl}{{{j{c}}}bBl}{{{j{c}}En}{}Bl}{{{j{c}}Cn}{{An{Jb}}}l}{{{j{c}}Cn}AbEb}{ce{}{}}00{{Bfc}{{j{e}}}Fh{{Bl{}{{Fj{c}}}}Bl}}{{{j{c}}{Ej{Eh}}}{{j{c}}}Bl}{{{j{c}}Bf}{{j{c}}}Bl}{{{D`{Md}}e}c{}{{Mf{Dl}{{Bn{c}}}}}}{{{j{c}}H`}{{j{c}}}Bl}{{{j{c}}}el{}}0{{{j{c}}{j{c}}}el{}}0{{{j{c}}e}gl{}{}}01100{{c{j{e}}}g{}l{}}0221100221133221100221100{{{j{h}}{j{c}}e}{{j{h}}}Bl{{Cf{{An{Cd}}An}{{Bn{{An{Ab}}}}}}}}{{{j{c}}F`{j{c}}}{{Ad{{j{c}}}}}Bl}````{{{Mn{}{{Mh{c}}{Mj{e}}{Ml{g}}}}{Mn{}{{Mh{c}}{Mj{e}}{Ml{g}}}}}e{}{}{}}{{{Mn{}{{Mh{c}}{Mj{e}}{Ml{g}}}}c}e{}{}{}}{{c{Mn{}{{Mh{c}}{Mj{e}}{Ml{g}}}}}e{}{}{}}{{{Mn{}{{Mh{c}}{Mj{e}}{Ml{g}}}}{Mn{}{{Mh{c}}{Mj{e}}{Ml{g}}}}}g{}{}{}}{{{Mn{}{{Mh{c}}{Mj{e}}{Ml{g}}}}c}g{}{}{}}{{c{Mn{}{{Mh{c}}{Mj{e}}{Ml{g}}}}}g{}{}{}}{{{Mn{}{{Mh{c}}{Mj{e}}{Ml{g}}}}}e{}{}{}}65654654650654654````````{{cf}b{}}000{N`b}{{{Nb{c}}}b{NdLb}}{Nfb}{Nhb}{{{Nj{c}}}bl}{{{Nb{c}}{An{e}}}b{NdLb}{{Jl{c}}}}{{N`{An{c}}}b{}}{{N`c}b{}}{{{Nb{c}}e}b{NdLb}{{Jl{c}}}}{{Nfd}b}5{ce{}{}}0000000{{{Nb{c}}}{{Nb{c}}}{NdLb}}{NfNf}{NhNh}{{{Nj{c}}}{{Nj{c}}}{lNl}}{{ce}b{}{}}000{Enc{}}0000000{Enb}000{N`{{j{c}}}Bl}{{{Nb{{D`{Cn}}}}}E`}{{{Nb{Bf}}}Ln}{NnLn}{O`E`}{NfF`}`{{{Nj{c}}}{{j{c}}}l}{cc{}}000{{Bfe}Ob{}{{Bd{}{{B`{{An{c}}}}}}}}{{Bfe}Ob{}{{Bd{}{{B`{c}}}}}}{{Bf{D`{c}}}Ob{}}{{Bf{D`{{An{c}}}}}Ob{}}{{}En}000{ce{}{}}000`{{BfEn}{{Nb{c}}}{NdLb}}{{BfEn}Nf}{{BfEn}Nh}{{BfEn}{{Nj{c}}}l}{N`b}{Nfb}{Nhb}{{{Nj{c}}}bl}8888{c{{Fl{e}}}{}{}}0000000{cMb{}}000::::````````{{OdFh}b}{Odb}{Ofb}{{Ohc}b{{Bd{}{{B`{{An{d}}}}}}Gf}}{{{Oj{c}}e}bl{{Bd{}{{B`{An}}}}Gf}}{{{Oj{c}}e}bl{{Bd{}{{B`{}}}}Gf}}{Olb}54{Onb}{A@`b}{Ohb}{A@bb}{{{Oj{c}}}bl}{{Od{An{Fh}}}b}{{Od{An{Ab}}}{{Ad{b}}}}{{Ol{An{Ab}}}{{Ad{b}}}}{{{Oj{c}}{An{D`}}}bl}{{OlAb}{{Ad{b}}}}{{OdAb}{{Ad{b}}}}{{OfAb}{{Ad{b}}}}{{OnAb}{{Ad{b}}}}{{A@`Ab}{{Ad{b}}}}{{OhAb}{{Ad{b}}}}{{A@bAb}{{Ad{b}}}}{{{Oj{c}}Ab}{{Ad{b}}}l}{{{Oj{c}}D`}bl}{{Onc}b{{Bd{}{{B`{{An{Bf}}}}}}Gf}}{{A@`c}b{{Bd{}{{B`{{An{{D`{Cn}}}}}}}}Gf}}{{Onc}b{{Bd{}{{B`{Bf}}}}}}{{A@`c}b{{Bd{}{{B`{{D`{Cn}}}}}}}}{ce{}{}}0000000000000`{{}Od}{{}Of}{Enc{}}0000000000000{Enb}000000{Ond}{A@`d}{Ohd}{{{Oj{c}}}dl}{Old}{OnKl}{A@`Kl}{OhKl}{{{Oj{c}}}Kll}{OlKl}{OdDh}{OfDh}{A@bDh}{OlDh}{cc{}}000000{{DdEnEnBf}{{Ad{{A@d{Ol}}}}}}{{}En}000000{OnEh}{A@`Eh}{OhEh}{{{Oj{c}}}Ehl}{OlEh}{ce{}{}}000000{{BfEn{An{Dd}}}Od}{{BfEn{An{Dd}}}Of}{{BfEnEn}On}{{BfEnEn}A@`}{{BfEnEn}Oh}{{BfEn}A@b}{{BfEnEnDd}{{Oj{c}}}l}{{BfEnEnDdDd}{{Oj{c}}}l}{c{{Fl{e}}}{}{}}0000000000000{cMb{}}000000:::::::``{{A@fBf}{{j{c}}}Bl}{{A@h{j{c}}}{{j{c}}}Bl}10{{A@hBfDd}{{j{c}}}Bl}0{{A@fBf}{{Fl{{j{c}}e}}}Bl{}}{{A@h{j{c}}}{{Fl{{j{c}}e}}}Bl{}}10{{A@hBfDd}{{Fl{{j{c}}e}}}Bl{}}0`{A@jA@j}```{ce{}{}}000{Enc{}}000{Enb}0{cc{}}0{{}En}04444{A@lA@n}{A@n{{An{c}}}{}}{{{AA`{c}}}{{An{e}}}Bd{}}1{{{AA`{c}}}{{An{e}}}El{}}`{A@n{{Gb{En{An{En}}}}}}{{{AA`{c}}}{{Gb{En{An{En}}}}}Bd}{c{{Fl{e}}}{}{}}000{cMb{}}0<<``````{{cf}b{}}{e{{AAb{c}}}Gn{{Fb{}{{B`{c}}}}}}{e{{AAb{c}}}Gn{{Fb{}{{B`{{An{c}}}}}}}}{{AAde}g{}{{Fb{}{{B`{c}}}}}{}}0{GlAAf}{{{AAb{c}}}AAfGn}0{ce{}{}}0`{{{AAb{c}}}{{AAb{c}}}{GnNl}}{{ce}b{}{}}{{{AAb{c}}}AAdGn}{Enc{}}0{Enb}{{GlGl}d}0{{{AAb{c}}Fd}Ff{GnAAh}}{cc{}}{{EnAAd}{{AAb{c}}}Gn}{{{AAb{c}}En}{{An{c}}}Gn}{{}AAd}{{G`{AAb{c}}{AAb{c}}}{{AAb{c}}}Gn}{{AAdG`cc}{{AAb{e}}}{}Gn}{{G`{AAb{c}}e}{{AAb{c}}}Gn{}}{{G`c{AAb{e}}}{{AAb{e}}}{}Gn}{{}En}{ce{}{}}{{{AAb{c}}}eGn{}}{{{AAb{c}}En}dGn}{{cEn}d{}}1{{{AAb{c}}}{{AAn{c{AAj{c}}AAl}}}Gn}{{{AAb{c}}}{{AAn{egAAl}}}Gn{}{}}{{{AAb{c}}}EnGn}0`{{{AAb{c}}{An{G`}}}bGn}{{{AAb{c}}EnEn}bGn}{{cEnEn}e{}{}}01{Gl{{A@d{Gl}}}}{{{AAb{c}}}{{A@d{Fh}}}Gn};{g{{Fl{{AAb{c}}e}}}Gn{}{{Fb{}{{B`{{Fl{{An{c}}e}}}}}}}}{g{{Fl{{AAb{c}}e}}}Gn{}{{Fb{}{{B`{{Fl{ce}}}}}}}}{{AAdg}{{Fl{ie}}}{}{}{{Fb{}{{B`{{Fl{ce}}}}}}}{}}0{c{{Fl{e}}}{}{}}0{cMb{}}{GlBf}{{}Bf}{{{AAb{c}}}{{An{G`}}}Gn}{{{AAb{c}}En}cGn}{{{AAb{c}}En}eGn{}}1{{{AAb{c}}}{{AB`{{Ej{c}}}}}Gn}{{{AAb{c}}}{{AAj{c}}}Gn}{{{AAb{c}}}eGn{}}{ce{}{}}{{{AAb{c}}{An{G`}}}{{A@d{Fh}}}Gn}{{{AAb{c}}{An{G`}}}{{AAb{c}}}Gn}0`{{{ABb{c}}}bGn}0{{{ABb{c}}{An{c}}}bGn}{{{ABb{c}}AAf}bGn}{{{ABb{c}}c}bGn}{{{ABb{c}}AAf}{{Ad{b}}}Gn}77{{}{{ABb{c}}}Gn}{Enc{}}0{Enb}{{{ABb{c}}}{{ABd{c}}}Gn}{cc{}}{{}En}={{BfEn}{{ABb{c}}}Gn}{{{ABb{c}}}AbGn}{c{{Fl{e}}}{}{}}0{cMb{}}{ce{}{}}````{ABfb}{{ABf{An{AAf}}}b}{{ABfAAf}b}33`<<;{{ABhFd}Ff}:{{BfEn}{{A@d{ABf}}}}{{}ABj}{{}AAd}<7{{}d}`{{ABlABjAAd}b}{ABfAb}<<;:``````````````````````````````````````````{{cf}b{}}{{{AC`{}{{ABn{c}}}}g}{{AC`{}{{ABn{c}}}}}{}{}{{C`{{An{e}}}{{Bn{{An{c}}}}}}Cb}}{{ACbC`}ACb}{{ACbC`}{{j{c}}}Bl}{{{AC`{}{{ABn{c}}}}i{D`{g}}}b{}{}{}{{C`{{An{e}}g}{{Bn{g}}}}}}{{{AC`{}{{ABn{c}}}}g}{{AC`{}{{ABn{c}}}}}{}{}{{C`{e}{{Bn{c}}}}Cb}}{{ACdDj}Dl}{{ACd{D`{Ab}}Dn}{{Ad{Dl}}}}{ACf{{Ad{Dl}}}}`{ce{}{}}0{{AChDd}{{Ad{Ab}}}}0{ACjACj}{{ce}b{}{}}{Enc{}}0{Enb}{{ACjACj}d}{{{ACl{}{{B`{c}}}}e}c{}{}}0{ACn{{Ad{Ab}}}}{ACn{{Ad{{Gb{Ab{AD`{Jd}}}}}}}}`{{ADbc}{{Ad{ADb}}}{}}{{ADdF`}{{Ad{{j{c}}}}}Bl}`{{ACjFd}Ff}{cc{}}`{{BfcEn}ADf{}}{{BfEn}ADh}`{{ADjEn}{{Ad{Gh}}}}{{ADjEn}Gh}::{{ACjc}bADl}{{}En}{ce{}{}}{ADn{{Ad{F`}}}}{AE`{{Ad{F`}}}}??{AEb{{An{c}}}{}}{AEb{{An{Jb}}}}{AEd{{An{c}}}{}}2{AEb{{An{{Gb{cc}}}}}{}}{ACf{{Ad{En}}}}{{AEfEnEn}{{j{c}}}Bl}{{{ACl{}{{B`{c}}}}e}c{}{}}0{ACn{{Ad{{AD`{Jd}}}}}}{{AEdJbKj}{{Ad{{An{c}}}}}{}}{AEhAEh}{{AEjC`Kn}{{Ad{Ab}}}}{{AElc{An{e}}}{{Ad{AEl}}}{{Fb{}{{B`{L`}}}}}{}}{{AElci}{{Ad{AEl}}}{{Fb{}{{B`{L`}}}}}{}{}{{C`{{An{e}}}{{Bn{{An{g}}}}}}}}`{{AElF`{An{c}}}{{Ad{AEl}}}{}}{{AEnJd}{{j{c}}}Bl}{{AF`Jdc}{{j{e}}}{}Bl}`{{ACdd}{{j{c}}}Bl}{{ACdDj}{{j{c}}}Bl}{{AFbCn}{{An{Jb}}}}{AEb{{An{c}}}{}}{{AFdc}{{Ad{AFd}}}Lb}{{AFfc}AFfLb}{AFh{{Ej{{D`{Cn}}}}}}{ce{}{}}{c{{Fl{e}}}{}{}}0{cMb{}}{ACf{{Ad{ACf}}}}83`{{AFjF`{j{c}}}{{Ad{{j{c}}}}}Bl}``````{{{j{c}}{j{e}}gik}{{j{m}}}BlBl{{C`{}{{Bn{}}}}}{{C`{}{{Bn{}}}}}{{C`{}{{Bn{}}}}}Bl}0{{{j{c}}{j{e}}i}{{j{k}}}BlBlFh{{Cf{}{{Bn{g}}}}}{{Bl{}{{Fj{g}}}}}}{{{j{c}}{j{e}}g}{{j{i}}}BlBl{{AFl{AnAn}}}Bl}{{{j{c}}{j{e}}g}bBlBl{{Cf{AnAn}}}}{{{j{c}}{j{e}}i}{{j{k}}}BlBl{}{{Cf{}{{Bn{g}}}}}Bl}{{{j{c}}{j{e}}iBf}{{j{k}}}BlBl{FhAFn}{{Cf{}{{Bn{g}}}}}{{Bl{}{{Fj{g}}}}}}{{{j{c}}{j{e}}iBf}{{j{k}}}BlBlFh{{Cf{}{{Bn{g}}}}}{{Bl{}{{Fj{g}}}}}}5{{{j{c}}{j{e}}g}{{Ad{Ab}}}BlBl{{Cf{}{{Bn{{A@d{Fh}}}}}}}}{{{j{c}}{j{e}}gdd}{{j{c}}}BlBl{{Cf{}{{Bn{{A@d{Fh}}}}}}}}64{{{j{c}}{j{e}}k}{{Fl{{j{m}}i}}}BlBl{}{}{{Cf{AnAn}{{Bn{{Fl{{An{g}}i}}}}}}}Bl}{{{j{c}}{j{e}}{j{g}}i}{{j{k}}}BlBlBl{{AG`{AnAnAn}}}Bl}{{{j{c}}{j{e}}k}{{Fl{{j{m}}i}}}BlBlFhAGb{{Cf{}{{Bn{{Fl{gi}}}}}}}{{Bl{}{{Fj{g}}}}}}2{{{j{c}}{j{e}}kBf}{{Fl{{j{m}}i}}}BlBlFhAGb{{Cf{}{{Bn{{Fl{gi}}}}}}}{{Bl{}{{Fj{g}}}}}}{{{j{c}}{j{e}}idd}{{Fl{{j{c}}g}}}BlBlAGb{{Cf{}{{Bn{{Fl{{A@d{Fh}}g}}}}}}}}{{{j{c}}{j{e}}{j{g}}m}{{Fl{{j{o}}k}}}BlBlBl{}{}{{Cf{AnAnAn}{{Bn{{Fl{{An{i}}k}}}}}}}Bl}{{{j{c}}i}{{Fl{{j{k}}g}}}Bl{}{}{{Cf{An}{{Bn{{Fl{{An{e}}g}}}}}}}Bl}{{{j{c}}i}{{Fl{{j{k}}g}}}Bl{}{}{{Cf{}{{Bn{{Fl{eg}}}}}}}Bl}{{{j{c}}i}{{Fl{{j{k}}g}}}Bl{FhAFn}AGb{{Cf{}{{Bn{{Fl{eg}}}}}}}{{Bl{}{{Fj{e}}}}}}{{{j{c}}e}{{j{g}}}Bl{{AGd{An}}}Bl}{{{j{c}}e}{{j{g}}}BlAGdBl}{{{j{c}}g}{{j{i}}}BlFh{{Cf{}{{Bn{e}}}}}{{Bl{}{{Fj{e}}}}}}0{{{j{c}}g}{{j{i}}}Bl{FhAFn}{{Cf{}{{Bn{e}}}}}{{Bl{}{{Fj{e}}}}}}0{{{j{c}}}Enl}0{{H`H`}H`}{{DlL`}{{Ad{b}}}}{{{AGf{L`}}L`}{{Ad{b}}}}````{{cf}b{}}{{AGhcd}L`AFn}{ce{}{}}0{AGhAGh}{{ce}b{}{}}{{}AGh}{Enc{}}0{Enb}{{AGhAGh}d}{{ce}d{}{}}00{{AGhFd}Ff}{cc{}}{{AGhc}bADl}{{}En};{{{j{c}}}{{Gb{En{j{c}}}}}Bl}<{c{{Fl{e}}}{}{}}0{cMb{}}>`{{En{Ej{d}}}b}```{{AGjEnEn}AGj}0{{En{D`{Ab}}Dn}{{Ad{{AGl{Dl}}}}}}{{{D`{Ab}}{D`{d}}d}{{Ad{AGn}}}}{{Bf{D`{Ab}}{D`{d}}d}{{Ad{AH`}}}}{{Bf{D`{Ab}}}{{Ad{AH`}}}}{Ab{{Ad{Eh}}}}{{{D`{Ab}}}{{Ad{AGn}}}}{{{D`{Ab}}}{{Ad{AH`}}}}0```{{cf}b{}}0{ce{}{}}000{DjDj}{DnDn}{{ce}b{}{}}0{{}Dj}{{}Dn}{Enc{}}000``{Enb}0{{DjDj}d}{{DnDn}d}{{ce}d{}{}}00000{{DjFd}Ff}{{DnFd}Ff}{DnDj}{cc{}}0{DjDn}{{Djc}bADl}{{Dnc}bADl}{{}En}0{ce{}{}}0````?>``{{AGjEnEn}AGj}011{c{{Fl{e}}}{}{}}000{cMb{}}033{{Djd}Dj}{{Dnd}Dn}101010{{Dnc}Dn{{Fb{}{{B`{d}}}}}}{DjDj}{DnDn}`{AHbJd}00{{}d};;0```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{cf}b{}}0000000000000000000000000000{Dhd}{{HhHh}c{}}{{F`F`}c{}}0{{LnLn}c{}}0{{LnBf}c{}}{{E`{D`{Cn}}}c{}}{{E`E`}c{}}0{{GhGh}Gh}{{{j{c}}Ab}{{Fl{AbAHd}}}{}}000000{{LnAb}{{Ad{Ab}}}}{{E`Ab}{{Ad{Ab}}}}{{F`Ab}{{Ad{Ab}}}}{{DhAh}Ab}{{F`Ah}Ab}{{LnAh}Ab}{{E`Ah}Ab}{{{ABd{c}}Ah}AbGn}{F`d}{F`{{An{d}}}}{Dh{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{DhBf}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{Dhc}Dh{{C`{{An{Ab}}}{{Bn{{An{Ab}}}}}}Cb}}{{F`c}F`{{C`{{An{d}}}{{Bn{{An{d}}}}}}Cb}}{{Lnc}Ln{{C`{{An{Bf}}}{{Bn{{An{{AHf{Bf}}}}}}}}Cb}}{{E`c}E`{{C`{{An{{D`{Cn}}}}}{{Bn{{An{{AHf{{D`{Cn}}}}}}}}}}Cb}}{{{ABd{c}}e}{{ABd{c}}}Gn{{C`{{An{c}}}{{Bn{{An{c}}}}}}Cb}}{{Dhc}Dh{{Cf{Cd}{{Bn{Ab}}}}}}{{Dhe}{{j{g}}}{}{{Cf{{An{Cd}}}{{Bn{{An{c}}}}}}Cb}Bl}{{AHhc}Ab{{C`{Ab}{{Bn{Ab}}}}}}{{AHjc}Ab{{C`{Ab}{{Bn{Ab}}}}}}{{F`C`}F`}{{LnC`}Ln}{{E`C`}E`}{{F`C`}{{j{c}}}Bl}{{LnC`}{{j{c}}}Bl}{{E`C`}{{j{c}}}Bl}{{Lnc}Ln{{Cf{Bf}{{Bn{Bf}}}}}}{{E`c}E`{{Cf{{D`{Cn}}}{{Bn{{D`{Cn}}}}}}}}{{Lnc}Ln{{Cf{BfDf}}}}{{DhC`}{{Ad{Dh}}}}{{Dhe{D`{c}}}b{}{{C`{{An{Ab}}c}{{Bn{c}}}}}}{{F`e{D`{c}}}b{}{{C`{{An{d}}c}{{Bn{c}}}}}}{{Lne{D`{c}}}b{}{{C`{{An{Bf}}c}{{Bn{c}}}}}}{{E`e{D`{c}}}b{}{{C`{{An{{D`{Cn}}}}c}{{Bn{c}}}}}}{{{ABd{c}}g{D`{e}}}bGn{}{{C`{{An{c}}e}{{Bn{e}}}}}}{{Dhc}Dh{{C`{Ab}{{Bn{Ab}}}}Cb}}{{F`c}F`{{C`{d}{{Bn{d}}}}Cb}}{{Lnc}Ln{{C`{Bf}{{Bn{{AHf{Bf}}}}}}Cb}}{{E`c}E`{{C`{{D`{Cn}}}{{Bn{{AHf{{D`{Cn}}}}}}}}Cb}}{{{ABd{c}}e}{{ABd{c}}}Gn{{C`{c}{{Bn{c}}}}Cb}}{{F`Dj}Dl}{{LnDj}Dl}{{E`Dj}Dl}{{AH`Dj}Dl}{{F`{D`{Ab}}Dn}{{Ad{Dl}}}}{{Ln{D`{Ab}}Dn}{{Ad{Dl}}}}{{E`{D`{Ab}}Dn}{{Ad{Dl}}}}{{AH`{D`{Ab}}Dn}{{Ad{Dl}}}}{F`{{Ad{Dl}}}}{Ln{{Ad{Dl}}}}{E`{{Ad{Dl}}}}{{{ABd{c}}}{{Ad{Dl}}}Gn}{eAHl{}{{Fb{}{{B`{c}}}}}}0{{AAde}AHn{}{{Fb{}{{B`{c}}}}}}0{LnE`}{GhGh}{DdDd}{KlDd}{AI`Dd}{{{AFn{}{{AIb{c}}{AId{e}}{AIf{g}}}}}{{An{{D`{c}}}}}Nl{AIh{AIj{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{Dh{j{c}}{j{e}}g}DhBlBl{{Cf{{An{Cd}}AnAn}{{Bn{{An{Ab}}}}}}}}{{F`F`}c{}}00000{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000{Dd{{A@d{Dd}}}}{{AIlAIlc}{{Ad{AIl}}}AIn}{{AJ`Dd}{{Ad{Ab}}}}{{HhDd}{{Ad{Ab}}}}{{DhDd}{{Ad{Ab}}}}{{F`Dd}{{Ad{Ab}}}}{{LnDd}{{Ad{Ab}}}}{{E`Dd}{{Ad{Ab}}}}{{AH`Dd}{{Ad{Ab}}}}{{GhDd}Gh}54321`{{{j{c}}Ab}{{Fl{AbAHd}}}{}}0000{{AHhAb}{{Ad{Ab}}}}{{AHjAb}{{Ad{Ab}}}}{{{AJb{ce}}}{{AJb{ce}}}BlBl}{AJdAJd}{GhGh}{AJfAJf}{DdDd}{KlKl}{AJhAJh}{AJjAJj}{AJlAJl}{KbKb}{JjJj}{AJnAJn}{AK`AK`}{K`K`}{JhJh}{CjCj}{ChCh}{AKbAKb}{AKdAKd}{DbDb}{ClCl}{AKfAKf}{AjAj}{AKhAKh}{AKjAKj}{AKlAKl}{AKnAKn}{AAdAAd}{AL`AL`}{{ce}b{}{}}0000000000000000000000000000{{KlDd}b}{ALbe{}{{AHl{c}}AFn}}0{{ALbAAd}e{}{{AHn{c}}AFn}}0{Ddd}00{ALdDd}{KlDd}{{}Gh}{{}AJf}{{}Dd}{{}AAd}{{{AJb{ce}}}gBlBl{}}{Enc{}}00000000000000000000000000000000010000000000000000000000000000000000{{HhHh}c{}}{{{j{c}}Ab}{{Fl{AbAHd}}}{}}000000{Enb}000000000000000000000000000000000{AJ`Dd}{HhDd}{GhDd}`{{GhGh}d}{{AJfAJf}d}{{DdDd}d}{{DdAAd}d}{{KlKl}d}{{AJhAJh}d}{{AAdAAd}d}{{AL`AL`}d}{{GhGhd}d}{{DhDh}F`}{{F`F`}F`}{{LnBf}F`}{{LnLn}F`}{{E`E`}F`}{{E`{D`{Cn}}}F`}543201{{ce}d{}{}}00000000000000000000{Dh{{Ad{{Gb{Ab{AD`{Jd}}}}}}}}{Ln{{Ad{{Gb{Ab{AD`{Jd}}}}}}}}{{{AJb{ce}}}KlBlBl}{{F`d}{{Ad{F`}}}}{{E`{D`{Cn}}}{{Ad{E`}}}}{{DhF`}{{Ad{Dh}}}}{{F`F`}{{Ad{{j{Aj}}}}}}{{LnF`}{{Ad{{j{Db}}}}}}{{E`F`}{{Ad{{j{Cl}}}}}}{{AH`F`}{{Ad{AH`}}}}{{{ABd{c}}F`}{{Ad{{j{{Gj{c}}}}}}}Gn}{{AInALfALf}{{Ad{ALf}}}}{{DhFd}Ff}{{LnFd}Ff}{{E`Fd}Ff}{{{ABd{c}}Fd}FfGn}{{AJdFd}Ff}{{GhFd}Ff}0{{AJfFd}Ff}{{DdFd}Ff}0{{KlFd}Ff}{{AJhFd}Ff}0{{AAdFd}{{Fl{bALh}}}}{{AL`Fd}{{Fl{bALh}}}}{{Dhc}b{{Cf{{An{Cd}}}}}}{cc{}}000000{{{An{c}}}Gh{{ALj{Gh}}}}1{cGhALl}2{GhDd}{AAdDd}144{ALnKl}{GhKl}{AL`AJh}7777777777777777777777{AM`AAd}{AMbAAd}9{{AAdd}Dd}{eDh{{AMd{Ab}}}{{Fb{}{{B`{c}}}}}}{cDh{{Fb{}{{B`{{An{Ab}}}}}}}}{cDh{{Fb{}{{B`{{An{{A@d{Fh}}}}}}}}}}{cF`{{Fb{}{{B`{d}}}}}}{eLn{{`{Bf}}}{{Fb{}{{B`{c}}}}}}{eLn{{Jl{Bf}}}{{Fb{}{{B`{{An{c}}}}}}}}{eE`{{Jl{{D`{Cn}}}}}{{Fb{}{{B`{{An{c}}}}}}}}{eE`{{`{{D`{Cn}}}}}{{Fb{}{{B`{c}}}}}}{e{{ABd{c}}}Gn{{Fb{}{{B`{{An{c}}}}}}}}{{Bfc}{{j{Aj}}}{{Bd{}{{B`{{An{d}}}}}}}}{{Bfe}Ln{{Jl{Bf}}}{{Bd{}{{B`{{An{c}}}}}}}}{{Bfe}E`{{Jl{{D`{Cn}}}}}{{Bd{}{{B`{{An{c}}}}}}}}{{Bfe}{{ABd{c}}}Gn{{Bd{}{{B`{{An{c}}}}}}}};<98756{eAH`{{`{{D`{Cn}}}}}{{Fb{}{{B`{c}}}}}}{eAH`{{Jl{{D`{Cn}}}}}{{Fb{}{{B`{{An{c}}}}}}}}6{{Bfc}{{j{Aj}}}{{Bd{}{{B`{d}}}}}}{{Bfe}Ln{{Jl{Bf}}}{{Bd{}{{B`{c}}}}}}{{Bfe}E`{{Jl{{D`{Cn}}}}}{{Bd{}{{B`{c}}}}}}{{Bfe}{{ABd{c}}}Gn{{Bd{}{{B`{c}}}}}}{{AMfDd}Kl}{cDh{{Gd{}{{B`{{An{Ab}}}}}}}}{cF`{{Gd{}{{B`{d}}}}}}{cF`{{Gd{}{{B`{{An{d}}}}}}}}{eLn{{`{Bf}}HjHlAMh}{{Gd{}{{B`{c}}}}}}{eLn{{Jl{Bf}}HjHl}{{Gd{}{{B`{{An{c}}}}}}}}{eE`{{`{{D`{Cn}}}}HjHlAMh}{{Gd{}{{B`{c}}}}}}{eE`{{Jl{{D`{Cn}}}}HjHl}{{Gd{}{{B`{{An{c}}}}}}}}{{Bf{D`{d}}}F`}{{Bf{D`{c}}}Ln{{Jl{Bf}}}}{{Bf{D`{c}}}E`{{Jl{{D`{Cn}}}}}}{{Bf{D`{c}}}{{ABd{c}}}Gn}{{Bf{D`{{An{d}}}}}F`}{{Bf{D`{{An{c}}}}}Ln{{Jl{Bf}}}}{{Bf{D`{{An{c}}}}}E`{{Jl{{D`{Cn}}}}}}{{Bf{D`{{An{c}}}}}{{ABd{c}}}Gn}{cF`{{Gf{}{{B`{{An{d}}}}}}}}{{{Ej{c}}AAd}{{AFn{}{{AIb{c}}{AId{e}}{AIf{g}}}}}Nl{AIh{AIj{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{{Ej{c}}AAd}{{AFn{}{{AIb{e}}{AId{c}}{AIf{g}}}}}{AIh{AIj{e}}}Nl{{El{}{{B`{e}}}}GfHjHl}}{{EncAAd}{{AFn{}{{AIb{c}}{AId{e}}{AIf{g}}}}}Nl{AIh{AIj{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{BfAbEn}Dh}{{BfdEn}F`}{{BfBfEn}Ln}{{Bf{D`{Cn}}En}E`}{{Bf{D`{Cn}}En}AH`}{{BfcEn}{{ABd{c}}}Gn}{{EnAAd}{{AFn{}{{AIb{c}}{AId{e}}{AIf{g}}}}}Nl{AIh{AIj{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{BfEn}Dh}{{BfEn}F`}{{BfEn}Ln}{{BfEn}E`}{{BfEn}AH`}{{BfEn}{{ABd{c}}}Gn}{{BfEnDd}Dh}{{{AFn{}{{AIb{c}}{AId{e}}{AIf{g}}}}En}{{An{c}}}Nl{AIh{AIj{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{HhEn}{{Ad{Gh}}}}{{AJ`En}{{Ad{Gh}}}}0{{DhEn}{{Ad{Gh}}}}{{F`En}{{Ad{Gh}}}}{{LnEn}{{Ad{Gh}}}}{{E`En}{{Ad{Gh}}}}{{AH`En}{{Ad{Gh}}}}{{{ABd{c}}En}{{Ad{Gh}}}Gn}{{HhEn}Gh}{{AJ`En}Gh}0{{DhEn}Gh}{{F`En}Gh}{{LnEn}Gh}{{E`En}Gh}{{AH`En}Gh}{{{ABd{c}}En}GhGn}{{DhEn}{{An{Ab}}}}{{}Dd}00000000000000000000000{DhAb}{{{ABd{c}}En}{{An{Gl}}}Gn}0{Gh{{An{Bf}}}}{{AMjEn}Gh}{{{AFn{}{{AIb{c}}{AId{e}}{AIf{g}}}}En}{{An{c}}}Nl{AIh{AIj{c}}}{{El{}{{B`{c}}}}GfHjHl}}{DhEn}{LnEn}{AH`En}{{Dhdd}{{Ad{Ah}}}}{{F`dd}{{Ad{Ah}}}}{{Lndd}{{Ad{Ah}}}}{{E`dd}{{Ad{Ah}}}}{{AH`dd}{{Ad{Ah}}}}{{{ABd{c}}dd}{{Ad{Ah}}}Gn}{{DhDh}F`}{{F`F`}F`}{{LnBf}F`}{{LnLn}F`}{{E`{D`{Cn}}}F`}{{E`E`}F`}543201{{Ghc}bADl}{{AJfc}bADl}{{Ddc}bADl}{{AJhc}bADl}{{AAdc}bADl}{{AL`c}bADl}{{Ghcd}bADl}{{}En}000000000000000000000000000000000{DhDd}{Dd{{An{Dd}}}}{AAd{{An{AAd}}}}{ce{}{}}000000000000000000000000000000000{{AMl{An{En}}En}{{Ad{Hh}}}}{{AMl{An{En}}En}Hh}{Dhc{}}{F`c{}}{Lnc{}}{E`c{}}{AH`c{}}{{{ABd{c}}}eGn{}}{HhAb}{AMlAb}{Gh{{Ad{Gh}}}}{Ddd}00{Ghd}111010111110101011110111101{AAdd}{{{AFn{}{{AIb{c}}{AId{e}}{AIf{g}}}}}{{AAn{cgAAl}}}Nl{AIh{AIj{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{{AFn{}{{AIb{c}}{AId{e}}{AIf{g}}}}}{{An{c}}}Nl{AIh{AIj{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{DhDh}F`}{{F`F`}F`}{{LnBf}F`}{{LnLn}F`}{{E`{D`{Cn}}}F`}{{E`E`}F`}542301{{AIlAIl}{{Ad{{Gb{AIlAIl}}}}}}{{DhDh}{{Ad{{Gb{DhDh}}}}}}{{DdDd}{{Ad{d}}}}{F`{{An{d}}}}{F`Ab}{LnAb}{E`Ab}{F`{{An{Jb}}}}{AHh{{An{Hb}}}}{AHj{{An{Jb}}}}{AHhAb}{AHjAb}{{DdDd}{{Ad{Dd}}}}9876{{Bf{D`{Cn}}EnEn}F`}{{HhHh}c{}}{{{j{c}}Ab}{{Fl{AbAHd}}}{}}000000{Ln{{Ad{En}}}}{E`{{Ad{En}}}}{KlAMf}`{{}c{}}00{{Bfc}Ln{{Jl{{D`{Bf}}}}}}{{Bfc}Ln{{Jl{{D`{{An{{AHf{Bf}}}}}}}}}}{{Bfc}Ln{{Jl{{D`{{An{Bf}}}}}}}}{{Bfc}Ln{{Jl{{D`{{AHf{Bf}}}}}}}}{{Bfc}E`{{Jl{{D`{{An{{AHf{{D`{Cn}}}}}}}}}}}}{{Bfc}E`{{Jl{{D`{{D`{Cn}}}}}}}}{{Bfc}E`{{Jl{{D`{{An{{D`{Cn}}}}}}}}}}{{Bfc}E`{{Jl{{D`{{AHf{{D`{Cn}}}}}}}}}}{{Bfe}{{ABd{c}}}Gn{{Jl{{D`{{An{c}}}}}}}}{{Bf{D`{c}}}{{ABd{c}}}Gn}{{BfDd}Kl}{Bf{{ABd{c}}}Gn}{{DhEnEn}Dh}{{F`EnEn}F`}{{LnEnEn}Ln}{{E`EnEn}E`}{{AH`EnEn}AH`}{{{ABd{c}}EnEn}{{ABd{c}}}Gn}{{Bf{Ej{c}}}{{ABd{c}}}Gn}{{Bf{Ej{c}}G`}{{ABd{c}}}Gn}{F`c{}}0{{DhDh}F`}{{F`F`}F`}{{LnLn}F`}{{LnBf}F`}{{E`E`}F`}{{E`{D`{Cn}}}F`}543210{Dh{{Ad{{AD`{Jd}}}}}}{Ln{{Ad{{AD`{Jd}}}}}}{Dh{{`{{Kf{}{{B`{{An{Ab}}}}}}}}}}{Ln{{`{{Kf{}{{B`{{An{Bf}}}}}}}}}}{Dh{{`{{Kh{}{{B`{{An{Ab}}}}}}}}}}{Ln{{`{{Kh{}{{B`{{An{Bf}}}}}}}}}}{{GhGh}{{An{AMn}}}}{{AJhAJh}{{An{AMn}}}}{Hh{{An{En}}}}{{{AJb{AKhHf}}}{{An{En}}}}{{AHhJbKj}{{Ad{{An{Hb}}}}}}{{AHjJbKj}{{Ad{{An{Jb}}}}}}{{AHhJbKj}{{Ad{Ab}}}}{{AHjJbKj}{{Ad{Ab}}}}{{BfEnJb}{{Ad{F`}}}}{{{j{c}}Ab}{{Fl{AbAHd}}}{}}000000{DhDh}{F`F`}{LnLn}{E`E`}{AH`AH`}{{{ABd{c}}}{{ABd{c}}}Gn}`{HhEn}{{{AJb{AKhHf}}}En}{{F`c{An{d}}}{{Ad{F`}}}{{Fb{}{{B`{L`}}}}}}{{Lnc{An{Bf}}}{{Ad{Ln}}}{{Fb{}{{B`{L`}}}}}}{{E`c{An{{D`{Cn}}}}}{{Ad{E`}}}{{Fb{}{{B`{L`}}}}}}{{F`ce}{{Ad{F`}}}{{Fb{}{{B`{L`}}}}}{{C`{{An{d}}}{{Bn{{An{d}}}}}}}}{{Lnce}{{Ad{Ln}}}{{Fb{}{{B`{L`}}}}}{{C`{{An{Bf}}}{{Bn{{An{Df}}}}}}}}{{E`ce}{{Ad{E`}}}{{Fb{}{{B`{L`}}}}}{{C`{{An{{D`{Cn}}}}}{{Bn{{An{{Ej{Cn}}}}}}}}}}{{F`F`{An{d}}}{{Ad{F`}}}}{{LnF`{An{Bf}}}{{Ad{Ln}}}}{{E`F`{An{{D`{Cn}}}}}{{Ad{E`}}}}{Dhb}{{DhDd}b}{{KlAMf}b}{{DhJd}Dh}{{F`Jd}F`}{{LnJd}Ln}{{E`Jd}E`}{{AH`Jd}AH`}{{{ABd{c}}Jd}{{ABd{c}}}Gn}{{DhJd{An{Ab}}}Dh}{{F`Jd{An{d}}}F`}{{LnJd{An{Bf}}}Ln}{{E`Jd{An{{D`{Cn}}}}}E`}{{AH`Jd{An{{D`{Cn}}}}}AH`}{{{ABd{c}}Jd{An{{Gj{c}}}}}{{j{{Gj{c}}}}}Gn}{{F`d}F`}{{Lnd}Ln}{{E`d}{{j{Cl}}}}{{AH`d}AH`}{{F`Dj}{{j{Aj}}}}{{LnDj}{{j{Db}}}}{{E`Dj}{{j{Cl}}}}{{AH`Dj}AH`}{{AHhCn}Ab}{{AHjCn}Ab}{{GhDd}{{An{Gh}}}}`{{HhHh}c{}}{{{j{c}}Ab}{{Fl{AbAHd}}}{}}000000{F`{{An{L`}}}}{F`Ab}{LnAb}{E`Ab}{{LnDl}Ln}{{Lnc}Ln{{Jl{{D`{L`}}}}Lb}}{{E`c}E`{{Jl{{D`{L`}}}}Lb}}{{E`Dl}E`}{{Ddd}AAd}{{Kld}ALn}{AJhAL`}{{DdBfd}ALn}{AJhBf}{{LnEn}{{Ad{Ab}}}}{{DhDd}b}{AAdAAd}{Dh{{Ad{Ll}}}}{ce{}{}}0000000000000000000000000000{DdDd}{AAdAN`}{cDf{}}00{E`Ln}{{Dhc}{{Ad{Dh}}}{{Cf{Cd}{{Bn{{Ad{Ab}}}}}}}}{{Dhe}{{Ad{{j{g}}}}}{}{{Cf{{An{Cd}}}{{Bn{{Ad{{An{c}}}}}}}}Cb}Bl}{g{{Fl{AHle}}}{}{}{{Fb{}{{B`{{Fl{ce}}}}}}}}0{{AAdg}{{Fl{AHne}}}{}{}{{Fb{}{{B`{{Fl{ce}}}}}}}}0{ALb{{Fl{eg}}}{}{{AHl{c}}AFn}{}}0{{ALbAAd}{{Fl{eg}}}{}{{AHn{c}}AFn}{}}0{Gh{{Ad{c}}}J`}{c{{Fl{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000{{GhDd}{{Ad{Gh}}}}{{Ddd}{{Ad{AAd}}}}{{Dh{j{c}}e}{{Ad{Dh}}}Bl{{Cf{{An{Cd}}An}{{Bn{{Ad{{An{Ab}}}}}}}}}}{cMb{}}000000000000000000000000000000000{AAdAAd}{F`{{Ad{F`}}}}{Ln{{Ad{Ln}}}}{E`{{Ad{E`}}}}{{{ABd{c}}}{{Ad{{j{{Gj{c}}}}}}}Gn}{{{AFn{}{{AIb{c}}{AId{e}}{AIf{g}}}}En}cNl{AIh{AIj{c}}}{{El{}{{B`{c}}}}GfHjHl}}0{{DdGh}d}{{{AFn{}{{AIb{c}}{AId{e}}{AIf{g}}}}}gNl{AIh{AIj{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{AHhCn}Ab}{{AHjCn}Ab}{{F`Lf{Ej{Hd}}}{{Ad{b}}}}{{ANbLf{Ej{Hd}}}{{Ad{b}}}}{{ANdLf{Ej{Hd}}}{{Ad{b}}}}{{ALfLf{Ej{Hd}}}{{Ad{b}}}}{{ANfLf{Ej{Hd}}}{{Ad{b}}}}{{ANhLf{Ej{Hd}}}{{Ad{b}}}}{{ANjLf{Ej{Hd}}}{{Ad{b}}}}{{ANlLf{Ej{Hd}}}{{Ad{b}}}}{{ANnLf{Ej{Hd}}}{{Ad{b}}}}{{AMlLf{Ej{Hd}}}{{Ad{b}}}}{{AHhLf{Ej{Hd}}}{{Ad{b}}}}{{AHjLf{Ej{Hd}}}{{Ad{b}}}}{{LnLf{Ej{Hd}}}{{Ad{b}}}}{{E`Lf{Ej{Hd}}}{{Ad{b}}}}{{AH`Lf{Ej{Hd}}}{{Ad{b}}}}{{{ABd{c}}Lf{Ej{Hd}}}{{Ad{b}}}Gn}{{F`Lf{D`{Hd}}}{{Ad{b}}}}{{ANbLf{D`{Hd}}}{{Ad{b}}}}{{ANdLf{D`{Hd}}}{{Ad{b}}}}{{ALfLf{D`{Hd}}}{{Ad{b}}}}{{ANfLf{D`{Hd}}}{{Ad{b}}}}{{ANhLf{D`{Hd}}}{{Ad{b}}}}{{ANjLf{D`{Hd}}}{{Ad{b}}}}{{ANlLf{D`{Hd}}}{{Ad{b}}}}{{ANnLf{D`{Hd}}}{{Ad{b}}}}{{AMlLf{D`{Hd}}}{{Ad{b}}}}{{AHhLf{D`{Hd}}}{{Ad{b}}}}{{AHjLf{D`{Hd}}}{{Ad{b}}}}{{LnLf{D`{Hd}}}{{Ad{b}}}}{{E`Lf{D`{Hd}}}{{Ad{b}}}}{{AH`Lf{D`{Hd}}}{{Ad{b}}}}{{{ABd{c}}Lf{D`{Hd}}}{{Ad{b}}}Gn}{ce{}{}}000000000000000000000000000000000{Enc{}}0{En{{AO`{ce}}}{}{}}{{{D`{Md}}e}c{}{{Mf{Dl}{{Bn{c}}}}}}{{{AFn{}{{AIb{c}}{AId{e}}{AIf{g}}}}{An{G`}}}{{AFn{}{{AIb{c}}{AId{e}}{AIf{g}}}}}Nl{AIh{AIj{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{Dh{j{c}}e}DhBl{{Cf{{An{Cd}}An}{{Bn{{An{Ab}}}}}}}}```````````{{cf}b{}}{AIld}{{AOb{An{Bf}}}b}{{AIlAIl}{{Ad{b}}}}{AObb}{{AObBf}b}{{AIlDj}Dl}<<<<<<<<{{AIlAIlc}{{Ad{AIl}}}AIn}{{AIlDd}{{Ad{Ab}}}}{AIlAIl}{{ce}b{}{}}{{}AOd}{Enc{}}0000000{{AObc}AIl{{Fb{}{{B`{{An{Bf}}}}}}}}{Enb}000{AIlDd}{{AIlAIl}c{}}{{AIlLn}c{}}{{AIlBf}c{}}012{{AInALfALf}{{Ad{ALf}}}}{AObAIl}{AOd{{AB`{AOf}}}}{cc{}}000{{ALf{AB`{AOf}}dAOh}AIl}{{ALfAOh}AIl}{{LnALdAOh}{{Ad{AIl}}}}{{BfdEnAOh}AIl}{{AIlEn}{{Ad{Gh}}}}{{AIlEn}Gh}{AIl{{AB`{AOf}}}};<=;=<{{}En}000{ce{}{}}0000{AIlAb}{AIld}0{AIlAOj}{AIlEn}{{AIlAIl}c{}}{{AIlLn}c{}}{{AIlBf}c{}}120{{AIlAIl}{{Ad{{Gb{AIlAIl}}}}}}{{DhDh}{{Ad{{Gb{DhDh}}}}}}8{{AOd{AB`{AOf}}}{{Ad{b}}}}9{AIl{{Ad{En}}}}{AIlBf}{{BfEnAOh}AOb}{{{AB`{AOf}}}AOd}{AOj{{An{c}}}{}}:989:8;{AIlALf}{{AObBf}{{Gb{Kdd}}}}`{AOj{{Gb{En{An{En}}}}}}{{AIld}AIl}{{AIlDj}AIl}`{{AIldd}Eh}{{AIlALdAOl}AIl}{AIl{{Ad{AIl}}}}{AIlAIl}{ce{}{}}{c{{Fl{e}}}{}{}}0000000{cMb{}}0004{AIld}{AIl{{Ad{AOn}}}}4444``````{{cf}b{}}05555{ALdAOf}{AOhAOh}{AOfAOf}{{ce}b{}{}}0{{}AOh}{{}AOf}{Enc{}}000{Enb}0{{AOhAOh}d}{{AOfBf}{{An{Kd}}}}{{AOhFd}Ff}{{AOfFd}Ff}{cc{}}0{{AOfKd}Bf}{AOfALd}{{AOfKd}{{An{Bf}}}}{{}En}0{ce{}{}}0{AOfd}0{AOfEn}{{AOfAOf}d}33{c{{Fl{e}}}{}{}}000{cMb{}}055`55{{}B@`}{Enc{}}0{{}b}{Enb}{B@`b}2?4;:665{{}d};```````330``````````````````````{B@bBf}<<<<`5{B@b}66644`{{B@dFd}{{Fl{bALh}}}}{{B@bFd}{{Fl{bALh}}}}0{cc{}}{cB@b{{ALj{{AHf{Bf}}}}}}1{{}{{Ij{BfB@d}{{Bn{b}}}}}}{{}En}0{ce{}{}}0{cAHdAGb}````{{{Ij{BfB@d}{{Bn{b}}}}}b}{cAHdB@f}{cDf{}}{c{{Fl{e}}}{}{}}000{cMb{}}066``````````````````{{cf}b{}}77{B@hB@h}{{ce}b{}{}}{Enc{}}0{Enb}{{FdB@jEn}Ff}{cc{}}{{}B@l}{{}B@h}{{}{{An{En}}}}{{}Df}{{}d}{{}En}{ce{}{}}{{{An{B@l}}}b}{B@hb}{{{An{En}}}b}2{{{An{d}}}b}4{c{{Fl{e}}}{}{}}0{cMb{}}6````````````{{cf}b{}}00{{AOn{Ej{Ab}}B@n}{{Ad{b}}}}{{AOnC`}{{Ej{Ab}}}}0{{AOnF`}{{Ad{AOn}}}}{{AOn{D`{AMf}}}{{Ad{AOn}}}}0{{AOnJdEn}AOn}{{AOnAb}c{}}0{{AOnAOn}c{}}{AOnAOn}0{{AOnBfe}{{Ad{AOn}}}BA`{{Mf{Ab}{{Bn{c}}}}}}{{AOnEne}{{Ad{AOn}}}BA`{{Mf{Ab}{{Bn{c}}}}}}22{ce{}{}}0000000003{BAbBAb}{BAdBAd}5{{ce}b{}{}}00{{AOnBf}{{Ad{Ab}}}}{{AOne}{{Ad{{Ej{Ab}}}}}{{Jl{Bf}}}{{Fb{}{{B`{c}}}}}}{{}BAd}{{}AOn}{Enc{}}000000000=<={Enb}000{{AOnBf}{{Ad{AOn}}}}16{{AOn{D`{c}}}AOn{{Jl{Bf}}}}{{AOn{BAf{Bf}}}AOn}{{AOn{An{{D`{c}}}}}{{Ad{AOn}}}{{Jl{Bf}}}}{AOn{{Ej{Dd}}}}7{{BAdBAd}d}{{AOnAOn}d}00{{ce}d{}{}}00{AOnEn}`{{AOne}{{Ad{AOn}}}{{Jl{Bf}}}{{Fb{}{{B`{c}}}}}}{{AOn{Ej{Ab}}}{{Ad{AOn}}}}{{AOnAOn}{{Ad{b}}}}{AOn{{Ej{Kl}}}}{{AOnACj}{{Ad{AOn}}}}{{AOnF`}{{Ad{AOn}}}}{{BAbFd}Ff}{{BAdFd}Ff}{{AOnFd}Ff}0{cc{}}000{BAhAOn}{B@nAOn}2{g{{Fl{ic}}}{}{}{{Fn{c}{{B`{e}}}}}{}}{cAOn{{Fb{}{{B`{Ab}}}}}}{{{D`{BAj}}}{{Ad{AOn}}}}{{{D`{BAj}}B@n}{{Ad{AOn}}}}{{cB@n}{{Ad{AOn}}}{{Bd{}{{B`{BAj}}}}}}{{AOnEn}{{An{{Ej{Gh}}}}}}{{AOnBf}{{An{En}}}}{AOn{{Ej{Bf}}}}{AOn{{Ej{AMf}}}}{AOn{{D`{Ab}}}}{AOn{{Ej{Ab}}}}{{AOnEn}{{Ad{BAj}}}}{{AOnEnBAj}{{Ad{b}}}}{{AOnEnBAj}b}{AOn{{An{{Ad{Dd}}}}}}`{{AOne}{{Ad{BAl}}}{{Jl{Bf}}}{{Fb{}{{B`{c}}}}}}0{{AOn{Ej{Ab}}dd}{{Ad{BAl}}}}{{BAdc}bADl}{{AOn{An{Lf}}}{{Ad{ANf}}}}{{AOn{An{En}}}AOn}{AOnEn}{{AOn{D`{Ab}}}{{Ad{AOn}}}}0{{AOn{D`{Ab}}}AOn}{{AOn{BAn{En}}}c{}}{{AOnBB`}c{}}{{AOn{BBb{En}}}c{}}{{AOn{BBd{En}}}c{}}{{AOn{BBf{En}}}c{}}{{AOnEn}c{}}{{AOn{Jf{En}}}c{}}{{AOnBf}c{}}{{}En}0000{{AOnEnc}{{Ad{AOn}}}BA`}{ce{}{}}000000{AOn{{Ad{F`}}}}{AOnd}1{AOn{{Ih{Ab}}}}{{AOnd}BBh}{AOnBBj}{AOn{{Ad{{An{Ab}}}}}}{{AOnBAb}{{Ad{{An{Ab}}}}}}{{AOnce}{{Ad{AOn}}}{{BBl{AMf}}}{{BBl{AMf}}}}{{AOnBBn}{{Ad{AOn}}}}3{{AOnAb}c{}}0{{AOnAOn}c{}}{AOnEn}{{{Ej{c}}}{{Ad{AOn}}}BA`}{{{Ej{Ab}}}AOn}{{{Ej{Ab}}}{{Ad{AOn}}}}{BBh{{An{c}}}{}}{BBj{{An{c}}}{}}{AOnAOn}{{AOncd}{{Ad{{Ej{AOn}}}}}{{BBl{Df}}}}0{{AOne}{{Ad{c}}}{}{{C`{AOn}{{Bn{{Ad{c}}}}}}}}0{{AOngc}{{Ad{e}}}{}{}{{C`{AOnc}{{Bn{{Ad{e}}}}}}}}{AOn{{An{Ab}}}}{{AOnAOn}d}<=={{AOnBfBf}{{Ad{AOn}}}}{{AOnBfc}{{Ad{AOn}}}BA`}{{AOnEnc}{{Ad{AOn}}}BA`}18`{{AOnAbdd{An{Hd}}}{{Ad{AOn}}}}0{{AOnEndd{An{Hd}}}{{Ad{AOn}}}}{AOnB@n}{{AOnAOn}{{Ad{b}}}}{{AOne}{{Ad{AOn}}}{{Jl{Bf}}}{{Fb{}{{B`{c}}}}}}{{AOnEn}{{An{Ab}}}}{{AOnc}{{Ad{AOn}}}{{BC`{En}}}}2{{AOnc}{{Ad{{Ej{Ab}}}}}{{BBl{AMf}}}}{{AOneBCb}{{Ad{AOn}}}{{Jl{Bf}}}{{Fb{}{{B`{c}}}}}}{{AOneB@n}{{Ad{AOn}}}{{Jl{Bf}}}{{Fb{}{{B`{c}}}}}}{{AOn{D`{c}}}{{Ad{b}}}{{Jl{Bf}}}}{AOn{{Gb{EnEn}}}}{{AOnJd}AOn}{AOnd}{AOnb}{BBh{{Gb{En{An{En}}}}}}{BBj{{Gb{En{An{En}}}}}}{{AOnJdEn}AOn}0{{AOncDn}{{Ad{AOn}}}{{BBl{AMf}}}}0{AOn{{`{{Bd{}{{B`{AOn}}}}}}}}{{AOnEnd}{{Ej{AOn}}}}{{AOnAb}c{}}{{AOnAOn}c{}}1{{AOnBAb}{{Ad{{An{Ab}}}}}}{{AOn{An{En}}}AOn}{{AOnDl}{{Ad{AOn}}}}{{AOnDl}AOn}{{AOnDld}AOn}{{AOnBCd}{{Ad{Ll}}}}{ce{}{}}00{cDf{}}{{AOnEncDn}{{Ad{AOn}}}{{BBl{AMf}}}}{{AOn{An{Bf}}{An{{M`{Df{Ej{Df}}}}}}}{{Ad{AOn}}}}{{AOnBfe}{{Ad{AOn}}}BA`{{Mf{Ab}{{Bn{{Ad{c}}}}}}}}{{AOnEne}{{Ad{AOn}}}BA`{{Mf{Ab}{{Bn{{Ad{c}}}}}}}}{c{{Fl{e}}}{}{}}0000{BCf{{Ad{AOn}}}}{{{Gb{BCh{D`{ALn}}}}}{{Ad{AOn}}}}{{cB@n}{{Ad{AOn}}}{{Bd{}{{B`{{Ad{BAj}}}}}}}}{{AOnBf}{{Ad{En}}}}44444{cMb{}}0000{{AOn{An{{D`{Df}}}}BAd{An{{Gb{JdEn}}}}}{{Ad{AOn}}}}{{AOnd{An{{D`{Df}}}}BAd{An{{Gb{JdEn}}}}}{{Ad{AOn}}}}1{{AOnAOn}{{Ad{AOn}}}}0>>>>>{AOnEn}{{AOnc}{{Ad{AOn}}}BA`}{{AOncB@n}{{Ad{AOn}}}BA`}{{AOnAb}AOn}{{AOnBf{An{L`}}}{{Ad{AOn}}}}{{AOnBf{An{L`}}}AOn}`{{cf}b{}}{ce{}{}}0{BBnBBn}{{ce}b{}{}}{{}BBn}{Enc{}}0{Enb}{{BBnBBn}d}{{ce}d{}{}}00{{BBnFd}Ff}{cc{}}{{BBnc}bADl}`{{}En};`;{c{{Fl{e}}}{}{}}0{cMb{}}```=````````````````````````````````>>>>{BAl{{Ad{AOn}}}}`{BCj{{D`{BCl}}}}{{BAlc}{{Ad{AOn}}}{{Cf{AOn}{{Bn{{Ad{AOn}}}}}}HjHl}}{AhDh}{ce{}{}}000000000000000{BCjBCj}{AhAh}{BAlBAl}{BCnBCn}{{ce}b{}{}}0009{{}BCj}{{}Ah}{Enc{}}000{BD`c{}}111111111111`{{BDbe}{}{}{{BDd{c}}}}{Enb}000{BCjb}1111{{BCjBCj}d}{{AhAh}d}{{ce}d{}{}}00000`{BDfL`}{BCj{{D`{L`}}}}{BAl{{Ad{AOn}}}}{BCj{{Ej{L`}}}}{{BCjFd}Ff}{{AhFd}Ff}{{BAlFd}Ff}{{BCnFd}Ff}0{{BfBCn}Df}{cc{}}0000{{{Ej{BDh}}}BCj}{{{Ej{{Ej{BDh}}}}}BCj}{{{Ej{{Gb{{Ej{L`}}{Ej{BCl}}}}}}}BCj}3{BCjAh}44{g{{Fl{ic}}}{}{}{{Fn{c}{{B`{e}}}}}{}}{cBCj{{Fb{}{{B`{BDh}}}}}}{cBCj{{Gd{}{{B`{BDh}}}}}}{{AhEn}BDf}{BAlAh}0{AhDl}{{BDjdd}{{Ad{Ah}}}}0{BAl{{Ad{AOn}}}}{AhBCj}{{}En}0000000{ce{}{}}000000020{BCjc{}}0100{BDfd}{Ahd}{BCjd}{BCj{{BDn{{BDl{{Ih{L`}}}}{Ih{BCl}}}}}}{AhBE`}{BAl{{Ej{Ab}}}}{{BAl{An{{Gb{JdEn}}}}}{{Ej{Ab}}}};{BDfEn}{AhEn}====={{{Ej{L`}}{Ej{BCl}}d}BCj}{{AOn{Ej{Ab}}Ah{An{{Ej{Df}}}}}BAl}{BE`{{An{c}}}{}}{{BE`En}{{An{c}}}{}}{{BAlc}{{Ad{AOn}}}{{C`{AOn}{{Bn{{Ad{AOn}}}}}}HjHl}}{c{}{}}{AhBDb}{{BAlJbKj}{{Ad{AOn}}}}{{BAle}BAl{{Jl{Bf}}}{{Fb{}{{B`{c}}}}}}{{AhJdEn}BD`}{BCjb}{Ahb}{{BAlCn}{{Ad{AOn}}}}{BAl{{Ad{AOn}}}}{Ah{{Ej{L`}}}}0{BAlAh}0{ce{}{}}000{cDf{}}{c{{Fl{e}}}{}{}}000000000000000{cMb{}}0000000{AhAh}{AhBCj}{AhBEb}:66666666`````{{BCjc}Ab{{C`{{Gb{L`BCl}}}{{Bn{An}}}}HjHl}}{{BCjc}Ab{{C`{{Gb{L`BCl}}}{{Bn{}}}}HjHl}}{{{D`{{BEd{L`}}}}c}Ab{{C`{{BEd{L`}}}{{Bn{An}}}}HjHl}}{{{D`{{BEd{L`}}}}c}Ab{{C`{{BEd{L`}}}{{Bn{}}}}HjHl}}{{{D`{c}}eBEf}{{AGf{c}}}{BEhBEj}{{Bd{}{{B`{{Gb{L`L`}}}}}}Gf}}{{{D`{c}}G`eBEf}{{AGf{c}}}{BEhBEj}{{Bd{}{{B`{{Gb{L`L`}}}}}}Gf}}{{{j{c}}L`L`}{{j{c}}}Bl}{{BEb{D`{Eh}}}d}{{BElAh}Ab}{{BEnBEn}BEn}0`{{BF`AOnAh}{{Ad{Ab}}}}{BF`{{Ad{Bf}}}}```````````````````````{{cf}b{}}00{{BFbGh}{{An{b}}}}{{BFdGh}b}0{ce{}{}}00000{BFbBFb}{BFdBFd}{BAjBAj}{{ce}b{}{}}00{{{D`{c}}}Dd{{AMd{Dd}}}}{{}BAj}{Enc{}}00000{Enb}00{{BAjBAj}d}{{ce}d{}{}}00{{BAjFd}Ff}{cc{}}{{{Gb{DdEn}}}BFb}{{{Gb{DdEn}}}BFd}22{{eEn}B@n{{ALj{Dd}}}{{Bd{}{{B`{{Ej{{Gb{Dfc}}}}}}}}}}{{}En}00{ce{}{}}00{BFbAb}{BFdAb}{{DdEn}BFb}{{DdEn}BFd}{{{Ej{Gh}}}BAj}{{BFbEn}Ab}{{BFdEn}Ab}{{{D`{BAj}}{An{En}}}{{Ad{B@n}}}}0{{{D`{BAj}}{An{En}}}{{Ad{{Ej{Dd}}}}}}999{c{{Fl{e}}}{}{}}00000{cMb{}}00;;;{{{D`{AOn}}}{{Ad{AOn}}}}0`````{{HdHd}Hd}{{{D`{AOn}}{An{Lf}}}{{Ad{{Gb{{Ej{ANf}}Lf}}}}}}{{{BFf{Jd}}Lf{Ej{Hd}}}b}????{{}BFh}{Enc{}}000{Enb}0{BFhHd}{{BFjFd}Ff}{cc{}}0{{BFjc}bADl}``{{}En}0{ce{}{}}0{{{BFl{BFjce}}L`HdAOngi}b{}BFn{{C`{}{{Bn{c}}}}}{{Cf{c}}}}????>>{{BG`Lf{Ej{Hd}}}{{Ad{b}}}}0{{BG`Lf{D`{Hd}}}{{Ad{b}}}}033{{BFh{D`{Cn}}}b}{{BFhJn}b}{{BFhJd}b}{{BFhKd}b}{{BFhHd}b}`````````````````````````````````````````````````````````````````````````````````````````````````````````{{cf}b{}}0000000000{{{AB`{ce}}}e{}BGb}{{{AB`{c}}}BGd{BGfLb}}{{{AB`{ce}}}{}LbBGb}{{{AB`{c}}}JnBGh}{{{AB`{ce}}}cLbBGb}{{{AB`{{BGj{c}}e}}}{{AB`{ce}}}{}BGb}{{{AB`{{D`{{BGj{c}}}}e}}}{{AB`{{D`{c}}e}}}{}BGb}{ce{}{}}00300000000000000000000000{{AIlAIlc}{{Ad{AIl}}}AIn}{{{AB`{c}}}{{An{AGb}}}{AGbLb}}`{{BGlAb}{{Ad{Ab}}}}{{BGlc}{{Ad{Ab}}}A`}{MdMd}{BGnBGn}{{{AB`{ce}}}{{AB`{ce}}}Lb{BGbNl}}{KnKn}{BCdBCd}{ALnALn}{BAhBAh}{KjKj}{BH`BH`}{BHbBHb}{BHdBHd}{{ce}b{}{}}0000000000{{{AB`{ce}}{AB`{ce}}}AMn{BHfLb}BGb}{ALbe{}{{AHl{c}}AFn}}0{{ALbAAd}e{}{{AHn{c}}AFn}}0{{ce}AMn{}{}}{{AHdB@b}AHd}{AHdAHd}{{FhAAd}{{A@d{Fh}}}}{ALnAAd}```{{}b}{cbBGb}{{}{{AB`{c}}}BHh}{{}Kn}{{}BCd}{{}ALn}{{}BAh}{{}Kj}`{Enc{}}00{{{AB`{ce}}}cLbBGb}11111111111111111111111{{{AB`{c}}}Bf{AGbLb}}`{{{AB`{AAfc}}}{{Fl{{AB`{ec}}{AB`{AAfc}}}}}BGb{AAfHjHl}}{{{AB`{AAfc}}}{{AB`{ec}}}BGb{AAfHjHl}}{{{AB`{ce}}}{{BHj{ce}}}Lb{NlBGb}}{Enb}00{{{AB`{ce}}}bLbBGb}1111111111{{MdMd}d}{{{AB`{ce}}{AB`{ce}}}d{BHlLb}BGb}{{{AB`{Fh}}Fh}d}{{{AB`{BHn}}BHn}d}{{BCdBCd}d}{{ALnALn}d}{{BAhBAh}d}{{KjKj}d}{{BHdBHd}d}{{ce}d{}{}}00000000000000000000{BGn{{Gb{KdKd}}}}`{{BAhc}BAh{{C`{EnALn}{{Bn{d}}}}}}{{AInALfALf}{{Ad{ALf}}}}{{{AB`{BI`}}}{{Fl{bBIb}}}}{{AHdFd}{{Fl{bALh}}}}0{{MdFd}{{Fl{bALh}}}}{{BGnFd}{{Fl{bALh}}}}{{{AB`{ce}}Fd}{{Fl{bALh}}}LbBGb}{{{AB`{ce}}Fd}{{Fl{bALh}}}{AAhLb}BGb}{{{AB`{ce}}Fd}{{Fl{bALh}}}{B@fLb}BGb}{{BCdFd}Ff}{{ALnFd}{{Fl{bALh}}}}{{BAhFd}{{Fl{bALh}}}}{{KjFd}{{Fl{bALh}}}}{{BH`Fd}{{Fl{bALh}}}}{{BHbFd}{{Fl{bALh}}}}{{BHdFd}{{Fl{bALh}}}}`{BIbAHd}{BIdAHd}{BIfAHd}{BIhAHd}{cc{}}{KdMd}11{c{{AB`{c}}}{}}{BIj{{AB`{BIl}}}}{BIl{{AB`{BIl}}}}{{{D`{c}}}{{AB`{{D`{c}}}}}Nl}{{{Ej{ce}}}{{AB`{{D`{c}}e}}}{}{BGbNl}}{{{BEd{c}}}{{AB`{{D`{c}}}}}{}}{Bf{{AB`{Bf}}}}{{{AHf{c}}}{{AB`{c}}}{BInLb}}{Df{{AB`{Bf}}}}{{{AB`{Bf}}}{{AB`{{D`{Cn}}}}}}{{{A@d{ce}}}{{AB`{ce}}}LbBGb}{BJ`{{AB`{BJb}}}}{BJd{{AB`{BJd}}}}{BJf{{AB`{BJd}}}}{BJb{{AB`{BJb}}}}{cc{}}{BJhc{}}11111{{{Ej{ALn}}}BAh}2222{{c{An{G`}}}BJj{}}{{{BJl{Jd}}{BJl{Cn}}{An{G`}}}BJn}{{{BJl{Jd}}{BJl{Cn}}{An{G`}}}BK`}{g{{Fl{ic}}}{}{}{{Fn{c}{{B`{e}}}}}{}}{e{{AB`{{D`{c}}}}}{}{{Fb{}{{B`{c}}}}}}{{gEn}{{BKb{Jd}}}Jl{{Fb{}{{B`{{An{c}}}}}}}{{Fb{}{{B`{{An{e}}}}}}}}0{e{{BKb{Jd}}}{{Fb{}{{B`{{An{d}}}}}}}{{Fb{}{{B`{{An{c}}}}}}}}{{gAAd}{{BKb{Jd}}}BEj{{Fb{}{{B`{{An{c}}}}}}}{{Fb{}{{B`{{An{e}}}}}}}}2{e{{AB`{{D`{c}}}}}Hj{{Gd{}{{B`{c}}}}}}{{}{{AB`{c}}}Lb}{c{{AB`{ec}}}BGbLb}{Bf{{Fl{BKd}}}}{{Bfc}BKf{}}{{{AB`{ce}}{AB`{ce}}}d{BKhLb}BGb}{{{AB`{ce}}}{{An{c}}}LbBGb}{{{AB`{ce}}}cLbBGb}{BAh{{Ej{Bf}}}}{{EhEn}Gh}4{BKjd}{{{AB`{ce}}g}b{BKlLb}BGbADl}{{BCdc}bADl}{{ALnc}bADl}{{Kjc}bADl}{{BHdc}bADl}{MdKd}{{}b}{cb{NlBGb}}{{BAhBf}{{An{En}}}}{{{D`{Kd}}}{{`{{Bd{}{{B`{En}}}}}}}}{{}En}000000000000`{BGnHd}`{ce{}{}}000000000000{{{AB`{ce}}}{{An{c}}}{}BGb}{{{AB`{ce}}}{}LbBGb}{{{AB`{BKn}}}Ab}{BAhd}{BGnd}{Mdd}`{{{AB`{BI`}}}d}{cd{}}1{{{AB`{ce}}{AB`{ce}}}d{BKhLb}BGb}{BAhEn}`1{{AIlAIl}{{Ad{{Gb{AIlAIl}}}}}}{{DhDh}{{Ad{{Gb{DhDh}}}}}}{{{AB`{ce}}}cNl{BGbNl}}{BL`Ab}0{BLbAb}``11``{{{AB`{ce}}{AB`{ce}}}d{BHlLb}BGb}{{BLdEn}{{An{En}}}}{{Bfc}BLf{}}{c{{AB`{c}}}{}}{{cAAdd}ALn{{ALj{Df}}}}{e{{AB`{c}}}{}{{Mf{{BHj{c}}}{{Bn{c}}}}}}{{ce}{{AB`{ce}}}{}BGb}{{}{{AB`{{BGj{c}}}}}{}}{c{{AB`{{BGj{e}}c}}}BGb{}}{En{{AB`{{D`{{BGj{c}}}}}}}{}}{{Enc}{{AB`{{D`{{BGj{e}}}}c}}}BGb{}}3210`{{}Md}{{}BGn}{{{AB`{ce}}{AB`{ce}}}{{An{AMn}}}{BKhLb}BGb}{c{{BLh{{AB`{c}}}}}{}}{{ce}{{BLh{{AB`{ce}}}}}{}BGb}`````{BL`Ab}0{{{AB`{c}}BLj}b{AGbLb}}{{{AB`{ce}}{AB`{ce}}}dLbBGb}{{BLbJbKj}{{Ad{Ab}}}}{{{AB`{BI`}}{D`{Cn}}}{{Fl{EnBIb}}}}{{{AB`{BI`}}BLl}{{Fl{bBIb}}}}{{{AB`{BI`}}{Ej{Cn}}}{{Fl{EnBIb}}}}{{{AB`{BI`}}Df}{{Fl{EnBIb}}}}{{{AB`{BI`}}{D`{BLn}}}{{Fl{EnBIb}}}}`{{{AB`{BI`}}BM`}{{Fl{HdBIb}}}}`{{AGjEnEn}AGj}0{{{AB`{c}}}{{An{AGb}}}{AGbLb}}{{BMbCn}Ab}{{KdKd}BGn}`{{{AB`{ce}}}EnLbBGb}>>{Md{{An{Kd}}}}{ce{}{}}0000000000{cDf{}}0{ALb{{Fl{eg}}}{}{{AHl{c}}AFn}{}}0{{ALbAAd}{{Fl{eg}}}{}{{AHn{c}}AFn}{}}0{c{{Fl{e}}}{}{}}00{{{AB`{{D`{c}}e}}}{{Fl{{AB`{{BEd{c}}e}}}}}{}BGb}11111111111111111111111{{BLdEn}{{Fl{EnAHd}}}}{c{{Fl{{AB`{c}}BMd}}}{}}{{ce}{{Fl{{AB`{ce}}BMd}}}{}BGb}{{}{{Fl{{AB`{{BGj{c}}}}BMd}}}{}}{c{{Fl{{AB`{{BGj{e}}c}}BMd}}}BGb{}}10{c{{Fl{{BLh{{AB`{c}}}}BMd}}}{}}{{ce}{{Fl{{BLh{{AB`{ce}}}}BMd}}}{}BGb}{{{AB`{ce}}}{{Fl{c{AB`{ce}}}}}{}BGb}{cMb{}}000000000000{{{AB`{ce}}}cNl{BGbNl}}`{{BMbCn}Ab}{ce{}{}}000000000000{{{AB`{ce}}}EnLbBGb}``{{ALn{BMf{DfDf}}}ALn}{{BAh{BMf{DfDf}}}BAh}{{{AB`{BI`}}{D`{Cn}}}{{Fl{EnBIb}}}}{{{AB`{BI`}}{D`{BMh}}}{{Fl{EnBIb}}}}```````{{c{An{G`}}}BJj{}}{{{BJl{Jd}}{BJl{Cn}}{An{G`}}}BJn}{{{BJl{Jd}}{BJl{Cn}}{An{G`}}}BK`}`88{Enc{}}0{Enb}{{BMj{An{AAd}}}{{Fl{{BKb{Jd}}AHd}}}}{cc{}}{{}En}={BMjd}{EnBMj}{BMj{{D`{Jd}}}}{{BMjFh}b}{BMjb}{{BMj{D`{{A@d{Fh}}}}}b}1{{BMj{An{Fh}}}b}{BMj{{BMl{Jd}}}}{c{{Fl{e}}}{}{}}0{cMb{}}{ce{}{}}`{{cf}b{}}{BMnAAf}{BMn{{A@d{Fh}}}}133{BMnBMn}{{ce}b{}{}}{BMnAAd}{{}BMn}{Enc{}}0{Enb}{{BMnEn}b}{{BMnFd}{{Fl{bALh}}}}{cc{}}{{}En}={BMnEn}{EnBMn}{BMnb}60{ce{}{}}{c{{Fl{e}}}{}{}}0{cMb{}}{BMn{{An{BN`}}}}3```````{{AGjEnEn}AGj}0`{{}b}0{{}d}``{{eEnEn}{{BNb{Jd}}}{{Jl{Bf}}}{{Bd{}{{B`{c}}}}}}{{eEnEn}{{BFf{Jd}}}{{Jl{{D`{Cn}}}}}{{Bd{}{{B`{c}}}}}}{Hdb}```{{cf}b{}}::{B@nB@n}{{ce}b{}{}}{{B@nBf}d}{{}B@n}{Enc{}}0{Enb}{{B@nB@n}d}{{ce}d{}{}}00{{B@nFd}Ff}{BNdB@n}0{BAhB@n}{{{D`{Ab}}}B@n}{cc{}}2{BAjB@n}{g{{Fl{ic}}}{}{}{{Fn{c}{{B`{e}}}}}{}}{eB@n{{ALj{Kl}}}{{Fb{}{{B`{c}}}}}}{{B@nBf}{{An{Dd}}}}{{B@nEn}{{An{{Gb{AMfDd}}}}}}0{{B@nBf}{{An{Kl}}}}{{B@nBf}{{An{{Gb{EnAMfDd}}}}}}{BNf{{Ej{Bf}}}}{B@n{{Ej{Bf}}}}{{B@nc}bADl}{{BNfBf}{{An{En}}}}{{B@nBf}{{An{En}}}}{{}En}{{B@nEnAMfDd}{{Ad{{An{Dd}}}}}}{ce{}{}}{B@nc{}}{B@nd}{B@n{{`{{Bd{}{{B`{{Gb{AMfDd}}}}}}}}}}{B@n{{`{{Hn{}{{B`{Dd}}}}}}}}0{B@n{{`{{Hn{}{{B`{Kl}}}}}}}}{B@n{{`{{Hn{}{{B`{AMf}}}}}}}}{B@nEn}{{B@nB@n}b}{{}B@n}{{B@nEnAMfDd}{{Ad{B@n}}}}{{B@nBf}{{An{Dd}}}}{{B@nBfAMf}{{An{AMf}}}}{{B@nBfDd}{{An{Dd}}}}{{B@nEnDd}{{An{Dd}}}}3{{B@nEn}{{An{{Gb{AMfDd}}}}}}{{B@nd}BAh}{ce{}{}}{{B@nB@n}{{Ad{d}}}}{c{{Fl{e}}}{}{}}{{B@nBf}{{Ad{Dd}}}}{{B@nEn}{{Ad{{Gb{AMfDd}}}}}}{{B@nBf}{{Ad{Kl}}}}{{B@nBf}{{Ad{{Gb{EnAMfDd}}}}}}3{{BNfBf}{{Ad{En}}}}5{cMb{}}8{EnB@n}{{B@nAMfDd}{{An{Dd}}}}``````````````{{cf}b{}}0{BKn{{Ad{Ab}}}}0{{Bf{Ej{Eh}}AAd}{{Ad{Ab}}}}{{Bf{Ej{Eh}}AAd{An{BNh}}}{{Ad{Ab}}}}{{Abc}e{nJ`}{}}{{AbAb}c{}}10{{AbAb}{{Ad{Ab}}}}{{BKnDj}Dl}0{BKn{{Ad{Dl}}}}0`{{AbEn}Eh}{BKnAAf}00{AbDh}{BKn{{j{c}}}Bl}0{AbBKn}{BKn{{Ad{En}}}}0{Ab{{Ad{En}}}}{Ab{{Ad{E`}}}}{Ab{{Ad{AH`}}}}{{BKnAb}{{Ad{Ab}}}}00000{Ab{{Ad{F`}}}}{ce{}{}}00000{{BKnDd}{{Ad{Ab}}}}{{AbDd}{{Ad{Ab}}}}0{Ab{{Ad{AIl}}}}55{{AbAb}{{Ad{Ab}}}}{{Abc}{{Ad{Ab}}}A`}{BKnEf}{BKn{{Ej{Eh}}}}0{Ab{{Ej{Eh}}}}{AbAb}{H`H`}1{BKn{{AB`{BKn}}}}{{ce}b{}{}}0{Abb}{Ab{{Ad{Hh}}}}{{}Ab}{Enc{}}0{Abc{}}1111{{AbAb}c{}}{{Abc}e{nJ`}{}}10{{AbAb}{{Ad{Jb}}}}{Enb}00{BKnAb}0{BKnDd}0{{H`H`}d}{{AbAb}d}{{AbAb}{{Ad{F`}}}}{{AbBf}{{Ad{F`}}}}{{Abc}{{Ad{F`}}}ALl}{{AbBf}c{}}{{Abc}eALl{}}455{{ce}d{}{}}00{AbEn}{Ab{{Ad{Ab}}}}{{AbAb}{{Ad{Ab}}}}{{AbGhEn}{{Ad{Ab}}}}{Ab{{Ad{AHh}}}}{Ab{{Ad{AHj}}}}{BKn{{AHf{Kl}}}}0{{AbACj}{{Ad{Ab}}}}{{BKnF`}{{Ad{Ab}}}}{{AbF`d}{{Ad{Ab}}}}{{H`Fd}Ff}{{AbFd}Ff}0{AbDf}{cc{}}0{{{j{c}}}AbBl}1{{Bf{D`{Gh}}d}{{Ad{Ab}}}}{{Bf{D`{Gh}}Ddd}{{Ad{Ab}}}}{{BfEh}{{Ad{Ab}}}}{{Bf{Ej{Eh}}Dd}Ab}{g{{Fl{ic}}}{}{}{{Fn{c}{{B`{e}}}}}{}}{cAb{{Fb{}{{B`{{An{Kd}}}}}}}}{cAb{{Fb{}{{B`{Hb}}}}}}{cAb{{Fb{}{{B`{{An{Hd}}}}}}}}{cAb{{Fb{}{{B`{Bf}}}}}}{cAb{{Fb{}{{B`{Jd}}}}}}{cAb{{Fb{}{{B`{{An{d}}}}}}}}{cAb{{Fb{}{{B`{{An{Hb}}}}}}}}{cAb{{Fb{}{{B`{Jb}}}}}}3{cAb{{Fb{}{{B`{Hd}}}}}}0{cAb{{Fb{}{{B`{{An{Jb}}}}}}}}{cAb{{Fb{}{{B`{{An{Jn}}}}}}}}3{cAb{{Fb{}{{B`{Kd}}}}}}{cAb{{Fb{}{{B`{{An{Jd}}}}}}}}{cAb{{Fb{}{{B`{d}}}}}}<{cAb{{Fb{}{{B`{Df}}}}}}{cAb{{Fb{}{{B`{Jn}}}}}}204{{Bf{Ej{Jb}}}Ab}{{Bf{Ej{Jd}}}Ab}{{Bf{Ej{Hd}}}Ab}{{Bf{Ej{Jn}}}Ab}{{Bf{Ej{Kd}}}Ab}{{Bf{Ej{Hb}}}Ab}{{BfEnDd}Ab}{{AbEnEn}Ab}{{BKnEn}{{Ad{Gh}}}}{AbEn}{AbAl}{{BKnEn}{{An{Gl}}}}0{{BKnEnEn}{{An{Gl}}}}0{{BKnEn}Gh}0{{AbAb}{{Ad{F`}}}}{{AbBf}{{Ad{F`}}}}{{Abc}{{Ad{F`}}}ALl}02{{AbBf}c{}}{BKnd}{{H`c}bADl}{{Ab{An{En}}}Ab}{Ab{{Ad{ANj}}}}{Ab{{Ad{ANl}}}}{Ab{{Ad{ANn}}}}{Ab{{Ad{ANh}}}}{Ab{{Ad{Dl}}}}`{Ab{{Ad{Dh}}}}{{}En}00{ce{}{}}00{AbAOn}1{BA`Ab}{AbAb}=={Ab{{Ad{F`}}}}000{BKnF`}0{{}d}00{AbH`}{AbBNj}{BKnEn}{{BKnEn}Ab}0<{{AbBf}c{}}{{AbAb}{{Ad{F`}}}}{{Abc}{{Ad{F`}}}ALl}012{Ab{{Ad{{An{c}}}}}J`}{BKn{{Ad{Ab}}}}0{BKn{{An{Jb}}}}0=0011211{{AbAb}c{}}{{Abc}e{nJ`}{}}1099{BKn{{Ad{En}}}}0{BKnBf}{{Bfc}Ab{{Jl{{D`{{An{Jn}}}}}}}}{{Bfc}Ab{{Jl{{D`{Hb}}}}}}{{Bfc}Ab{{Jl{{D`{{An{Jd}}}}}}}}{{Bfc}Ab{{Jl{{D`{Jn}}}}}}{{Bfc}Ab{{Jl{{D`{{An{{Ej{Cn}}}}}}}}}}{{Bfc}Ab{{Jl{{D`{{An{Ab}}}}}}}}{{Bfc}Ab{{Jl{{D`{{AHf{{D`{Cn}}}}}}}}}}{{Bfc}Ab{{Jl{{D`{{An{Hd}}}}}}}}{{Bfc}Ab{{Jl{{D`{{An{Df}}}}}}}}{{Bfc}Ab{{Jl{{D`{{An{Kd}}}}}}}}{{Bfc}Ab{{Jl{{D`{Gh}}}}}}{{Bfc}Ab{{Jl{{D`{{AHf{Bf}}}}}}}}{{BfAb}Ab}{{Bfc}Ab{{Jl{{D`{{An{Hb}}}}}}}}{{Bfc}Ab{{Jl{{D`{Df}}}}}}{{Bfc}Ab{{Jl{{D`{d}}}}}}{{Bfc}Ab{{Jl{{D`{{An{{AHf{Bf}}}}}}}}}}{{Bfc}Ab{{Jl{{D`{{An{d}}}}}}}}{{Bfc}Ab{{Jl{{D`{{An{{AHf{{D`{Cn}}}}}}}}}}}}{{Bf{Jf{Jn}}}Ab}{{Bfc}Ab{{Jl{{D`{{Ej{Cn}}}}}}}}{{Bfc}Ab{{Jl{{D`{Kd}}}}}}{{Bfc}Ab{{Jl{{D`{{An{Bf}}}}}}}}{{Bfc}Ab{{Jl{{D`{Bf}}}}}}{{Bfc}Ab{{Jl{{D`{{An{Jb}}}}}}}}{{Bf{Jf{Jd}}}Ab}{{Bfc}Ab{{Jl{{D`{{D`{Cn}}}}}}}}{{Bfc}AbBA`}{{Bfc}Ab{{Jl{{D`{Ab}}}}}}{{Bfc}Ab{{Jl{{D`{Jd}}}}}}{{Bfc}Ab{{Jl{{D`{{An{{D`{Cn}}}}}}}}}}{{Bfc}Ab{{Jl{{D`{Hd}}}}}}{{Bf{Jf{Kd}}}Ab}{{Bf{Jf{Hd}}}Ab}{{Bfc}Ab{{Jl{{D`{Jb}}}}}}{{BfDd}Ab}{{BKnEnEn}Ab}{{BfEn}Ab}{BNj{{An{c}}}{}}{{Abc}{{Ad{F`}}}ALl}{{AbBf}{{Ad{F`}}}}{{AbAb}{{Ad{F`}}}}{{Abc}eALl{}}{{AbBf}c{}}2{Ab{{Ad{`}}}}{BKnEn}`{AbBNl}{Ab{{Ad{Ab}}}}{{BKnJbKj}{{Ad{Ab}}}}0{BKnAb}{{Abc}e{nJ`}{}}{{AbAb}c{}}1{{BKnBf}b}{{AbBf}Ab}{{Ab{D`{Jd}}}{{Ad{Ab}}}}5{H`H`}{{BKnC`Kn}{{Ad{Ab}}}}0{{AbJbdd{An{Hd}}}{{Ad{Ab}}}}{{AbEndd{An{Hd}}}{{Ad{Ab}}}}{{AbH`}b}{{BKnJd}Ab}{BKnb}0{Abb}{{Ab{An{Hd}}}Ab}{BNj{{Gb{En{An{En}}}}}}{{BKnJdEn}Ab}{{AbDj}{{Ad{Ab}}}}{{BKnDj}{{Ad{Ab}}}}0{{BKnCn}{{An{Jb}}}}0{{BKnCn}{{Ad{Ab}}}}0{Ab{{Ad{Ln}}}}{{AbEn}{{Ad{{AHf{Bf}}}}}}{{AbDd}{{Ad{Ab}}}}{{Abc}e{nJ`}{}}{{AbAb}c{}}01{Ab{{Ad{c}}}J`}{Ab{{Ad{Ab}}}}{{Ab{An{En}}}Ab}{{BKnDl}{{Ad{Ab}}}}{{BKn{D`{L`}}}{{Ad{Ab}}}}{{BKn{D`{L`}}}Ab}{{Ab{D`{L`}}d}Ab}{{AbDld}{{Ad{Ab}}}}{{BKnDl}Ab}{{Ab{D`{L`}}}Ab}{{AbDld}Ab}{{AbEnd}Eh}:{ce{}{}}0{Ab{{AHf{Ab}}}}{cDf{}}{{AbAb}{{Ad{Ab}}}}{c{{Fl{e}}}{}{}}0{{{Gb{BfEh}}}{{Ad{Ab}}}}{{{Gb{ALnEh}}}{{Ad{Ab}}}}2{{{Gb{ALn{Ej{Eh}}}}}{{Ad{Ab}}}}{{{Gb{Bf{Ej{Eh}}}}}{{Ad{Ab}}}}444{cMb{}}00{Ab{{Ad{ANd}}}}{Ab{{Ad{ALf}}}}{Ab{{Ad{ANf}}}}{Ab{{Ad{ANb}}}}{BKn{{Ad{Ab}}}}0{Ab{{Ad{Ab}}}}{BKn{{Ad{{j{c}}}}}Bl}`{{BKnCn}{{An{Jb}}}}0{{BKnCn}{{Ad{Ab}}}}0{ce{}{}}00{{AbBf}Ab}{{Abc}Ab{nJ`}}{{AbF`Ab}{{Ad{Ab}}}}````{{{BNn{}{{Bn{c}}}}Ab}c{}}{{BO`Ab}{{Ad{Ab}}}}{{{j{Af}}Ab}{{Ad{Ab}}}}0`2100210021002100``{{BGlAb}{{Ad{Ab}}}}{{{j{Ed}}Ab}{{Ad{Ab}}}}0{{BGlc}{{Ad{Ab}}}A`}{{{j{Ed}}c}{{Ad{Ab}}}A`}0```{{cf}b{}};;{BObBOb}{{ce}b{}{}}{{}BOb}{Enc{}}0{Enb}{{BObBOb}d}{{ce}d{}{}}00{{BObFd}Ff}{cc{}}{{BObc}bADl}{{}En}{ce{}{}}0{c{{Fl{e}}}{}{}}0{cMb{}}2``>{CdAb}033{CdCd}>1<<;754{AbCd}{{CdEh}b}65546{{CdEhe}c{}{{C`{Cd}{{Bn{c}}}}}}````````{{cf}b{}}9{{{Ej{AOn}}}{{Ad{AOn}}}}{c{{Ad{AOn}}}{{Fb{}{{B`{AOn}}}}}}{cAOn{{Fb{}{{B`{AOn}}}}}}{c{{An{AOn}}}{{Fb{}{{B`{AOn}}}}}}{{{j{c}}{j{e}}}{{Gb{{AHf{{j{c}}}}{AHf{{j{e}}}}}}}BlBl}{{{j{c}}{j{e}}{j{g}}}{{Gb{{AHf{{j{c}}}}{AHf{{j{e}}}}{AHf{{j{g}}}}}}}BlBlBl}{BOdd}{c{{Ad{Dd}}}{{Fb{}{{B`{Gh}}}}}}{c{{Ad{{Gb{DdEn}}}}}{{Fb{}{{B`{Gh}}}}}}`{ce{}{}}00000{{{BOf{ec}}}{{BOf{ec}}}Nl{Nl{Bd{}{{B`{c}}}}}}{{ce}b{}{}}{{{j{c}}{j{c}}}{{Gb{{AHf{{j{c}}}}{AHf{{j{c}}}}}}}Bl}{{AbAb}{{Gb{AbAb}}}}{BOde{}{{BOh{c}}}}{BOde{}{{BOj{c}}}}>={{BOdc}dBHl}{{{BOl{c}}}e{}{}}{Enc{}}{{{AGl{c}}}e{}{}}111011{Enb}00{cB@n{{Fb{}{{B`{Dd}}}}}}{c{{Ad{Dd}}}{{Fb{}{{B`{Dd}}}}}}{{AbBf}{{Ad{b}}}}{{{BOl{Ab}}{BOl{Ab}}}d}{{ce}d{}{}}00`{{BOdcg}{{An{c}}}{}{}{{Cf{ce}{{Bn{c}}}}}}{cc{}}00{g{{Fl{ic}}}{}{}{{Fn{c}{{B`{e}}}}}{}}{c{{AGl{{j{e}}}}}{{Fb{}{{B`{}}}}}l}{c{{AGl{F`}}}{{Fb{}{{B`{d}}}}}}{eBOj{}{{Fb{}{{B`{c}}}}}}21{c{{AGl{{j{e}}}}}{{Gd{}{{B`{}}}}}l}{c{{AGl{F`}}}{{Gf{}{{B`{d}}}}}}{c{{AGl{{j{e}}}}}{{Gf{}{{B`{}}}}}l}{{DdDd}{{An{Dd}}}}{{AJhAJh}AJh}{{AbAb}{{Ad{b}}}}{{{BOl{Ab}}c}bADl}{{}En}00{ce{}{}}00{{{AGl{c}}}c{}}1{BBl{{Ej{c}}}{}}{c{{Ej{{C@`{BOn}}}}}{}}{c{{Ej{Df}}}{}}{B@jGh}{c{{AGl{c}}}{}}{{eEn}{{BOf{ec}}}{}{{Bd{}{{B`{c}}}}}}{{{BOf{ec}}}An{}{{Bd{}{{B`{c}}}}}}{{{BOf{ec}}}An{}{{Bd{}{{B`{c}}}}El}}`{{{BOf{ec}}}{{Gb{En{An{En}}}}}{}{{Bd{}{{B`{c}}}}}}{{{D`{c}}JdEn}{{D`{c}}}{}}{{{j{c}}En}{{Ad{{Ej{{j{c}}}}}}}Bl}{{AOnEnd}{{Ad{{Ej{AOn}}}}}}={{BOdEn}{{BOf{BOdc}}}{}}{c{{Fl{e}}}{}{}}00{{DdDd}{{Ad{Dd}}}}111{cMb{}}00{ce{}{}}00{{Dde}c{}{{C`{Cd}{{Bn{c}}}}}}{{{D`{{Ej{c}}}}}{{Gb{En{Ej{En}}}}}{}}{AOn{{`{{Bd{}{{B`{AOn}}}}}}}}{{{D`{c}}}{{AGf{L`}}}{{Jl{{D`{Md}}}}HjHl}}{{{D`{e}}}{{Ej{c}}}{HjHlCb}{{Jl{{D`{c}}}}}}{Ab{{Ej{Ab}}}}","D":"IHd","p":[[1,"unit"],[1,"bool"],[5,"Private",4906],[5,"ListType",1228],[5,"ChunkedArray",39],[10,"PolarsNumericType",1228],[10,"Num",4907],[10,"ToPrimitive",4908],[5,"Series",4328],[8,"PolarsResult",3619],[10,"NumOpsDispatchInner",4709],[6,"GroupsProxy",3221],[5,"BooleanType",1228],[5,"Settings",39],[6,"Option",4909],[17,"Item"],[8,"ArrayBox",4768],[10,"Iterator",4910],[1,"str"],[17,"IsNested"],[5,"FalseT",1228],[10,"PolarsDataType",1228],[17,"Output"],[10,"Fn",4911],[10,"Copy",4912],[5,"UnstableSeries",4768],[10,"FnMut",4911],[5,"Float64Type",1228],[5,"Float32Type",1228],[5,"BinaryType",1228],[1,"u8"],[1,"slice"],[5,"StringType",1228],[6,"DataType",1228],[5,"String",4913],[8,"ListChunked",1228],[5,"SortOptions",1146],[8,"IdxCa",1228],[5,"SortMultipleOptions",1146],[8,"BinaryChunked",1228],[10,"PolarsIntegerType",1228],[10,"NumOpsDispatchCheckedInner",4734],[8,"ChunkIdIter",39],[8,"ArrayRef",3619],[5,"Vec",4914],[10,"DoubleEndedIterator",4915],[1,"usize"],[8,"BooleanChunked",1228],[10,"IntoIterator",4916],[5,"Formatter",4917],[8,"Result",4917],[10,"Array",4918],[17,"Array"],[6,"Result",4919],[10,"FallibleIterator",4920],[5,"Bitmap",4921],[1,"tuple"],[10,"IntoParallelIterator",4922],[10,"TrustedLen",4923],[6,"AnyValue",1228],[5,"ObjectType",1228],[10,"PolarsObjectSafe",817],[10,"PolarsObject",817],[6,"IsSorted",4328],[1,"f32"],[1,"u64"],[5,"Int128Type",1228],[8,"DecimalChunked",1228],[10,"Send",4912],[10,"Sync",4912],[10,"ExactSizeIterator",4924],[10,"PolarsFloatType",1228],[10,"PolarsIterator",778],[5,"Iter",4925],[5,"IterNames",4925],[5,"Iter",4926],[1,"fn"],[5,"Map",4927],[6,"ChunkedArrayLayout",39],[10,"NumCast",4908],[1,"f64"],[1,"i64"],[5,"Range",4928],[5,"Int64Type",1228],[5,"UInt64Type",1228],[10,"AsRef",4929],[1,"i32"],[5,"Int32Type",1228],[5,"UInt32Type",1228],[1,"u32"],[10,"ParallelIterator",4922],[10,"IndexedParallelIterator",4922],[6,"QuantileInterpolOptions",3619],[5,"Field",1228],[5,"RollingOptionsFixedWindow",3619],[8,"IdxSize",3619],[10,"Sized",4912],[17,"HasViews"],[5,"RandomState",4930],[5,"BytesHash",4931],[8,"ArrayView1",4932],[8,"Array2",4932],[8,"StringChunked",1228],[6,"Either",4933],[5,"TypeId",4934],[5,"NullableIdxSize",3619],[10,"FnOnce",4911],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",476],[10,"ChunkedBuilder",504],[5,"BinViewChunkedBuilder",504],[10,"ViewType",4935],[5,"BooleanChunkedBuilder",504],[5,"NullChunkedBuilder",504],[5,"PrimitiveChunkedBuilder",504],[10,"Clone",4936],[8,"StringChunkedBuilder",504],[8,"BinaryChunkedBuilder",504],[10,"NewChunkedArray",504],[5,"AnonymousListBuilder",608],[5,"AnonymousOwnedListBuilder",608],[5,"ListBooleanChunkedBuilder",608],[5,"ListPrimitiveChunkedBuilder",608],[10,"ListBuilderTrait",608],[5,"ListStringChunkedBuilder",608],[5,"ListBinaryChunkedBuilder",608],[5,"ListNullChunkedBuilder",608],[5,"Box",4937],[10,"ChunkedCollectInferIterExt",762],[10,"ChunkedCollectIterExt",762],[10,"Canonical",776],[5,"BooleanArray",4938],[5,"BoolIterNoNull",778],[5,"SomeIterator",778],[5,"ObjectArray",817],[6,"ArrowDataType",1228],[10,"Any",4934],[10,"Debug",4917],[8,"ObjectValueIter",817],[5,"BitmapIter",4939],[6,"ZipValidity",4940],[5,"Arc",3619],[5,"ObjectChunkedBuilder",888],[8,"ObjectChunked",1228],[10,"AnonymousObjectBuilder",911],[5,"ObjectRegistry",911],[8,"ObjectConverter",911],[8,"BuilderConstructor",911],[17,"FuncRet"],[10,"ChunkApply",939],[10,"ChunkApplyKernel",939],[10,"ChunkSort",939],[10,"ChunkUnique",939],[10,"ChunkCast",939],[6,"FillNullStrategy",939],[10,"ChunkCompare",939],[10,"ChunkExplode",939],[5,"OffsetsBuffer",4941],[10,"ChunkFillNullValue",939],[10,"ChunkFilter",939],[10,"ChunkFull",939],[10,"ChunkFullNull",939],[10,"ChunkAnyValue",939],[10,"Hasher",4942],[10,"IsFirstDistinct",939],[10,"IsLastDistinct",939],[10,"ChunkAgg",939],[10,"ChunkQuantile",939],[10,"ChunkExpandAtIndex",939],[10,"ChunkReverse",939],[10,"ChunkRollApply",939],[10,"ChunkSet",939],[10,"ChunkShift",939],[10,"ChunkShiftFill",939],[10,"ChunkVar",939],[10,"ChunkTake",939],[10,"ChunkTakeUnchecked",939],[10,"ChunkBytes",939],[10,"ChunkZip",939],[10,"BinaryFnMut",1062],[10,"StaticArray",1228],[10,"TernaryFnMut",1062],[10,"Error",4943],[10,"UnaryFnMut",1062],[5,"PrimitiveArray",4944],[6,"SearchSortedSide",1102],[10,"SlicedArray",3619],[5,"NoNull",4792],[5,"RowsEncoded",4945],[8,"BinaryOffsetChunked",1228],[5,"NaiveDateTime",4946],[6,"PolarsError",3619],[6,"Cow",4947],[8,"Float32Chunked",1228],[8,"Float64Chunked",1228],[10,"ArrayFromIter",1228],[10,"ArrayFromIterDtype",1228],[10,"AsRefDataType",1228],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",4948],[10,"From",4929],[5,"CategoricalChunked",2600],[10,"CategoricalMergeOperation",2600],[10,"LogicalType",1228],[5,"Logical",1228],[5,"OwnedObject",1228],[6,"UnknownKind",1228],[6,"TimeUnit",1228],[5,"UInt8Type",1228],[5,"UInt16Type",1228],[5,"Int8Type",1228],[5,"Int16Type",1228],[5,"DateType",1228],[5,"TimeType",1228],[5,"BinaryOffsetType",1228],[5,"DecimalType",1228],[5,"DatetimeType",1228],[5,"DurationType",1228],[5,"CategoricalType",1228],[6,"ArrowTimeUnit",1228],[10,"ArrayCollectIterExt",3619],[8,"Utf8ViewArray",4935],[8,"UInt32Chunked",1228],[5,"Error",4917],[10,"Into",4929],[10,"NumericNative",1228],[5,"ArrowField",3619],[6,"PrimitiveType",4949],[6,"IntegerType",4950],[10,"Borrow",4951],[8,"String",4952],[10,"NoOption",4953],[10,"GetAnyValue",1228],[8,"Int128Chunked",1228],[6,"Ordering",4954],[6,"PhysicalType",4950],[8,"UInt8Chunked",1228],[8,"UInt16Chunked",1228],[8,"UInt64Chunked",1228],[8,"Int8Chunked",1228],[8,"Int16Chunked",1228],[8,"Int32Chunked",1228],[8,"Int64Chunked",1228],[8,"PlIdHashMap",1228],[5,"CategoricalChunkedBuilder",2600],[5,"GlobalRevMapMerger",2600],[6,"RevMapping",2739],[6,"CategoricalOrdering",2739],[5,"CatIter",2600],[1,"u128"],[5,"DataFrame",2928],[5,"StringCacheHolder",2791],[5,"ErrString",2820],[6,"PolarsWarning",2820],[10,"Display",4917],[6,"FloatFmt",2898],[1,"i128"],[1,"char"],[5,"Schema",4256],[10,"IntoSeries",4328],[6,"NullStrategy",2928],[6,"UniqueKeepStrategy",2928],[8,"PlHashSet",1228],[5,"ArrowSchema",3619],[5,"Row",3475],[5,"GroupBy",3221],[5,"RangeFrom",4928],[5,"RangeFull",4928],[5,"RangeTo",4928],[5,"RangeInclusive",4928],[5,"RangeToInclusive",4928],[5,"RecordBatchIter",2928],[5,"PhysRecordBatchIter",2928],[10,"IntoVec",4792],[5,"MeltArgs",3192],[10,"RangeBounds",4928],[8,"SchemaRef",4256],[6,"IndexOrder",3619],[5,"StructArray",4955],[8,"ArrowChunk",2928],[5,"GroupsIdx",3221],[8,"IdxVec",4956],[6,"GroupByMethod",3221],[5,"SlicedGroups",3221],[5,"GroupsProxyParIter",3221],[10,"UnindexedConsumer",4957],[6,"GroupsIndicator",3221],[8,"IdxItem",3221],[10,"IntoGroupsProxy",3221],[5,"Copied",4958],[5,"Zip",4959],[5,"GroupsProxyIter",3221],[8,"GroupsSlice",3221],[1,"array"],[8,"DynArgs",3619],[10,"IsFloat",4960],[10,"NativeType",4961],[10,"AggList",3459],[10,"TakeExtremum",3459],[10,"PhysicalAggExpr",3472],[6,"AnyValueBuffer",3475],[6,"AnyValueBufferTrusted",3475],[5,"BinaryArray",4962],[5,"IdHasher",3571],[5,"IdxHash",3571],[5,"HashMap",4963],[10,"BuildHasher",4942],[10,"VecHash",3571],[10,"Allocator",4964],[5,"BorrowedFd",4965],[10,"AsFd",4965],[10,"AsRawFd",4966],[20,"MaybeUninit",4967],[10,"NumOpsDispatchChecked",3619],[5,"ChunkId",3619],[5,"RollingVarParams",3619],[5,"RollingQuantileParams",3619],[6,"NonExistent",3619],[10,"Ord",4954],[10,"Default",4968],[5,"Weak",4969],[10,"PartialEq",4954],[10,"Scalar",4970],[5,"File",4971],[5,"Error",4972],[6,"Error",4973],[5,"Utf8Error",4974],[5,"TryReserveError",4975],[5,"CString",4976],[5,"CStr",4977],[10,"ToOwned",4947],[5,"PathBuf",4978],[5,"Path",4978],[5,"OsStr",4979],[5,"OsString",4979],[1,"never"],[10,"FromData",4179],[5,"Buffer",4980],[10,"FromDataUtf8",4179],[10,"FromDataBinary",4179],[5,"ListArray",4981],[6,"Ambiguous",3619],[10,"NamedFromOwned",3619],[10,"PartialOrd",4954],[10,"PolarsArray",3619],[10,"Hash",4942],[10,"SeriesTrait",4328],[10,"ChunkAggSeries",3619],[10,"QuantileAggSeries",3619],[10,"IndexToUsize",3619],[10,"NamedFrom",3619],[5,"Pin",4982],[5,"Request",4943],[5,"BorrowedCursor",4983],[5,"IoSliceMut",4984],[6,"SeekFrom",4984],[10,"VarAggSeries",3619],[5,"AllocError",4964],[5,"BTreeMap",4985],[5,"IoSlice",4984],[5,"AnonymousBuilder",4185],[5,"Offsets",4941],[5,"MutableNullArray",4208],[5,"MutableBitmap",4986],[5,"Utf8Array",4987],[8,"ArrowSchemaRef",4988],[10,"IndexOfSchema",4256],[8,"Metadata",4989],[5,"SeriesIter",4328],[8,"SeriesPhysIter",4328],[10,"LhsNumOps",4709],[10,"NumOpsDispatch",4709],[6,"NullBehavior",4742],[10,"CustomIterTools",4792],[5,"TrustMyLength",4792],[10,"FromIteratorReversed",4990],[10,"FromTrustedLenIterator",4792],[5,"Wrap",4792],[5,"LazyCompact",4991],[5,"SmartString",4992],[8,"FillNullLimit",939],[10,"InitHashMaps",1228],[10,"InitHashMaps2",1228],[5,"TrueT",1228],[15,"IO",2883],[15,"Context",2883],[15,"Count",3456],[15,"Slice",3457],[10,"ListFromIter",3619],[10,"Utf8FromIter",4251],[10,"BinaryFromIter",4251]],"b":[[53,"impl-Add-for-ChunkedArray%3CT%3E"],[54,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[55,"impl-Add-for-%26ChunkedArray%3CT%3E"],[56,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[70,"impl-ChunkedArray%3CFloat64Type%3E"],[71,"impl-ChunkedArray%3CFloat32Type%3E"],[76,"impl-ChunkedArray%3CBinaryType%3E"],[77,"impl-ChunkedArray%3CStringType%3E"],[78,"impl-ChunkedArray%3CT%3E"],[99,"impl-Settings"],[100,"impl-Flags-for-Settings"],[140,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[141,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[142,"impl-Div-for-%26ChunkedArray%3CT%3E"],[143,"impl-Div-for-ChunkedArray%3CT%3E"],[152,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[153,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[154,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[155,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[162,"impl-Debug-for-ChunkedArray%3CT%3E"],[163,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[164,"impl-Debug-for-Settings"],[165,"impl-LowerHex-for-Settings"],[166,"impl-Binary-for-Settings"],[167,"impl-Octal-for-Settings"],[168,"impl-UpperHex-for-Settings"],[176,"impl-Settings"],[177,"impl-Flags-for-Settings"],[185,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[186,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[187,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[190,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[191,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[217,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[218,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[219,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[220,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[259,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[260,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[261,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[262,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[263,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[264,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[270,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[271,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[272,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[273,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[274,"impl-ChunkedArray%3CBooleanType%3E"],[275,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[277,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[278,"impl-ChunkedArray%3CBooleanType%3E"],[281,"impl-ChunkedArray%3CBooleanType%3E"],[282,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[285,"impl-ChunkedArray%3CT%3E"],[286,"impl-ChunkedArray%3CBooleanType%3E"],[287,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[288,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[289,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[290,"impl-Mul-for-ChunkedArray%3CT%3E"],[294,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[295,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[296,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[297,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[298,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[299,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[300,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[301,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[302,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[303,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[304,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[305,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[306,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[307,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[308,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[309,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[310,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[311,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[312,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[313,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[314,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[315,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[323,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[324,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[325,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[326,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[330,"impl-ChunkedArray%3CStringType%3E"],[331,"impl-ChunkedArray%3CListType%3E"],[332,"impl-ChunkedArray%3CStringType%3E"],[333,"impl-ChunkedArray%3CListType%3E"],[344,"impl-Rem-for-ChunkedArray%3CT%3E"],[345,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[346,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[347,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[373,"impl-Sub-for-ChunkedArray%3CT%3E"],[374,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[375,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[376,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[380,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[381,"impl-ChunkedArray%3CBooleanType%3E"],[385,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[386,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[387,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[388,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[394,"impl-ChunkedArray%3CT%3E"],[395,"impl-ChunkedArray%3CListType%3E"],[402,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[403,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[404,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[405,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[406,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[407,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[438,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[439,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[440,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[441,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[442,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[443,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[444,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[445,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[446,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[447,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[448,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[449,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[450,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[451,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[452,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[453,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[454,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[455,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[456,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[457,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[458,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[459,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[460,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[461,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[462,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[463,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[464,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[465,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[466,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[467,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[468,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[469,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[470,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[471,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[472,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[473,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[556,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[557,"impl-BinViewChunkedBuilder%3Cstr%3E"],[822,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[823,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[855,"impl-ObjectArray%3CT%3E"],[856,"impl-StaticArray-for-ObjectArray%3CT%3E"],[868,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[869,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[879,"impl-StaticArray-for-ObjectArray%3CT%3E"],[880,"impl-ObjectArray%3CT%3E"],[882,"impl-ObjectArray%3CT%3E"],[883,"impl-StaticArray-for-ObjectArray%3CT%3E"],[885,"impl-Array-for-ObjectArray%3CT%3E"],[886,"impl-ObjectArray%3CT%3E"],[889,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[890,"impl-ObjectChunkedBuilder%3CT%3E"],[892,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[893,"impl-ObjectChunkedBuilder%3CT%3E"],[1458,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1459,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1460,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1461,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1462,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1463,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1464,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1465,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1540,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1541,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1542,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1543,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1544,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[1545,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[1827,"impl-PartialEq-for-DataType"],[1828,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[1836,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[1837,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[1838,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1839,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[1842,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[1843,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[1844,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[1845,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1884,"impl-Debug-for-AnyValue%3C\'a%3E"],[1885,"impl-Display-for-AnyValue%3C\'_%3E"],[1887,"impl-Debug-for-DataType"],[1888,"impl-Display-for-DataType"],[1890,"impl-Display-for-TimeUnit"],[1891,"impl-Debug-for-TimeUnit"],[1902,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[1904,"impl-From%3CK%3E-for-AnyValue%3C\'_%3E"],[1906,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[1907,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[1908,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[1911,"impl-From%3C%26Field%3E-for-Field"],[1912,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[1936,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[1937,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[1940,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[1941,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[1942,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[1944,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[1945,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[1946,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1947,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[1953,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[1954,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[1956,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[1957,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[1958,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[1959,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1960,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[1961,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[1969,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[1970,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[1971,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[1972,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[1973,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[1974,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2062,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2063,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2064,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2065,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2068,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2069,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2070,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2071,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2197,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2198,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2199,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2200,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2203,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2204,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2205,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2206,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2240,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2241,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2242,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2243,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2244,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2245,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2246,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2247,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2248,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2249,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2260,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2261,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2264,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2265,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2266,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2267,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2270,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2271,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2272,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2273,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2353,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2354,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2355,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[2356,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2645,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2646,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2647,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2648,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2649,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2650,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2665,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2666,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2667,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2668,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2669,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2670,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2685,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2686,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2687,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2688,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2689,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2690,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2701,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2702,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2703,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2704,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2705,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2706,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2857,"impl-Debug-for-ErrString"],[2858,"impl-Display-for-ErrString"],[2950,"impl-Add%3C%26Series%3E-for-DataFrame"],[2951,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[2952,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[2990,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[2991,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[2992,"impl-Div%3C%26Series%3E-for-DataFrame"],[3022,"impl-Debug-for-DataFrame"],[3023,"impl-Display-for-DataFrame"],[3028,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3029,"impl-From%3C%26Schema%3E-for-DataFrame"],[3057,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3058,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3059,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3060,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3061,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3062,"impl-Index%3Cusize%3E-for-DataFrame"],[3063,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3064,"impl-Index%3C%26str%3E-for-DataFrame"],[3089,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3090,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3091,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3106,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3107,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3108,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3140,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3141,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3142,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3162,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3163,"impl-TryFrom%3C(RecordBatch%3CBox%3Cdyn+Array%3E%3E,+%26%5BField%5D)%3E-for-DataFrame"],[3333,"impl-Display-for-GroupByMethod"],[3334,"impl-Debug-for-GroupByMethod"],[3341,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3342,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3343,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3377,"impl-IntoIterator-for-GroupsIdx"],[3378,"impl-IntoIterator-for-%26GroupsIdx"],[3380,"impl-IntoParallelIterator-for-GroupsIdx"],[3381,"impl-IntoParallelIterator-for-%26GroupsIdx"],[3740,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[3741,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[3865,"impl-PartialEq-for-Arc%3CT,+A%3E"],[3866,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[3867,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[3899,"impl-Display-for-PolarsError"],[3900,"impl-Debug-for-PolarsError"],[3903,"impl-Pointer-for-Arc%3CT,+A%3E"],[3904,"impl-Debug-for-Arc%3CT,+A%3E"],[3905,"impl-Display-for-Arc%3CT,+A%3E"],[3914,"impl-From%3CError%3E-for-PolarsError"],[3915,"impl-From%3CError%3E-for-PolarsError"],[3916,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3917,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3922,"impl-From%3CT%3E-for-Arc%3CT%3E"],[3923,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[3924,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[3925,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[3926,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[3927,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[3928,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[3929,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[3930,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[3931,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[3932,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[3933,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[3934,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[3935,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[3936,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[4274,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[4275,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[4276,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[4277,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[4279,"impl-From%3CArrowSchema%3E-for-Schema"],[4280,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[4348,"impl-Add%3CT%3E-for-%26Series"],[4349,"impl-Add-for-%26Series"],[4350,"impl-Add%3CT%3E-for-Series"],[4351,"impl-Add-for-Series"],[4412,"impl-Div-for-%26Series"],[4413,"impl-Div%3CT%3E-for-%26Series"],[4414,"impl-Div-for-Series"],[4415,"impl-Div%3CT%3E-for-Series"],[4426,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4427,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4428,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4429,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4430,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4431,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4449,"impl-Debug-for-Series"],[4450,"impl-Display-for-Series"],[4461,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[4462,"impl-FromIterator%3Cf32%3E-for-Series"],[4463,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[4464,"impl-FromIterator%3C%26str%3E-for-Series"],[4465,"impl-FromIterator%3Ci64%3E-for-Series"],[4466,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[4467,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[4468,"impl-FromIterator%3C%26f64%3E-for-Series"],[4469,"impl-FromIterator%3C%26i64%3E-for-Series"],[4470,"impl-FromIterator%3C%26u64%3E-for-Series"],[4471,"impl-FromIterator%3Cu64%3E-for-Series"],[4472,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[4473,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[4474,"impl-FromIterator%3Cf64%3E-for-Series"],[4475,"impl-FromIterator%3C%26u32%3E-for-Series"],[4476,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[4477,"impl-FromIterator%3C%26bool%3E-for-Series"],[4478,"impl-FromIterator%3C%26f32%3E-for-Series"],[4479,"impl-FromIterator%3CString%3E-for-Series"],[4480,"impl-FromIterator%3Ci32%3E-for-Series"],[4481,"impl-FromIterator%3Cbool%3E-for-Series"],[4482,"impl-FromIterator%3C%26i32%3E-for-Series"],[4483,"impl-FromIterator%3Cu32%3E-for-Series"],[4484,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[4485,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[4486,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[4487,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[4488,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[4489,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[4501,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4502,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4503,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4504,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4505,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4506,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4544,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4545,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4546,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4547,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4548,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4549,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4563,"impl-Mul-for-%26Series"],[4564,"impl-Mul%3CT%3E-for-Series"],[4565,"impl-Mul-for-Series"],[4566,"impl-Mul%3CT%3E-for-%26Series"],[4572,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[4573,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[4574,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[4575,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[4576,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[4577,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[4578,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[4579,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[4580,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[4581,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[4582,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[4583,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[4584,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[4585,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[4586,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[4587,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[4588,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[4589,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[4590,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[4591,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[4592,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[4593,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[4594,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[4595,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[4596,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[4597,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[4598,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[4599,"impl-NamedFrom%3CT,+T%3E-for-Series"],[4600,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[4601,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[4602,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[4603,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[4604,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[4605,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[4606,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[4611,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4612,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4613,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4614,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4615,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4616,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4625,"impl-Rem%3CT%3E-for-%26Series"],[4626,"impl-Rem-for-%26Series"],[4627,"impl-Rem%3CT%3E-for-Series"],[4655,"impl-Sub%3CT%3E-for-%26Series"],[4656,"impl-Sub-for-Series"],[4657,"impl-Sub-for-%26Series"],[4658,"impl-Sub%3CT%3E-for-Series"],[4679,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[4680,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[4682,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[4683,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[4852,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[4853,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[4855,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[4856,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[4858,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[4859,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"]],"c":"OjAAAAEAAAAAAAwAEAAAALoMAQ0+DUENQg1DDUQNRQ1KDU0NUg1TDXgN","e":"OzAAAAEAAGgO4wEAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAEAIQAHACoAEQBEAAAARwACAEsABABTAAMAWAAAAFoABABhAAAAZQABAGkABgBxAAAAcwACAHkABAB/AAAAhAAHAI0ACACYAAQAnwABAKIACQCtAAAAsgAAALQAAQC4AAQAvgACAMQAAwDKAAMAzwADANYAAADYAAUA4AADAOsABQD0AAMA+wABAAABAQADAQYADwEOACABBQAnARkARAEDAEkBAABLAQQAUQEBAFcBAABZAQQAYAEAAGUBAgBpAQEAbQECAHIBBwB8AQMAhwEBAI0BAQCTAQgAnQEKAKkBAACrAQAArQEFALUBAAC3ASMA3AEpAAoCAgAQAiMAOgIFAEQCAABGAiYAbwJMAMMCDADXAjMADgMJABoDAQAeAwEAIQMSADYDEwBLAwcAVAMAAFYDAABZAwIAXgMOAG4DAABwAwAAcwMDAHgDAgB8AwEAfwMHAIgDAACKAwUAkgMBAJUDAACXAwEAmgMDAJ8DAwCkAwIAqAMDAK4DAACxAwAAuQMAAL4DAADBAwEAxgMBAMkDAADMAwAA1gMAAN8DAgDkAwUA7AMCAPIDAAD0AwAA9gMBAPwDAQD/AwEABgQBAAwEAAAPBAAAEgQAABQEAAAWBAAAGAQAAB0EBAAkBAEAJwQHADAEAgA2BAAAOAQDAD0EAQBABAUATAQVAGMEAQBnBAQAbQQDAHQEBgB+BA8AkAQMAJ8EBACwBAkAxQQNANUEAgDZBAUA4QQAAOMEDADzBAAA9QQAAPoEAQD9BAAA/wQCAAMFAAAFBQAACAUAAAsFAAANBQEAEAUAABIFAgAWBQwAJAUAACYFAQApBQAAKwUBAC4FAAAwBQEAMwUAADUFAQA4BQAAPAUAAEAFAQBEBQAARwUAAEkFAABLBQMAUAUAAFMFBwBcBQEAXwUEAGUFAQBpBQAAawUAAHAFAgB0BQEAdwUAAHkFAQB8BQAAfgUBAIEFAACDBQEAhgUAAIgFAQCLBQAAjQUAAJAFOgDRBQQA2AUJAOQFBADqBQgA9AUAAPYFqQChBgcAqgZzAB8HAAAhB0YAbwcAAHEHAABzBwIAeAcCAJEHAQCUBxcAsAcjANYHBgDfBx4ABAg9AEQIAABnCAkAcwgAAHUIAQB4CAEAewgAAIAIBQCHCAAAiggCAI8IIQCyCAkAvQgNAMwIHADqCAYA8ggaAA4JFQAlCQ0AOAkAADoJAAA/CRwAXgkCAGIJTgCyCSkA3QlKACkKBAAvCgEAMgoCADYKAwA7CiMAZgoCAGoKCQB4CgMAfQoXAJcKAQCaCgQAoAoNAK8KBQC2CgAAuAoVAM8KAQDVCgIA2goBAN4KCQDpCgQA7woBAPQKAAD2CgIA+goBAP0KAAD/CgEABQsEAAsLBAARCw4AIQsKAC0LAAAvCwIANAsEADoLJABgCwUAZwsJAHILAAB1CwAAeAsKAIQLBQCQCxAAowsSALcLAAC+CwEAwgsCAMYLAADICwAAzQsDANULAQDYCwAA5wsAAOoLAQDyCwwABQwBABIMAgAZDAEAIwwCACsMAAAuDAAANAwAAD0MAQBADAAAQwwEAE4MBABWDAYAXwwJAGoMAABuDAQAegwNAIkMAgCODAoAmgwBAJ0MAwCiDAMApwwJALIMBwC7DAEAvgwYANgMKAACDQYADg0CABINAAAVDQMAGw0AACANBwAwDQ0APw0BAEYNAwBLDQEATw0CAFQNAABWDR8AeQ0MAIgNBQCPDQcAmA0WALENCwC+DQ4Azg0BANINAwDZDQYA4w0OAPQNAQD3DREACw4EABMOBQAbDgkAJg4CACsOBwA0DgsAQQ4DAEYOFgBeDggAaA4FAG8OFACHDhAAmQ4AAJsOAQCfDhwAvg4CAMIOEgDWDgYA4A4BAOUOIgALDwIADw8KABsPHAA6DxQAUA8AAGMPAABpDwAAbg8AAHEPAAB4DwAAew8AAIAPAQCDDwYAjA8RAK0PAwCyDwIAtg8BALkPAQDUDwIA2g8EAOEPAADkDwcA7g8AAPAPAQD1Dy0ALBAMADoQAAA8EAwAThAJAFoQBgBiEAAAZBAcAIIQAACEEAsAkRAAAJMQAQCcEAQAoxAFAKoQDAC4EAMAwhABAMUQAQDJEAEA2xAAAN0QAADfEAAA4xADAOkQBADvEAMA9BAEAP0QAwAGEQAADBECABQRBQAbEQYAJREDAC0RAgAxEQEANREPAEkRAQBMEQMAUxECAGERAwBnEQAAaxEAAG0RHgCPEQAAlxECAJsRAACdEQAAoxEBAKYRAgCsEQMAuBEDAMERAADDEQEAxhEAAMwRAADUEQMA3REJAOgRFwACEgMABxIBAAwSAQASEgIAFxIAABkSAAAdEgEAIxIBACcSAQAuEgAAMBIDAEESAQBEEg4AWhIBAGASAgBkEgAAZhIaAIQSAgCJEg4AmRIBAJwSBQCjEgoArxIAALESAACzEgQAuRIEAL8SBADGEgAAyRIAAMwSCADWEgIA2xIMAOoSBgD0EggA/hIFAAcTDwAYEwIAHBMIACYTBAA="}],\
["polars_io",{"t":"KFFKKKNNECNNNNNNNNCMCNNNNNNNNNONNNNNNNNMMMNNNNNNNNNNCCCOCMMMOCCCCCONNNNNNNNNNCNNGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNOHNNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNCONONNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFFGGFFPPPGFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOHNONNNNNNNNNNNNNNNNNNHNOONNNNNNNNOONONOOONNNNOONNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFGFFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKPGNNNNNNNNNNNNNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNOONNNNHONNNNNNNNNNNNNNOOOOOONONNNNNNNNONNPFPPGFFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNFPFPFPPGFFIPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNKFNNNNNNNNHNNMNNNHNNHFFKKHNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNKKEMMMMNNNJJJJHHHHHHHH","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriterFactory","__clone_box","__clone_box","async_glob","avro","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cloud","create_writer","csv","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","enabled","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","finish","finish","fmt","fmt","from","from","hash","hash","init","init","into","into","ipc","json","mmap","name","ndjson","new","new","next_record_batch","offset","parquet","partition","pl_async","predicates","prelude","schema","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","utils","vzip","vzip","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","Deflate","Snappy","Snappy","__clone_box","arrow_schema","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","hash","init","init","init","into","into","into","new","new","schema","set_rechunk","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","PolarsObjectStore","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bucket","build_object_store","clone","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","execute","expansion","flush","fmt","fmt","from","from","from","from_url","get","get_range","get_ranges","glob","head","init","init","init","into","into","into","new","new","new","new_with_object_store","options","prefix","queue","scheme","sync_update","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write","write_varint","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","Bucket","Checksum","Client","Client","Client","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","DisableTagging","Encryption","Endpoint","Endpoint","FederatedTokenFile","File","Gcp","GoogleConfigKey","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","SkipSignature","Token","Token","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","__clone_box","__clone_box","__clone_box","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_aws","build_azure","build_gcp","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_str","from_str","from_str","from_untyped_config","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","max_retries","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_aws","with_azure","with_gcp","read","write","AllColumns","AllColumnsSingle","BatchedCsvReaderMmap","BatchedCsvReaderRead","CommentPrefix","CsvEncoding","CsvReader","CsvReaderOptions","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","OwnedBatchedCsvReaderMmap","Single","Utf8","__clone_box","__clone_box","__clone_box","__clone_box","_with_comment_prefix","batched_borrowed_mmap","batched_borrowed_read","batched_mmap","batched_read","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","comment_prefix","count_rows","decimal_comma","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encoding","eol_char","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_path","has_header","has_header","hash","hash","hash","hash","ignore_errors","infer_file_schema","infer_schema","infer_schema_length","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","is_compressed","low_memory","low_memory","n_threads","new","new_from_str","new_multi","new_single","next_batches","next_batches","next_batches","next_batches","null_values","quote_char","raise_if_empty","raise_if_empty","sample_size","schema","schema_overwrite","separator","serialize","serialize","serialize","serialize","skip_rows","skip_rows_after_header","to_owned","to_owned","to_owned","to_owned","truncate_ragged_lines","truncate_ragged_lines","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_parse_dates","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtypes","with_dtypes_slice","with_encoding","with_end_of_line_char","with_ignore_errors","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_options","with_path","with_predicate","with_projection","with_quote_char","with_rechunk","with_row_index","with_schema","with_separator","with_skip_rows","with_skip_rows_after_header","with_try_parse_dates","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","__clone_box","__clone_box","batch_size","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","date_format","datetime_format","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","float_precision","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","include_bom","include_bom","include_header","include_header","init","init","init","init","init","into","into","into","into","into","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","serialize","serialize","serialize_options","time_format","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","LZ4","ZSTD","__clone_box","__clone_box","__clone_box","__clone_box","arrow_schema","batched","batched_async","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compression","count_rows","create_writer","create_writer","data","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","extension","finish","finish","finish","finish","finish","finish_with_scan_ops","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_uri","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","maintain_order","memory_map","memory_mapped","metadata","new","new","new","new","new","new","new_async","schema","schema","serialize","serialize","serialize","set_rechunk","set_rechunk","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_columns","with_columns","with_compression","with_compression","with_compression","with_compression","with_extension","with_extension","with_n_rows","with_n_rows","with_pl_flavor","with_pl_flavor","with_predicate","with_projection","with_projection","with_projection","with_row_index","with_row_index","with_row_index","with_row_limit","write_batch","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","from","from","hash","infer_schema_len","init","init","init","init","init","into","into","into","into","into","maintain_order","new","new","new","serialize","set_rechunk","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_ignore_errors","with_json_format","with_json_format","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","Mapped","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","deref","deref_mut","drop","from","from","init","into","to_bytes","to_file","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","arced","as_any","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","boxed","clone","clone_into","data_type","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fields","finish","fmt","from","from","from","from","from_path","get_fields","infer_schema_len","init","init","into","into","into_data","into_iter","iter","len","low_memory","new","new","new_empty","new_null","set_validity","slice","slice","slice_typed","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","take_validity","to_boxed","to_owned","try_from","try_from","try_into","try_into","try_new","type_id","type_id","validity","validity","values","values_iter","vzip","vzip","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_rechunk","with_schema","with_schema_overwrite","with_validity","with_validity","metadata","read","write","FileMetaData","FileMetaDataRef","ParquetStatistics","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","column_order","column_orders","created_by","deref","deref","deref_mut","deref_mut","deserialize","distinct_count","drop","drop","eq","fmt","fmt","from","from","from","init","init","into","into","into_thrift","key_value_metadata","key_value_metadata","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","try_from","try_from_thrift","try_into","try_into","type_id","type_id","version","vzip","vzip","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","RowGroups","__clone_box","__clone_box","batched","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","finishes_this_batch","fmt","fmt","from","from","from","from","from","from_uri","get_metadata","get_metadata","hash","hash","init","init","init","init","init","into","into","into","into","into","is_finished","iter","limit_reached","low_memory","materialize_empty_df","new","new","next_batches","num_rows","num_rows","parallel","read_parallel","read_parallel","schema","schema","schema","serialize","serialize","set_low_memory","set_rechunk","set_rechunk","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_statistics","use_statistics","use_statistics","vzip","vzip","vzip","vzip","vzip","with_columns","with_hive_partition_columns","with_hive_partition_columns","with_n_rows","with_n_rows","with_predicate","with_predicate","with_projection","with_projection","with_row_index","with_row_index","with_schema","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIter","Snappy","Uncompressed","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","batched","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compression","data_pagesize_limit","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","encode_and_compress","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_writer","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","maintain_order","new","row_group_size","serialize","serialize","serialize","serialize","serialize","set_parallel","statistics","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new","try_new","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_row_groups","PartitionedWriter","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","with_parallel","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","apply_predicate","as_stats_evaluator","borrow","borrow","borrow_mut","borrow_mut","column_stats","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","dtype","evaluate_io","fmt","fmt","from","from","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","init","into","into","new","new","null_count","num_rows","schema","serialize","serialize","should_read","to_max","to_min","to_min_max","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","SerReader","SerWriter","cloud","finish","finish","new","new","set_rechunk","set_rechunk","set_rechunk","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","get_reader_bytes","get_sequential_row_statistics","is_cloud_url","materialize_projection","resolve_homedir"],"q":[[0,"polars_io"],[80,"polars_io::avro"],[146,"polars_io::cloud"],[216,"polars_io::cloud::options"],[395,"polars_io::csv"],[397,"polars_io::csv::read"],[641,"polars_io::csv::write"],[781,"polars_io::ipc"],[1034,"polars_io::json"],[1130,"polars_io::mmap"],[1151,"polars_io::ndjson"],[1153,"polars_io::ndjson::core"],[1233,"polars_io::parquet"],[1236,"polars_io::parquet::metadata"],[1288,"polars_io::parquet::read"],[1424,"polars_io::parquet::write"],[1606,"polars_io::partition"],[1622,"polars_io::pl_async"],[1643,"polars_io::predicates"],[1697,"polars_io::prelude"],[1707,"polars_io::utils"],[1719,"dyn_clone::sealed"],[1720,"alloc::boxed"],[1721,"std::io"],[1722,"core::result"],[1723,"serde::de"],[1724,"std::path"],[1725,"polars_core::frame"],[1726,"polars_error"],[1727,"core::fmt"],[1728,"core::fmt"],[1729,"std::io"],[1730,"core::option"],[1731,"serde::ser"],[1732,"core::any"],[1733,"polars_arrow::datatypes::schema"],[1734,"std::io"],[1735,"alloc::string"],[1736,"alloc::vec"],[1737,"object_store"],[1738,"alloc::sync"],[1739,"std::io::error"],[1740,"crossterm::command"],[1741,"std::io::error"],[1742,"object_store::path"],[1743,"bytes::bytes"],[1744,"core::ops::range"],[1745,"object_store"],[1746,"parquet_format_safe::thrift::varint::decode"],[1747,"core::convert"],[1748,"core::convert"],[1749,"polars_core::schema"],[1750,"polars_core::datatypes::dtype"],[1751,"core::num::nonzero"],[1752,"futures_io::if_std"],[1753,"core::marker"],[1754,"core::marker"],[1755,"polars_arrow::datatypes::schema"],[1756,"core::any"],[1757,"polars_arrow::datatypes::field"],[1758,"polars_arrow::array::growable::structure"],[1759,"polars_arrow::array::struct_::mutable"],[1760,"polars_arrow::bitmap::immutable"],[1761,"polars_arrow::scalar"],[1762,"polars_arrow::array::struct_::iterator"],[1763,"polars_arrow::bitmap::utils::iterator"],[1764,"polars_arrow::bitmap::utils::zip_validity"],[1765,"polars_error"],[1766,"polars_parquet::parquet::metadata::row_metadata"],[1767,"polars_parquet::arrow::read::statistics"],[1768,"parquet_format_safe::parquet_format"],[1769,"parquet_format_safe::parquet_format"],[1770,"polars_parquet::parquet::error"],[1771,"polars_core::series"],[1772,"core::iter::traits::iterator"],[1773,"polars_parquet::arrow::write::file"],[1774,"std::sync::mutex"],[1775,"core::marker"],[1776,"tokio::runtime::task::join"],[1777,"polars_core::datatypes::field"],[1778,"core::marker"]],"i":[0,0,0,0,0,0,3,4,0,0,3,4,3,4,3,4,3,4,0,5,0,4,3,4,3,4,3,4,3,4,4,3,4,3,3,3,4,4,4,5,14,6,3,4,3,4,3,4,3,4,3,4,0,0,0,3,0,14,6,21,3,0,0,0,0,0,4,3,4,3,4,3,4,3,4,3,4,0,3,4,0,0,0,0,29,29,29,29,29,26,26,30,29,26,30,29,29,29,26,30,29,26,30,29,26,30,29,29,29,29,29,26,30,29,26,30,29,29,26,30,29,26,30,29,26,30,26,26,29,26,30,29,26,30,29,26,30,29,26,30,29,26,30,26,30,26,0,0,0,41,42,37,41,42,37,41,37,0,41,41,37,42,37,41,42,37,41,42,42,37,41,37,42,37,42,37,41,42,37,41,37,41,41,41,0,41,42,37,41,42,37,41,42,37,41,42,0,37,42,37,42,41,42,37,41,42,37,41,42,37,41,42,37,41,42,42,57,56,57,0,58,57,59,59,0,56,58,56,56,57,58,57,57,0,0,56,56,57,56,56,56,57,56,56,57,57,59,59,0,59,56,56,57,57,57,56,56,57,56,58,58,56,57,56,57,56,57,57,57,56,36,56,57,58,56,57,58,36,59,56,57,58,36,59,56,57,58,36,36,36,36,56,57,58,36,56,57,58,36,36,59,56,57,58,36,59,56,57,58,36,56,57,58,36,59,56,57,58,36,59,56,57,58,36,36,36,56,56,56,57,57,57,58,58,58,36,56,57,58,36,59,56,57,58,59,56,57,58,36,36,56,57,58,36,59,56,57,58,36,59,56,57,58,36,36,56,57,58,36,56,57,58,36,59,56,57,58,36,59,56,57,58,36,59,56,57,58,36,59,56,57,58,36,36,36,0,0,74,74,0,0,0,0,0,0,73,65,74,0,0,0,65,73,72,73,65,74,64,64,64,64,64,67,70,68,71,64,72,73,65,74,67,70,68,71,64,72,73,65,74,72,73,65,74,72,73,65,74,72,0,72,72,73,67,70,68,71,64,72,73,65,74,67,70,68,71,64,72,73,65,74,72,73,65,74,67,70,70,68,71,71,64,72,73,65,74,72,72,72,73,65,74,72,72,72,73,73,73,65,65,65,74,74,74,64,72,73,65,74,67,70,68,71,64,72,73,65,74,64,64,72,72,73,65,74,72,0,64,72,67,70,68,71,64,72,73,65,74,67,70,68,71,64,72,73,65,74,0,64,72,72,64,65,65,65,67,70,68,71,72,72,64,72,64,72,72,72,72,73,65,74,72,72,72,73,65,74,64,72,67,70,68,71,64,72,73,65,74,67,70,68,71,64,72,73,65,74,72,67,70,68,71,64,72,73,65,74,67,70,68,71,64,72,73,65,74,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,83,0,0,0,83,83,83,0,0,81,82,83,81,79,79,80,81,82,83,79,80,81,82,83,81,82,83,81,82,83,82,82,81,82,83,79,80,81,82,83,79,80,81,82,83,81,82,83,79,80,81,82,83,81,82,83,81,81,81,82,82,82,83,83,83,79,80,82,81,82,83,79,80,81,82,83,81,82,83,79,81,79,81,79,80,81,82,83,79,80,81,82,83,82,81,79,79,82,82,82,82,81,82,83,81,82,81,82,83,79,80,81,82,83,79,80,81,82,83,79,80,81,82,83,79,80,81,82,83,79,79,79,79,79,79,79,79,79,79,80,0,0,0,0,0,0,0,0,0,0,0,0,94,94,91,92,93,94,85,86,86,100,95,85,101,98,86,87,99,91,92,93,94,100,95,85,101,98,86,87,99,91,92,93,94,91,92,93,94,91,92,93,94,93,95,98,99,95,98,99,92,93,94,100,95,85,101,98,86,87,99,91,92,93,94,100,95,85,101,98,86,87,99,91,92,93,94,91,93,94,100,95,85,101,98,86,87,99,91,92,93,94,91,93,94,93,93,93,94,94,94,98,99,100,85,101,86,87,100,91,93,94,100,95,85,101,98,86,87,99,91,92,93,94,95,91,93,94,100,95,85,101,98,86,87,99,91,92,93,94,100,95,85,101,98,86,87,99,91,92,93,94,93,91,100,95,100,85,101,98,86,99,86,100,85,91,93,94,100,85,91,92,93,94,100,95,85,101,98,86,87,99,91,92,93,94,100,95,85,101,98,86,87,99,91,92,93,94,100,95,85,101,98,86,87,99,91,92,93,94,100,95,85,101,98,86,87,99,91,92,93,94,100,85,101,98,86,99,98,99,100,85,101,86,92,100,85,92,100,85,92,92,87,0,107,0,107,0,0,0,103,107,104,106,105,103,107,104,106,105,103,103,103,103,107,104,106,105,103,107,104,106,105,103,103,107,104,106,105,103,103,103,103,103,104,105,103,107,104,106,105,103,103,105,107,104,106,105,103,107,104,106,105,103,103,104,106,105,103,105,103,107,104,106,105,103,107,104,106,105,103,107,104,106,105,103,107,104,106,105,103,105,105,104,105,105,105,105,106,76,76,0,76,0,76,76,76,76,76,76,76,76,76,76,66,66,76,76,76,76,0,0,0,0,109,109,109,109,114,109,114,109,109,109,109,109,114,109,114,109,114,109,109,109,109,114,109,114,109,109,109,114,109,114,114,109,114,109,109,109,109,109,114,114,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,114,109,114,109,109,114,109,109,109,109,109,114,109,114,114,114,114,114,114,114,114,109,109,0,0,0,0,0,0,123,126,123,126,123,123,123,123,123,123,126,123,126,123,0,126,126,123,126,126,123,126,126,123,126,123,126,123,123,123,123,126,126,126,123,123,123,123,123,126,123,123,126,123,126,123,123,126,123,136,0,136,136,0,0,0,0,136,135,136,132,134,133,132,134,135,136,133,132,134,135,136,135,136,135,136,136,133,132,134,135,136,133,132,134,135,136,135,136,133,132,134,135,136,135,136,135,135,135,136,136,136,132,134,133,135,136,133,132,134,135,136,134,132,134,135,136,133,132,134,135,136,133,132,134,135,136,133,133,133,135,0,133,132,133,132,134,135,132,134,133,132,134,135,136,132,132,134,135,136,133,132,134,135,136,133,132,134,135,136,133,132,134,135,136,132,134,135,133,132,134,135,136,132,132,134,132,134,132,134,132,134,132,134,132,0,142,0,142,0,142,142,0,0,0,0,142,142,142,0,141,142,143,144,145,139,140,139,141,142,143,144,145,140,139,141,142,143,144,145,141,142,143,144,145,141,142,143,144,145,141,141,141,142,140,139,141,142,143,144,145,140,139,141,142,143,144,145,141,142,143,144,145,140,139,141,142,143,144,145,140,141,142,143,144,145,141,141,141,142,142,142,143,143,143,144,144,144,145,145,145,140,139,141,142,143,144,145,140,139,141,142,143,144,145,140,141,142,143,144,145,140,139,141,142,143,144,145,140,139,141,142,143,144,145,141,139,141,141,142,143,144,145,139,141,141,142,143,144,145,140,139,141,142,143,144,145,140,139,141,142,143,144,145,143,144,145,140,139,141,142,143,144,145,140,139,141,142,143,144,145,139,139,139,139,140,140,0,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,0,0,155,155,155,155,155,155,155,155,0,155,155,157,155,155,155,0,155,155,0,0,0,0,0,0,78,161,160,161,160,160,161,160,161,160,161,160,161,160,161,78,161,160,161,160,161,161,161,161,161,160,161,160,161,160,161,160,161,160,160,161,160,159,161,161,161,161,160,161,160,161,160,161,160,0,0,0,14,6,14,6,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0],"f":"``````{{cb}d{}}0``{ce{}{}}000{ff}{hh}{{ce}d{}{}}0`{{jc}{{n{l}}}A`}`{{}h}{Abc{}}000{c{{Ad{f}}}Af}{c{{Ad{h}}}Af}{Abd}0`{{ff}Ah}{{hh}Ah}{{ce}Ah{}{}}00000{jAj}{Al{{B`{An}}}}{{lAn}{{B`{d}}}}{{fBb}Bd}{{hBb}Bd}{cc{}}0{{fc}dBf}{{hc}dBf}{{}Ab}0{ce{}{}}0`````{cAlBh}{clA`}{Bj{{B`{{Bn{Bl}}}}}}```````{{fc}AdC`}{{hc}AdC`}55{c{{Ad{e}}}{}{}}000{cCb{}}0`77````````{{cb}d{}}{{{Cd{c}}}{{B`{Cf}}}{BhCh}}999999{CjCj}{{ce}d{}{}}{Abc{}}00000{Abd}00{{CjCj}Ah}{{ce}Ah{}{}}00{{{Cd{c}}}{{B`{An}}}{BhCh}}{{{Cl{c}}An}{{B`{d}}}A`}{{CjBb}{{Ad{dCn}}}}{cc{}}00{{Cjc}dBf}{{}Ab}00{ce{}{}}00{c{{Cd{c}}}{BhCh}}{c{{Cl{c}}}A`}{{{Cd{c}}}{{B`{D`}}}{BhCh}}{{{Cd{c}}Ah}{{Cd{c}}}{BhCh}}4{c{{Ad{e}}}{}{}}00000{cCb{}}00666{{{Cd{c}}{Bn{{Dd{Db}}}}}{{Cd{c}}}{BhCh}}{{{Cl{c}}{Bn{Cj}}}{{Cl{c}}}A`}{{{Cd{c}}{Bn{Ab}}}{{Cd{c}}}{BhCh}}{{{Cl{c}}Db}{{Cl{c}}}A`}{{{Cd{c}}{Bn{{Dd{Ab}}}}}{{Cd{c}}}{BhCh}}```{{cb}d{}}<<<<<<`{{Df{Bn{Dh}}}{{B`{{E`{Dj{Dn{Dl}}}}}}}}{EbEb}{{ce}d{}{}}{{}Dj}{Abc{}}00000{Edd}{Abd}00{{DjDj}Ah}{{ce}{{Ad{gEf}}}{}Eh{}}`{Ed{{Ej{d}}}}{{DjBb}Bd}{{EbBb}Bd}{cc{}}00{El{{B`{Dj}}}}{{EbEn}{{B`{F`}}}}{{EbEn{Fb{Ab}}}{{B`{F`}}}}{{EbEn{Fd{{Fb{Ab}}}}}{{B`{{Dd{F`}}}}}}{{Df{Bn{Dh}}}{{B`{{Dd{Db}}}}}}{{EbEn}{{B`{Ff}}}}{{}Ab}00{ce{}{}}00{{Df{Bn{Dh}}}{{B`{Ed}}}}{Df{{B`{Dj}}}}{{{Dn{Dl}}}Eb}{{{Dn{Dl}}En}{{B`{Ed}}}}``{{ce}{{Ad{gEf}}}{}Eh{}}`{{ci}{{Ad{gEf}}}{}{}{}{{Fj{e}{{Fh{g}}}}}}6{c{{Ad{e}}}{}{}}00000{cCb{}}00888{{Ed{Fd{Fl}}}{{Ej{Ab}}}}{{ce}{{Ad{AbEf}}}{}Fn}``````````````````````````````````````````````````````{{cb}d{}}000{G`Df}{GbDf}{GdDf}>>>>>>>>>>{{DhDf}{{B`{{`{Dl}}}}}}00{DhDh}{G`G`}{GbGb}{GdGd}{{ce}d{}{}}000{{}Dh}{Abc{}}000000000{c{{Ad{Dh}}}Af}{c{{Ad{G`}}}Af}{c{{Ad{Gb}}}Af}{c{{Ad{Gd}}}Af}{Abd}0000{{DhDh}Ah}{{GfGf}Ah}{{G`G`}Ah}{{GbGb}Ah}{{GdGd}Ah}{{ce}Ah{}{}}00000000000{{DhBb}Bd}{{G`Bb}{{Ad{dCn}}}}{{GbBb}{{Ad{dCn}}}}{{GdBb}{{Ad{dCn}}}}{cc{}}0000{Df{{Ad{Gfc}}}{}}{Df{{Ad{G`}}}}{Df{{Ad{Gb}}}}{Df{{Ad{Gd}}}}{{Dfg}{{B`{Dh}}}{{Gh{Df}}}{{Gj{Db}}}{{Gn{}{{Gl{{E`{ce}}}}}}}}{{Dhc}dBf}{{G`c}dBf}{{Gbc}dBf}{{Gdc}dBf}{{}Ab}0000{ce{}{}}0000`{{Dhc}AdC`}{{G`c}AdC`}{{Gbc}AdC`}{{Gdc}AdC`}4444{c{{Ad{e}}}{}{}}000000000{cCb{}}000066666{{Dhe}Dh{{Gj{Db}}}{{Gn{}{{Gl{{E`{G`c}}}}}}}}{{Dhe}Dh{{Gj{Db}}}{{Gn{}{{Gl{{E`{Gbc}}}}}}}}{{Dhe}Dh{{Gj{Db}}}{{Gn{}{{Gl{{E`{Gdc}}}}}}}}``````````````````{{cb}d{}}000{{{H`{c}}{Bn{Hb}}}{{H`{c}}}Hd}{{{H`{c}}}{{B`{Hf}}}Hd}{{{H`{c}}}{{B`{Hh}}}Hd}{{{H`{{n{Hd}}}}{Bn{Hj}}}{{B`{Hl}}}}{{{H`{{n{Hd}}}}{Bn{Hj}}}{{B`{Hn}}}}??????????????????{I`I`}{IbIb}{HbHb}{IdId}{{ce}d{}{}}000`{{AjFl{Bn{Fl}}{Bn{Hb}}FlAh}{{B`{Ab}}}}`{{}I`}{{}Ib}{Abc{}}00000000000000000{c{{Ad{I`}}}Af}{c{{Ad{Ib}}}Af}{c{{Ad{Hb}}}Af}{c{{Ad{Id}}}Af}{Abd}{Hld}11{Hnd}222222``{{I`I`}Ah}{{IbIb}Ah}{{HbHb}Ah}{{IdId}Ah}{{ce}Ah{}{}}00000000000{{{H`{c}}}{{B`{An}}}Hd}{{I`Bb}Bd}{{IbBb}Bd}{{HbBb}Bd}{{IdBb}Bd}{cc{}}00000000{c{{B`{{H`{If}}}}}{{Gj{Aj}}}}{{{H`{c}}Ah}{{H`{c}}}Hd}`{{I`c}dBf}{{Ibc}dBf}{{Hbc}dBf}{{Idc}dBf}`{{IhFl{Bn{Ab}}Ah{Bn{D`}}AbAb{Bn{Hb}}{Bn{Fl}}Fl{Bn{Id}}AhAh{Bn{Ab}}Ah}{{B`{{E`{D`AbAb}}}}}}{{{H`{c}}{Bn{Ab}}}{{H`{c}}}Hd}`{{}Ab}00000000{ce{}{}}00000000{{{Fd{Fl}}}Ah}9``{c{{H`{c}}}Hd}{DfHb}{DbHb}{FlHb}{{HfAb}{{B`{{Bn{{Dd{An}}}}}}}}{{HlAb}{{B`{{Bn{{Dd{An}}}}}}}}{{HhAb}{{B`{{Bn{{Dd{An}}}}}}}}{{HnAb}{{B`{{Bn{{Dd{An}}}}}}}}``{{{H`{c}}Ah}{{H`{c}}}Hd}`{{{H`{c}}Ab}{{H`{c}}}Hd}```{{I`c}AdC`}{{Ibc}AdC`}{{Hbc}AdC`}{{Idc}AdC`}``????5`{c{{Ad{e}}}{}{}}00000000000000000`{cCb{}}00000000{ce{}{}}000000007{{{H`{c}}{Bn{{Dd{Db}}}}}{{H`{c}}}Hd}{{{H`{c}}{Bn{Df}}}{{H`{c}}}Hd}:{{{H`{c}}{Bn{Hj}}}{{H`{c}}}Hd}{{{H`{c}}{Bn{{Fd{Ij}}}}}{{H`{c}}}Hd}{{{H`{c}}Ib}{{H`{c}}}Hd}{{{H`{c}}Fl}{{H`{c}}}Hd}>>{{{H`{c}}{Bn{Ab}}}{{H`{c}}}Hd}0{{{H`{c}}{Bn{Id}}}{{H`{c}}}Hd}{{{H`{c}}I`}{{H`{c}}}Hd}{{{H`{c}}{Bn{e}}}{{H`{c}}}Hd{{Gj{Aj}}}}{{{H`{c}}{Bn{{Dn{Il}}}}}{{H`{c}}}Hd}{{{H`{c}}{Bn{{Dd{Ab}}}}}{{H`{c}}}Hd}{{{H`{c}}{Bn{Fl}}}{{H`{c}}}Hd}{{{H`{c}}Ah}{{H`{c}}}Hd}{{{H`{c}}{Bn{f}}}{{H`{c}}}Hd}<9{{{H`{c}}Ab}{{H`{c}}}Hd}02`````````{{cb}d{}}00`{{{In{c}}D`}{{B`{{J`{c}}}}}A`}{ce{}{}}000000000{JbJb}{JdJd}{JfJf}{{ce}d{}{}}00``{{}Jb}{{}Jd}{{}Jf}{Abc{}}000000000{c{{Ad{Jb}}}Af}{c{{Ad{Jd}}}Af}{c{{Ad{Jf}}}Af}{Abd}0000{{JbJb}Ah}{{JdJd}Ah}{{JfJf}Ah}{{ce}Ah{}{}}00000000{{{In{c}}An}{{B`{d}}}A`}{{{J`{c}}}{{B`{d}}}A`}`{{JbBb}Bd}{{JdBb}Bd}{{JfBb}Bd}{cc{}}0000{{Jbc}dBf}{{Jdc}dBf}{{Jfc}dBf}{{{In{c}}Ah}{{In{c}}}A`}`0`{{}Ab}0000{ce{}{}}0000``{{{In{c}}Ab}{{In{c}}}A`}{c{{In{c}}}A`}````{{Jbc}AdC`}{{Jdc}AdC`}{{Jfc}AdC`}``555{c{{Ad{e}}}{}{}}000000000{cCb{}}000077777{{{In{c}}Jh}{{In{c}}}A`}{{{In{c}}{Bn{Db}}}{{In{c}}}A`}0{{{In{c}}{Bn{Ab}}}{{In{c}}}A`}{{{In{c}}Db}{{In{c}}}A`}0{{{In{c}}Fl}{{In{c}}}A`}{{{In{c}}Jf}{{In{c}}}A`}14{{{J`{c}}An}{{B`{d}}}A`}``````````````{{cb}d{}}000{{{Jj{c}}}{{B`{Cf}}}Bh}{{{Jl{c}}D`}{{B`{{Jn{c}}}}}A`}{{{Jl{c}}D`}{{B`{{`{c}}}}}{K`KbKd}}{ce{}{}}00000000000000000000000{KfKf}{KhKh}{KjKj}{KlKl}{{ce}d{}{}}000`{{Kn{Bn{L`}}}{{B`{Lb}}}}{{Ldc}{{n{l}}}A`}{{Lfc}{{n{l}}}A`}{{Kn{Bn{L`}}KhAh}{{B`{An}}}}{{}Ld}{{}Lf}{{}Kh}{{}Kj}{{}Kl}{Abc{}}00000000000000000000000{c{{Ad{Kf}}}Af}{c{{Ad{Kj}}}Af}{c{{Ad{Kl}}}Af}{Abd}00000000000{{KfKf}Ah}{{KjKj}Ah}{{KlKl}Ah}{{ce}Ah{}{}}00000{LdAj}{LfAj}{{{Lh{c}}}{{B`{An}}}Hd}{{{Jj{c}}}{{B`{An}}}Bh}{{{Lj{c}}An}{{B`{d}}}A`}{{{Jl{c}}An}{{B`{d}}}A`}{{{Jn{c}}}{{B`{d}}}A`}{{{Lh{c}}{Bn{{Dn{Il}}}}Ah}{{B`{An}}}Hd}{{KfBb}Bd}{{KjBb}Bd}{{KlBb}Bd}{cc{}}00000000000{{Df{Bn{Dh}}}{{B`{Kn}}}}{{Kfc}dBf}{{Kjc}dBf}{{Klc}dBf}{{}Ab}00000000000{ce{}{}}00000000000``{{{Lh{c}}Ah}{{Lh{c}}}Hd}{Kn{{B`{L`}}}}{c{{Lh{c}}}Hd}{c{{Jj{c}}}Bh}{c{{Lj{c}}}A`}{{}Ld}{c{{Jl{c}}}A`}{{}Lf}{c{{Jl{c}}}{K`KbKd}}{{{Lh{c}}}{{B`{Ll}}}Hd}{{{Jj{c}}}{{B`{D`}}}Bh}{{Kfc}AdC`}{{Kjc}AdC`}{{Klc}AdC`}={{{Jj{c}}Ah}{{Jj{c}}}Bh}????{c{{Ad{e}}}{}{}}00000000000000000000000{cCb{}}00000000000{ce{}{}}00000000000{{{Lh{c}}{Bn{{Dd{Db}}}}}{{Lh{c}}}Hd}{{{Jj{c}}{Bn{{Dd{Db}}}}}{{Jj{c}}}Bh}{{{Lj{c}}{Bn{Kl}}}{{Lj{c}}}{}}{{Ld{Bn{Kl}}}Ld}{{{Jl{c}}{Bn{Kl}}}{{Jl{c}}}A`}{{Lf{Bn{Kl}}}Lf}{{LdAj}Ld}{{LfAj}Lf}{{{Lh{c}}{Bn{Ab}}}{{Lh{c}}}Hd}{{{Jj{c}}{Bn{Ab}}}{{Jj{c}}}Bh}{{{Lj{c}}Ah}{{Lj{c}}}{}}{{{Jl{c}}Ah}{{Jl{c}}}A`}{{Khc}Kh{{Gj{{Bn{{Dn{Il}}}}}}}}{{{Lh{c}}{Bn{{Dd{Ab}}}}}{{Lh{c}}}Hd}{{{Jj{c}}{Bn{{Dd{Ab}}}}}{{Jj{c}}}Bh}{{Khc}Kh{{Gj{{Bn{{Dd{Db}}}}}}}}{{{Lh{c}}{Bn{f}}}{{Lh{c}}}Hd}{{{Jj{c}}{Bn{f}}}{{Jj{c}}}Bh}{{Khc}Kh{{Gj{{Bn{f}}}}}}{{Khc}Kh{{Gj{{Bn{Ab}}}}}}{{{Jn{c}}An}{{B`{d}}}A`}```````{{cb}d{}}{ce{}{}}000000000{LnLn}{{ce}d{}{}}{{}Ln}{Abc{}}000000000{c{{Ad{Ln}}}Af}{Abd}0000{{LnLn}Ah}{{ce}Ah{}{}}00{{{M`{c}}An}{{B`{d}}}A`}{{{Mb{c}}}{{B`{An}}}Hd}{{LnBb}Bd}{cc{}}0000{{Lnc}dBf}{{{Mb{c}}{Bn{Ab}}}{{Mb{c}}}Hd}{{}Ab}0000?????`{c{{M`{c}}}A`}{c{{Md{c}}}A`}{c{{Mb{c}}}Hd}{{Lnc}AdC`}{{{Mb{c}}Ah}{{Mb{c}}}Hd}{ce{}{}}{c{{Ad{e}}}{}{}}000000000{cCb{}}000022222{{{Mb{c}}Jh}{{Mb{c}}}Hd}4{{{M`{c}}Mf}{{M`{c}}}A`}{{{Mb{c}}Mf}{{Mb{c}}}Hd}{{{Mb{c}}{Bn{{Dd{Db}}}}}{{Mb{c}}}Hd}{{{Mb{c}}Hj}{{Mb{c}}}Hd}{{{Mb{c}}D`}{{Mb{c}}}Hd}{{{Md{c}}An}{{B`{d}}}A`}`````99{Abc{}}{Ih{{Fd{Fl}}}}1{Abd}{cIhHd}{cc{}}{{}Ab}?{Hd{{Bn{{Fd{Fl}}}}}}{Hd{{Bn{If}}}}{c{{Ad{e}}}{}{}}0{cCb{}}{ce{}{}}`{{c{Bn{Ab}}}{{B`{D`}}}Mh}``{{cb}d{}}{Mj{{Dn{Ml}}}}{MjMn}04444{Mj{{n{Ml}}}}{MjMj}{{ce}d{}{}}{MjN`}{Abc{}}000{Abd}0{{MjMl}Ah}{{MjMj}Ah}{Mj{{Fd{Nb}}}}{{{Nd{c}}}{{B`{An}}}Hd}{{MjBb}{{Ad{dCn}}}}{cc{}}{NfMj}1{NhMj}{c{{B`{{Nd{If}}}}}{{Gj{Aj}}}}{N`{{Fd{Nb}}}}{{{Nd{c}}{Bn{Ab}}}{{Nd{c}}}Hd}{{}Ab}0{ce{}{}}0{Mj{{E`{{Dd{Nb}}{Dd{{n{Ml}}}}{Bn{Nj}}}}}}{Mj}{Mj{{Ob{{Dd{{n{Nl}}}}NnO`}}}}{MjAb}{{{Nd{c}}Ah}{{Nd{c}}}Hd}{c{{Nd{c}}}Hd}{{N`{Dd{{n{Ml}}}}{Bn{Nj}}}Mj}{N`Mj}{{N`Ab}Mj}{{Mj{Bn{Nj}}}d}{{MjAbAb}d}0{{cAbAb}e{}{}}011{{MjAbAb}Mj}0{Mj{{Bn{Nj}}}}{Mj{{n{Ml}}}}?{c{{Ad{e}}}{}{}}000{{N`{Dd{{n{Ml}}}}{Bn{Nj}}}{{Ad{MjOd}}}}{cCb{}}044{Mj{{Fd{{n{Ml}}}}}}{MjNn}{ce{}{}}0{{{Nd{c}}{Bn{Jh}}}{{Nd{c}}}Hd}{{{Nd{c}}Ah}{{Nd{c}}}Hd}{{{Nd{c}}{Bn{Ab}}}{{Nd{c}}}Hd}0{{{Nd{c}}{Bn{e}}}{{Nd{c}}}Hd{{Gj{Aj}}}}2{{{Nd{c}}Hj}{{Nd{c}}}Hd}{{{Nd{c}}D`}{{Nd{c}}}Hd}{{Mj{Bn{Nj}}}Mj}{{Mj{Bn{Nj}}}{{n{Ml}}}}``````{{cb}d{}}9999{OfOf}{{ce}d{}{}}{{OfAb}Oh}``{Abc{}}000{{NbOj}{{Ad{OlOd}}}}`{Abd}0{{OlOl}Ah}{{OlBb}{{Ad{dCn}}}}{{OfBb}{{Ad{dCn}}}}{OnOl}{cc{}}0{{}Ab}0{ce{}{}}0{OfA@`}{Of{{Bn{{Dd{A@b}}}}}}``````{OfA@d}`3{c{{Ad{e}}}{}{}}0{A@`{{Ad{OfA@f}}}}11{cCb{}}0`66`````````{{cb}d{}}0{{{A@h{c}}Ab}{{B`{A@j}}}Hd}{{A@lAb}{{B`{A@j}}}}9999999999{A@nA@n}{AA`AA`}{{ce}d{}{}}0{{}AA`}{Abc{}}000000000{c{{Ad{A@n}}}Af}{c{{Ad{AA`}}}Af}{Abd}0000{{A@nA@n}Ah}{{AA`AA`}Ah}{{ce}Ah{}{}}00000{{{A@h{c}}}{{B`{An}}}Hd}{A@l{{B`{An}}}}{{A@jAb}Ah}{{A@nBb}Bd}{{AA`Bb}Bd}{cc{}}0000{{Df{Bn{Dh}}{Bn{Ll}}{Bn{AAb}}}{{B`{A@l}}}}{{{A@h{c}}}{{B`{AAb}}}Hd}{A@l{{B`{AAb}}}}{{A@nc}dBf}{{AA`c}dBf}{{}Ab}0000{ce{}{}}0000{A@jAh}`0`{{{Bn{{Fd{Ab}}}}Cf{Bn{{Fd{AAd}}}}{Bn{f}}}An}`{c{{A@h{c}}}Hd}{{A@jAb}{{B`{{Bn{{Dd{An}}}}}}}}{{{A@h{c}}}{{B`{Ab}}}Hd}{A@l{{B`{Ab}}}}`{{{A@h{c}}AA`}{{A@h{c}}}Hd}{{A@lAA`}A@l}{A@jLl}{{{A@h{c}}}{{B`{Ll}}}Hd}{A@l{{B`{Ll}}}}{{A@nc}AdC`}{{AA`c}AdC`}{{{A@h{c}}Ah}{{A@h{c}}}Hd}0{{A@lAh}A@l}??{c{{Ad{e}}}{}{}}000000000{cCb{}}000032`{ce{}{}}0000{{{A@h{c}}{Bn{{Dd{Db}}}}}{{A@h{c}}}Hd}{{{A@h{c}}{Bn{{Dd{AAd}}}}}{{A@h{c}}}Hd}{{A@l{Bn{{Dd{AAd}}}}}A@l}{{{A@h{c}}{Bn{Ab}}}{{A@h{c}}}Hd}{{A@l{Bn{Ab}}}A@l}{{{A@h{c}}{Bn{{Dn{Il}}}}}{{A@h{c}}}Hd}{{A@l{Bn{{Dn{Il}}}}}A@l}{{{A@h{c}}{Bn{{Dd{Ab}}}}}{{A@h{c}}}Hd}{{A@l{Bn{{Dd{Ab}}}}}A@l}{{{A@h{c}}{Bn{f}}}{{A@h{c}}}Hd}{{A@l{Bn{f}}}A@l}{{{A@h{c}}{Bn{Ll}}}{{A@h{c}}}Hd}```````````````{{cb}d{}}0000{{{AAf{c}}D`}{{B`{{AAh{c}}}}}A`}>>>>>>>>>>>>>>{AAjAAj}{AAlAAl}{AAnAAn}{AB`AB`}{ABbABb}{{ce}d{}{}}0000``{{}AAj}{{}AAl}{Abc{}}0000000000000{c{{Ad{AAj}}}Af}{c{{Ad{AAl}}}Af}{c{{Ad{AAn}}}Af}{c{{Ad{AB`}}}Af}{c{{Ad{ABb}}}Af}{Abd}000000{{{AAh{c}}An}{{`{{ABf{}{{Gl{{B`{{ABd{Od}}}}}}}}}}}A`}{{AAjAAj}Ah}{{AAlAAl}Ah}{{AAnAAn}Ah}{{AB`AB`}Ah}{{ABbABb}Ah}{{ce}Ah{}{}}00000000000000{{{AAh{c}}}{{B`{ABh}}}A`}{{{AAf{c}}An}{{B`{ABh}}}A`}{{AAjBb}Bd}{{AAlBb}Bd}{{AAnBb}Bd}{{AB`Bb}Bd}{{ABbBb}Bd}{cc{}}000000{{{AAh{c}}}{{ABl{{ABj{c}}}}}A`}{{AAjc}dBf}{{AAlc}dBf}{{AAnc}dBf}{{AB`c}dBf}{{ABbc}dBf}{{}Ab}000000{ce{}{}}000000`{c{{AAf{c}}}{A`A`}}`{{AAjc}AdC`}{{AAlc}AdC`}{{AAnc}AdC`}{{AB`c}AdC`}{{ABbc}AdC`}{{{AAf{c}}Ah}{{AAf{c}}}A`}`77777{c{{Ad{e}}}{}{}}0000000000000{Fl{{B`{AAn}}}}{ABn{{B`{AB`}}}}{AC`{{B`{ABb}}}}{cCb{}}000000<<<<<<<{{{AAf{c}}AAl}{{AAf{c}}}A`}{{{AAf{c}}{Bn{Ab}}}{{AAf{c}}}A`}07{{{AAh{c}}An}{{B`{d}}}A`}{{{AAh{c}}{Dd{{ABd{Od}}}}}{{B`{d}}}A`}`{ce{}{}}0{Abc{}}0{Abd}{{{ACb{c}}An}{{B`{d}}}{jKdACd}}{cc{}}{{}Ab}5{{cei}{{ACb{c}}}{jKdACd}{{Gj{Aj}}}{{Gh{Df}}}{{Gn{}{{Gl{g}}}}}}??;6{{{ACb{c}}Ah}{{ACb{c}}}{jKdACd}}``{{ACfc}{}ACh}{{ACfc}{}{AChKd}}998875{{}ACf}5:{ACjABh}{{ACfc}ACl{AChKd}}{c{{Ad{e}}}{}{}}0{{ABne}{}ACh{{Fj{}{{Fh{c}}}}}}{cCb{}}?1````{{An{Bn{Il}}Ah}{{B`{d}}}}{Il{{Bn{ACn}}}}{ce{}{}}000{AD`{{Fd{ADb}}}}{Abc{}}000{c{{Ad{ADb}}}Af}{c{{Ad{AD`}}}Af}{Abd}0{ADbIj}{{IlAn}{{B`{AAd}}}}{{ADbBb}Bd}{{AD`Bb}Bd}{cc{}}0{AAdADb}{ADdADb}{ADb{{Bn{AAd}}}}00{{AD`Df}{{B`{ADb}}}}{{}Ab}0??{{ADd{Bn{AAd}}{Bn{AAd}}{Bn{AAd}}}ADb}{{Hj{Dd{ADb}}{Bn{Ab}}}AD`}{ADb{{Bn{Ab}}}}{AD`{{Bn{Ab}}}}{AD`Hj}{{ADbc}AdC`}{{AD`c}AdC`}{{ACnAD`}{{B`{Ah}}}}:::{c{{Ad{e}}}{}{}}000{cCb{}}0{ce{}{}}0```{Al{{B`{An}}}}{{lAn}{{B`{d}}}}{cAlBh}{clA`}{{AlAh}Al}00````{{CfCf{Bn{{Fd{Db}}}}Df}{{B`{d}}}}{{D`D`{Bn{{Fd{Db}}}}Df}{{B`{d}}}}0{c{{B`{Ih}}}{BhHdADf}}{{cAb}{{Dd{{E`{AbAb}}}}}{{ABf{}{{Gl{Ab}}}}}}{cAh{{Gh{ADh}}}}{{{Bn{{Fd{Db}}}}D`{Bn{{Fd{AAd}}}}Ah}{{Bn{{Dd{Ab}}}}}}{ADhAj}","D":"CJj","p":[[5,"Private",1719],[1,"unit"],[5,"RowIndex",0],[5,"HiveOptions",0],[10,"WriterFactory",0],[10,"SerWriter",1697],[5,"Box",1720],[10,"Write",1721],[1,"usize"],[6,"Result",1722],[10,"Deserializer",1723],[1,"bool"],[5,"PathBuf",1724],[10,"SerReader",1697],[5,"DataFrame",1725],[8,"PolarsResult",1726],[5,"Formatter",1727],[8,"Result",1727],[10,"Hasher",1728],[10,"Read",1721],[10,"ArrowReader",0],[8,"ArrowChunk",1729],[6,"Option",1730],[10,"Serializer",1731],[5,"TypeId",1732],[5,"AvroReader",80],[5,"ArrowSchema",1733],[10,"Seek",1721],[6,"AvroCompression",80],[5,"AvroWriter",80],[5,"Error",1727],[5,"Schema",1734],[5,"String",1735],[5,"Vec",1736],[1,"str"],[5,"CloudOptions",216],[5,"CloudLocation",146],[10,"ObjectStore",1737],[5,"Arc",1738],[1,"tuple"],[5,"PolarsObjectStore",146],[5,"CloudWriter",146],[5,"Error",1739],[10,"Command",1740],[8,"Result",1739],[5,"Url",1741],[5,"Path",1742],[5,"Bytes",1743],[5,"Range",1744],[1,"slice"],[5,"ObjectMeta",1737],[17,"Output"],[10,"FnOnce",1745],[1,"u8"],[10,"VarInt",1746],[6,"AmazonS3ConfigKey",216],[6,"AzureConfigKey",216],[6,"GoogleConfigKey",216],[6,"CloudType",216],[10,"AsRef",1747],[10,"Into",1747],[17,"Item"],[10,"IntoIterator",1748],[5,"CsvReader",397],[6,"CommentPrefix",397],[10,"MmapBytesReader",1130],[5,"BatchedCsvReaderMmap",397],[5,"BatchedCsvReaderRead",397],[8,"SchemaRef",1734],[5,"OwnedBatchedCsvReaderMmap",397],[5,"OwnedBatchedCsvReader",397],[5,"CsvReaderOptions",397],[6,"CsvEncoding",397],[6,"NullValues",397],[5,"File",1749],[6,"ReaderBytes",1130],[6,"DataType",1750],[10,"PhysicalIoExpr",1643],[5,"CsvWriter",641],[5,"BatchedWriter",641],[5,"CsvWriterOptions",641],[5,"SerializeOptions",641],[6,"QuoteStyle",641],[8,"NonZeroUsize",1751],[5,"IpcStreamReader",781],[5,"IpcWriter",781],[5,"BatchedWriter",781],[10,"AsyncWrite",1752],[10,"Unpin",1753],[10,"Send",1753],[5,"IpcScanOptions",781],[5,"IpcReadOptions",781],[5,"IpcWriterOptions",781],[6,"IpcCompression",781],[5,"IpcReaderAsync",781],[5,"FileMetadata",1754],[1,"i64"],[5,"IpcStreamWriterOption",781],[5,"IpcWriterOption",781],[5,"IpcReader",781],[5,"IpcStreamWriter",781],[8,"ArrowSchemaRef",1733],[5,"JsonWriterOptions",1034],[5,"JsonWriter",1034],[5,"JsonReader",1034],[5,"BatchedWriter",1034],[6,"JsonFormat",1034],[10,"BufRead",1721],[5,"StructArray",1153],[10,"Array",1755],[10,"Any",1732],[6,"ArrowDataType",1756],[5,"Field",1757],[5,"JsonLineReader",1153],[5,"GrowableStruct",1758],[5,"MutableStructArray",1759],[5,"Bitmap",1760],[10,"Scalar",1761],[5,"StructValueIter",1762],[5,"BitmapIter",1763],[6,"ZipValidity",1764],[6,"PolarsError",1726],[5,"FileMetaData",1236],[6,"ColumnOrder",1765],[5,"RowGroupMetaData",1766],[5,"ParquetStatistics",1236],[5,"MutableStatistics",1767],[5,"FileMetaData",1768],[5,"KeyValue",1768],[5,"SchemaDescriptor",1769],[6,"Error",1770],[5,"ParquetReader",1288],[5,"BatchedParquetReader",1288],[5,"ParquetAsyncReader",1288],[5,"ParquetOptions",1288],[6,"ParallelStrategy",1288],[8,"FileMetaDataRef",1236],[5,"Series",1771],[5,"ParquetWriter",1424],[5,"BatchedWriter",1424],[5,"ParquetWriteOptions",1424],[6,"ParquetCompression",1424],[5,"GzipLevel",1424],[5,"BrotliLevel",1424],[5,"ZstdLevel",1424],[8,"RowGroupIter",1424],[10,"Iterator",1772],[1,"u64"],[5,"FileWriter",1773],[5,"Mutex",1774],[1,"u32"],[1,"i32"],[5,"PartitionedWriter",1606],[10,"Sync",1753],[5,"RuntimeManager",1622],[10,"Future",1775],[10,"GetSize",1622],[5,"JoinHandle",1776],[10,"StatsEvaluator",1643],[5,"BatchStats",1643],[5,"ColumnStats",1643],[5,"Field",1777],[10,"Sized",1753],[5,"Path",1724]],"b":[[1173,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1174,"impl-PartialEq-for-StructArray"],[1179,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1181,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1199,"impl-Array-for-StructArray"],[1200,"impl-StructArray"],[1203,"impl-Array-for-StructArray"],[1204,"impl-StructArray"],[1217,"impl-StructArray"],[1218,"impl-Array-for-StructArray"],[1231,"impl-StructArray"],[1232,"impl-Array-for-StructArray"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAOIEnwAAAAEAAwAPABQAAAAWABIAKgACAC8AAwA1AAAANwACADsAAgBAABAAWQAAAFsAFwB2AAMAfQABAIAADQCRAAAAlgAGAJ8ADQCvAAIAtQADALsAAgDDAAAAxQAAAMoADgDfAAEA6wAAAPcAAQD6AAAADwEQACMBMABZAQMAXgEIAGwBHACQAQMAlQEAAJkBAgCeAQMAowEeAMMBNQD6AQMACQIFABECCQAmAgEALAIFADMCAAA1AgwAQwIlAHgCAACDAgAAiwIUAKICIQDGAgIAzgICANICAADUAgUA4AICAOcCAwDsAhYADgMAABADAAATAwAAFgMAABgDAQAcAwMAIQMhAEQDPgCEAwMAlAMPALEDAACzAwcAvQM4AAAEAgAFBAAACAQBAAsEAAARBCMANgQAADwEAAA+BAQASgQYAGUEAQBrBAEAbgQIAHgEAAB6BAgAhAQAAIYEBQCNBAoAmQQBAJwEAACeBAAAoQQCAKcEAACpBAAAsAQAALIEAgC5BAUAwAQBAMMEAADGBAEAygQFANEEAADWBAAA2AQGAOIEAwDoBAUA8AQBAP4EAgACBQMABwUBAAoFAAANBQAADwUAABIFMABIBQkAVwUAAFkFAwBeBQAAYAUBAGMFAQBmBQIAagUSAH8FBQCGBQEAiQUCAI0FAACPBQAAkQUBAJQFAACWBQEAmQUAAJsFAwCgBR0AwAUwAPMFBAD/BQwAFgYEAB0GIwBGBgAASAYFAE8GAABRBgQAVwYCAFsGBABhBgEAZAYAAGYGBQBuBgIAcgYDAHcGBwCBBgEAiwYBAJQGAgCaBgoApgYAAKgGAACsBgMAsgYBALYGAQA="}],\
["polars_lazy",{"t":"CQCCCCPPGPPPPPPPPPPPPFPPPPPKPGPPPFPFFPPPPPPPPPPPPPPFPPPPPPFPPPPPPPPGPPPGKFPFIPPPPPPPPGKPPPIPPPPPPPKPPPPPPPPPPPPPFPPPPPFKPPPPPPPPPPPPPFPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPKPPPPPFPPPPPKKPPPPPPPPPFPPFPFPPPPPFPPPPPKPPPFPPFPPGGPNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONCNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNHNNONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNONNNNNNHHNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNHNNNHNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNHHOHHHHHHHNNHNNHHHHHHHHHHHHHHHHHHOONNNNHHHHHNOONHHNHHHHHHOOOHOOOOHOHHOHHHHOOHHHHOOONONNNNOOJJFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOIFKFFKFFFFIFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNOONNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNOONNNOONNNNNNMNNNNNNNNNNNNNNNNNNNNNONNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONNONNNNNNONNMNNOOOONNNNNNNNNOMNNMNNCOONOONNMNNOONNNNOOMNNOOONNNNNNNNONNNNNOONNNNNNONOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNMNNMNNNNNMNNNMNNNNNNNNNNNNNNNNNHHCCCFKNNNNNMNNNNNNNNFKKFNNNNNNNNNNNNNNMNMMOMNNNNONNNNNMNNNNNNNNHKFFPPPPPPPFPPPPPGFPFPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPPFKPPGFFFPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNOOOONOONNNONNNNNOOONONOOOMOMNONNNNNNNNNNNNNNNNOOOOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNOONOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","utils","Abs","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","BinaryExpr","BinaryExpr","BinaryUdfOutputField","Boolean","BooleanFunction","Business","Cast","Categorical","CategoricalNameSpace","Ceil","ChainedThen","ChainedWhen","Clip","Coalesce","Column","Columns","ConcatExpr","Correlation","Count","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DateOffset","DatetimeArgs","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","DurationArgs","Entropy","Eq","EqValidity","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","Exp","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","GetOutput","GroupsToRows","Gt","GtEq","Hash","Hist","Implode","Interpolate","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","Join","JoinOptions","KeepName","Kurtosis","Last","Len","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Min","MinHorizontal","Minus","Mode","Modulus","Multiply","NUnique","Name","Negate","Not","NotEq","NotEqValidity","Nth","NullCount","Operator","Or","Over","PctChange","PeakMax","PeakMin","Plus","Pow","QCut","Quantile","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Reshape","Reverse","Rolling","RollingCovOptions","RollingExpr","Round","RoundSF","SearchSorted","Selector","SeriesBinaryUdf","SeriesUdf","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Sort","SortBy","SpecialEq","Std","StringExpr","StrptimeOptions","StructExpr","StructNameSpace","SubPlan","Sum","SumHorizontal","TemporalExpr","Ternary","Then","ToPhysical","TopK","TopKBy","Trigonometry","TrueDivide","UdfSchema","Unique","UniqueCounts","UpperBound","UserDefinedFunction","ValueCounts","Var","When","Wildcard","Window","WindowMapping","WindowType","Xor","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_into_selector","_selector_add","_selector_and","_selector_sub","abs","add","agg_groups","alias","all","all","all","all","all_horizontal","allow_parallel","ambiguous","and","any","any","any","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_sort","arg_sort_by","arg_unique","arg_where","args","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","binary","binary_expr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","bottom_k_by","business_day_count","cache","call","call","call_udf","call_udf","call_unchecked","cast","cast","cat","cat","cbrt","ceil","clip","clip_max","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","contains","cos","cosh","cot","count","count_matches","count_matches","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","cumulative_eval","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","default","default","default","default","default","default","default","default","default","degrees","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diff","diff","div","dot","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","dt","dt","dtype_col","dtype_cols","duration","entropy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","eval","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","fill_nan","fill_null","fill_null_with_strategy","filter","first","first","first","flatten","float_type","floor","floor_div","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold_exprs","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_type","fun","function_with_options","functions","gather","gather","gather_every","gather_every","get","get","get","get_categories","get_field","get_field","get_fields_lens","get_output","get_schema","gt","gt_eq","has_multiple_outputs","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","head","head","hist","hour","hours","implode","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input_fields","int_range","int_ranges","interpolate","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_list_name_space","into_list_name_space","into_tree_formatter","is_between","is_column","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","is_not_null","is_null","is_null","is_regex_projection","is_simple_projection","is_unique","join","join","json_encode","keep","kurtosis","last","last","last","len","len","len","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","max","max","max","max","max_horizontal","mean","mean","mean","mean_horizontal","median","median","median","median","meta","microsecond","microseconds","milliseconds","min","min","min","min","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","n_unique","n_unique","name","name","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","new","new","new","new","nodes","nodes_owned","not","not","null_count","options","or","otherwise","otherwise","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","quantile","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","reshape","return_type","reverse","reverse","reverse","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_mean","rolling_median","rolling_min","rolling_quantile","rolling_skew","rolling_std","rolling_sum","rolling_var","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","sample_n","search_sorted","second","seconds","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","shift","shift","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","slice","sort","sort","sort","sort_by","spearman_rank_corr","sqrt","std","std","std","str","strict","strict_cast","string","struct_","sub","suffix","suffix_fields","sum","sum","sum","sum","sum_horizontal","super_type","tail","tail","tan","tanh","ternary_expr","then","then","time_ranges","time_unit","time_unit","time_zone","to_array","to_dot","to_field","to_list","to_lowercase","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_struct","to_struct","to_uppercase","top_k","top_k_by","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udf","undo_aliases","union","unique","unique","unique","unique_counts","unique_stable","unique_stable","unique_stable","upper_bound","value_counts","var","var","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","when","when","when","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fractional_seconds","with_hms","with_hms","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","output_type","partition_by","predicate","returns_scalar","right","sort_options","strict","truthy","allow_duplicates","base","base","bin_count","breaks","check_sorted","ddof","decimals","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","sort_options","sort_options","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","DatetimeArgs","DurationArgs","UnionArgs","__clone_box","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","borrow","borrow_mut","cast","clone","clone_into","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","default","deref","deref_mut","drop","dtype_col","dtype_cols","duration","fold_exprs","format_str","from","hour","hours","init","int_range","int_ranges","into","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","parallel","pearson_corr","quantile","rechunk","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","time_unit","time_zone","to_owned","to_supertypes","try_from","try_into","type_id","vzip","weeks","year","CALL_DF_UDF_PYTHON","CALL_SERIES_UDF_PYTHON","PythonFunction","PythonUdfExpression","__clone_box","borrow","borrow","borrow_mut","borrow_mut","call_udf","call_udf","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","get_output","init","init","into","into","new","serialize","to_owned","try_from","try_from","try_into","try_into","try_serialize","type_id","type_id","vzip","vzip","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","concat","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","explode","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","OptState","PathIterator","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_with_eager","agg","allow_parallel","allows_projection_pushdown","anonymous_scan","anti_join","apply","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","cache","cache","cache","cancel","cast","cast_all","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloud_options","cloud_options","cloud_options","cloud_options","coalesce","collect","collect_concurrently","comm_subexpr_elim","comm_subexpr_elim","comm_subplan_elim","comm_subplan_elim","concat_impl","concat_impl","concat_impl","count","cross_join","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nulls","eager","eager","explain","explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","file_caching","file_caching","fill_nan","fill_null","filter","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","first","fmt","force_parallel","from","from","from","from","from","from","from","from","from","from","from","from","get_current_optimizations","glob","glob","glob","glob","group_by","group_by_dynamic","group_by_stable","has_header","head","hive_options","how","infer_schema_length","init","init","init","init","init","init","init","init","init","init","inner_join","into","into","into","into","into","into","into","into","into","into","iter_paths","iter_paths","join","join_builder","join_nulls","last","lazy","lazy","left_join","left_on","limit","logical_plan","logical_plan","low_memory","low_memory","low_memory","map","map_python","max","mean","median","melt","memory_map","merge_sorted","min","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","name","new","new","new","new_paths","new_paths","null_count","on","optimize","outer_join","parallel","path","path","path","paths","paths","paths","pivot","predicate_pushdown","predicate_pushdown","profile","projection_pushdown","projection_pushdown","quantile","raise_if_empty","rechunk","rechunk","rechunk","rechunk","rechunk","rename","reverse","right_on","rolling","row_estimate","row_estimate","row_index","row_index","row_index","row_index","row_index","row_index","scan","scan_from_python_function","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","schema","schema","schema","select","select_seq","semi_join","shift","shift_and_fill","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","slice_pushdown","slice_pushdown","sort","sort_by_exprs","std","streaming","streaming","suffix","sum","tail","tail","to_alp","to_alp_optimized","to_dot","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top_k","truncate_ragged_lines","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unique","unique_stable","unnest","use_statistics","validate","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with","with_batch_size","with_cache","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_end_of_line_char","with_glob","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_missing_is_null","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_null_values","with_optimizations","with_path","with_path","with_path","with_paths","with_paths","with_paths","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_schema","with_schema","with_schema_modify","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_streaming","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","executors","expressions","planner","Dummy","Executor","borrow","borrow_mut","deref","deref_mut","drop","execute","execute","from","init","into","try_from","try_into","type_id","vzip","AggregationContext","PartitionedAggregation","PhysicalExpr","PhysicalIoHelper","as_expression","as_partitioned_aggregator","as_stats_evaluator","as_stats_evaluator","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","evaluate","evaluate_io","evaluate_on_groups","evaluate_partitioned","expr","finalize","fmt","fmt","from","from","has_window_function","init","init","into","into","is_literal","to_field","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","create_physical_plan","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Dense","Distinct","DslPlan","Duration","Duration","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","GroupBy","HConcat","HStack","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","Null","OneToMany","OneToOne","Ordinal","Outer","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","RollingGroupOptions","RollingOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","by","center","check_sorted","check_sorted","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed_window","closed_window","closed_window","cmp","coalesce","compare","compression","compression","compute_schema","data_pagesize_limit","days","days_only","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","describe","describe_tree_format","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dot","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","every","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_str","fn_params","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_datatype","group_by_dynamic","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","how","include_bom","include_boundaries","include_header","index_column","index_column","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_asof","is_constant_duration","is_full_days","is_zero","join_nulls","label","lit","lit","lit","maintain_order","maintain_order","maintain_order","maintain_order","materialize","method","min_periods","months","months_only","mul","n_rows","nanoseconds","needs_checks","negative","new","new","offset","offset","output_schema","parse","parsed_int","partial_cmp","period","period","predicate","rolling","row_group_size","scan","schema","schema","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_options","skip_rows","slice","start_by","statistics","suffix","suffix","to_alp","to_any_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validation","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","warn_if_unsorted","weeks","weeks_only","weights","window_size","with_coalesce","with_columns","aggs","apply","by_column","cache_hits","contexts","df","expr","exprs","file_info","file_options","function","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","offset","options","options","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","projection","right_on","scan_type","schema","schema","selection","slice","sort_options","data_type","high","low"],"q":[[0,"polars_lazy"],[6,"polars_lazy::dsl"],[1227,"polars_lazy::dsl::AggExpr"],[1234,"polars_lazy::dsl::BooleanFunction"],[1237,"polars_lazy::dsl::Expr"],[1271,"polars_lazy::dsl::FunctionExpr"],[1315,"polars_lazy::dsl::binary"],[1335,"polars_lazy::dsl::cat"],[1336,"polars_lazy::dsl::dt"],[1392,"polars_lazy::dsl::functions"],[1487,"polars_lazy::dsl::python_udf"],[1532,"polars_lazy::dsl::string"],[1594,"polars_lazy::dsl::udf"],[1600,"polars_lazy::frame"],[2031,"polars_lazy::frame::pivot"],[2033,"polars_lazy::physical_plan"],[2036,"polars_lazy::physical_plan::executors"],[2052,"polars_lazy::physical_plan::expressions"],[2095,"polars_lazy::physical_plan::planner"],[2096,"polars_lazy::prelude"],[2684,"polars_lazy::prelude::DslPlan"],[2737,"polars_lazy::prelude::LiteralValue"],[2740,"dyn_clone::sealed"],[2741,"polars_error"],[2742,"core::result"],[2743,"core::convert"],[2744,"core::convert"],[2745,"polars_core::series"],[2746,"core::option"],[2747,"core::ops::function"],[2748,"core::marker"],[2749,"core::marker"],[2750,"core::ops::function"],[2751,"polars_core::chunked_array::ops::sort::options"],[2752,"polars_core::chunked_array::ops::sort::options"],[2753,"alloc::vec"],[2754,"core::clone"],[2755,"alloc::string"],[2756,"polars_core::utils"],[2757,"polars_time::windows::group_by"],[2758,"polars_core::datatypes::time_unit"],[2759,"serde::de"],[2760,"polars_core::series::ops"],[2761,"core::marker"],[2762,"polars_core::chunked_array::ops"],[2763,"core::fmt"],[2764,"core::fmt"],[2765,"polars_plan::dsl::function_expr::strings"],[2766,"polars_plan::dsl::function_expr::binary"],[2767,"polars_plan::dsl::function_expr::business"],[2768,"polars_plan::dsl::function_expr::array"],[2769,"polars_plan::dsl::function_expr::datetime"],[2770,"polars_plan::dsl::function_expr::struct_"],[2771,"polars_plan::dsl::function_expr::list"],[2772,"polars_plan::dsl::function_expr::range"],[2773,"polars_plan::logical_plan::options"],[2774,"polars_core::schema"],[2775,"polars_plan::logical_plan"],[2776,"polars_core::datatypes::field"],[2777,"core::hash"],[2778,"polars_ops::chunked_array::interpolate"],[2779,"core::fmt"],[2780,"core::ops::function"],[2781,"polars_arrow::legacy::kernels::rolling::no_nulls"],[2782,"polars_core::chunked_array::ops::rolling_window"],[2783,"polars_core::datatypes"],[2784,"polars_core::chunked_array"],[2785,"core::marker"],[2786,"serde::ser"],[2787,"polars_core::series::series_trait"],[2788,"polars_ops::chunked_array::list::to_struct"],[2789,"core::any"],[2790,"polars_arrow::legacy::kernels::time"],[2791,"polars_core::frame"],[2792,"polars_error"],[2793,"pyo3::types::any"],[2794,"pyo3::instance"],[2795,"polars_core::schema"],[2796,"polars_utils::aliases"],[2797,"polars_io::cloud::options"],[2798,"polars_ops::frame::join::args"],[2799,"core::iter::traits::collect"],[2800,"polars_core::frame::explode"],[2801,"std::path"],[2802,"std::path"],[2803,"polars_utils::arena"],[2804,"polars_plan::logical_plan::aexpr"],[2805,"polars_utils::arena"],[2806,"pyo3::instance"],[2807,"polars_core::frame"],[2808,"polars_io::csv::read::options"],[2809,"polars_io::csv::read::options"],[2810,"polars_core::frame::group_by::proxy"],[2811,"core::fmt"],[2812,"chrono_tz::timezones"],[2813,"core::cmp"],[2814,"polars_plan::dot"],[2815,"ahash::random_state"],[2816,"hashbrown::map"],[2817,"polars_core::datatypes::any_value"],[2818,"chrono::naive::datetime"]],"i":[0,0,0,0,0,0,25,4,0,32,4,50,50,36,4,50,50,25,25,25,25,0,25,25,25,4,25,0,25,0,25,4,25,0,25,0,0,25,25,4,4,25,25,32,25,25,25,25,25,25,25,0,25,36,25,25,49,4,0,25,36,36,25,25,25,25,4,0,25,4,57,0,0,0,25,0,0,25,25,4,32,25,36,25,4,0,0,25,4,25,0,57,36,36,25,25,32,25,0,50,50,50,50,50,50,50,50,50,50,50,50,57,0,4,25,32,4,25,0,0,4,25,25,36,36,25,36,36,32,25,32,25,32,0,32,25,36,25,36,36,32,49,25,50,36,36,4,25,0,36,56,25,25,25,36,25,25,32,25,25,25,25,25,25,4,0,25,25,25,25,56,0,25,25,25,25,4,0,0,25,25,25,25,25,25,4,4,4,0,32,25,0,25,0,4,32,25,25,4,0,25,25,25,25,36,0,25,25,25,0,25,32,0,4,4,0,0,36,45,46,47,48,32,4,49,36,16,50,25,51,52,53,54,55,56,57,42,3,3,3,3,4,4,4,4,0,8,9,4,0,55,51,4,8,9,4,0,4,4,0,4,4,4,0,4,0,4,4,4,4,4,4,4,8,9,4,8,9,4,4,0,4,0,55,4,30,32,0,0,4,0,4,0,44,8,97,9,3,103,74,45,46,47,48,32,4,49,36,16,50,25,51,52,53,54,55,56,57,42,44,8,97,9,3,103,74,45,46,47,48,32,4,49,36,16,50,25,51,52,53,54,55,56,57,42,4,4,0,54,40,42,30,43,42,0,4,0,4,4,4,4,4,4,45,46,47,48,32,4,49,36,16,50,25,51,52,53,54,55,56,57,42,45,46,47,48,32,4,49,36,16,50,25,51,52,53,54,55,56,57,42,0,0,0,0,0,0,8,9,4,4,4,4,8,9,0,4,0,4,4,4,0,4,60,60,4,0,0,0,0,51,52,53,4,16,16,16,51,52,54,55,56,57,4,44,8,97,9,3,103,74,45,46,47,48,32,4,49,36,16,16,50,25,51,52,53,54,55,56,57,42,44,8,97,9,3,103,74,45,46,47,48,32,4,49,36,16,50,25,51,52,53,54,55,56,57,42,32,4,49,36,16,16,16,50,25,53,54,55,56,57,9,4,4,4,44,8,97,9,3,103,74,45,46,47,48,32,4,49,36,16,50,25,51,52,53,54,55,56,57,42,4,9,4,0,4,0,0,0,4,32,4,4,49,36,16,16,50,25,53,54,55,56,57,4,4,4,4,49,49,49,36,36,36,50,50,50,53,53,53,54,54,54,55,55,55,56,56,56,57,57,57,72,72,4,4,4,4,54,4,4,4,4,4,74,74,4,4,4,4,0,9,4,4,16,4,4,30,43,40,78,4,4,49,36,36,16,50,50,25,25,51,52,53,54,55,56,57,42,0,55,54,0,4,44,8,97,9,3,103,74,45,46,47,48,32,4,4,4,4,4,4,4,4,4,4,4,4,4,4,49,36,16,16,16,16,16,16,16,16,16,16,16,16,50,25,25,25,25,25,51,52,53,54,55,56,56,57,42,16,42,4,0,9,4,9,4,8,9,4,44,66,14,97,30,78,4,4,3,32,4,4,49,36,50,25,53,54,55,56,57,9,4,4,51,52,4,44,8,97,9,3,103,74,45,46,47,48,32,4,49,36,16,50,25,51,52,53,54,55,56,57,42,42,0,0,4,44,8,97,9,3,103,74,45,46,47,48,32,4,49,36,16,50,25,51,52,53,54,55,56,57,42,4,100,9,3,4,3,4,4,4,4,4,4,4,4,0,4,0,4,3,3,4,8,9,74,103,4,0,9,4,0,9,4,4,0,4,4,4,4,4,4,4,103,4,0,4,97,97,16,16,4,16,103,16,4,0,4,4,0,97,4,97,97,97,97,0,8,9,4,0,0,9,4,0,0,8,9,4,4,51,52,52,0,8,9,4,0,53,51,52,4,51,4,8,9,4,4,42,4,4,52,4,4,4,97,97,16,51,52,42,4,4,0,4,4,42,4,46,48,3,4,4,4,4,4,0,4,3,4,103,103,4,0,4,4,0,4,4,4,0,4,4,74,0,4,4,97,4,42,8,9,4,4,4,4,0,0,4,4,4,4,4,4,4,4,4,4,4,3,4,4,55,55,16,4,9,9,4,4,51,52,32,4,49,36,16,16,16,50,25,53,54,55,56,57,9,9,4,9,8,9,4,4,4,4,4,4,4,4,9,4,8,9,4,4,0,4,8,9,4,4,54,4,0,4,4,103,103,0,8,9,4,0,16,9,4,4,4,0,45,47,0,51,52,51,9,4,4,8,103,45,46,47,48,32,4,49,36,16,50,25,51,52,53,54,55,56,57,42,4,97,4,36,50,25,8,9,103,4,4,44,8,97,9,3,103,74,45,46,47,48,32,4,49,36,16,50,25,51,52,53,54,55,56,57,42,44,8,97,9,3,103,74,45,46,47,48,32,4,49,36,16,50,25,51,52,53,54,55,56,57,42,97,97,4,97,30,44,8,97,9,3,103,74,45,46,47,48,32,4,49,36,16,50,25,51,52,53,54,55,56,57,42,0,3,9,8,9,4,4,8,9,4,4,4,8,9,4,44,8,97,9,3,103,74,45,46,47,48,32,4,49,36,16,50,25,51,52,53,54,55,56,57,42,52,0,46,48,53,51,51,52,97,52,51,52,51,52,51,52,52,51,52,51,52,97,97,51,52,51,51,52,51,4,51,200,201,202,200,201,202,200,203,204,205,206,207,208,208,209,210,206,211,212,213,214,215,211,210,213,207,216,215,217,216,216,217,209,213,214,215,215,214,212,210,217,206,208,212,218,219,220,221,222,223,224,225,226,223,227,227,221,222,218,221,222,218,222,218,228,229,224,230,231,219,231,232,233,234,235,236,218,237,238,239,240,241,242,232,230,236,243,244,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,0,0,0,124,0,0,51,0,0,0,0,0,0,0,124,124,0,124,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,52,124,124,124,124,0,0,0,0,0,124,51,52,124,0,0,124,0,0,0,0,0,0,51,52,52,0,51,52,51,52,0,124,0,0,124,0,0,0,0,51,52,0,0,0,0,51,52,51,124,124,124,124,124,124,52,51,0,0,0,0,130,106,130,106,130,106,130,130,130,106,130,106,130,130,106,130,130,130,130,130,130,106,130,130,106,106,130,106,130,106,130,130,106,130,106,130,106,106,130,106,130,0,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,0,42,42,42,42,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,141,128,134,138,143,144,136,145,146,128,134,135,136,128,128,134,136,135,141,128,134,138,143,144,136,145,146,135,141,128,134,138,143,144,136,145,146,128,128,144,145,141,128,128,141,128,134,138,143,144,136,145,146,141,128,134,138,143,144,136,145,146,147,147,144,145,135,128,128,156,146,156,146,147,147,143,128,128,128,138,144,145,146,135,141,128,134,138,143,144,136,145,146,135,141,128,134,138,143,144,136,145,146,128,128,128,128,135,141,141,128,128,134,138,143,144,136,145,146,128,156,146,128,128,156,146,141,128,141,156,146,128,128,128,135,147,147,147,143,136,128,146,135,135,141,128,128,128,134,138,143,144,136,145,146,128,147,147,143,145,128,128,128,143,134,145,135,138,135,141,128,134,138,143,144,136,145,146,128,135,141,128,134,138,143,144,136,145,146,147,147,128,128,135,128,155,128,128,135,128,128,134,143,136,145,128,128,128,128,128,128,144,128,128,147,143,136,138,144,145,138,135,143,136,143,136,128,135,128,128,145,147,143,136,147,143,136,0,156,146,128,156,146,128,143,147,143,136,144,145,128,128,135,128,156,146,147,143,136,138,144,145,136,128,128,128,128,128,128,136,138,128,128,128,128,128,156,146,128,128,128,128,128,128,138,128,156,146,128,128,128,156,146,135,128,128,134,128,128,128,141,128,134,138,143,144,136,145,146,128,143,135,141,128,134,138,143,144,136,145,146,135,141,128,134,138,143,144,136,145,146,156,146,135,141,128,134,138,143,144,136,145,146,128,128,128,145,135,128,135,141,128,134,138,143,144,136,145,146,135,136,143,128,128,128,128,128,143,128,143,143,143,143,143,143,136,143,136,143,147,143,143,136,136,143,128,147,143,136,147,143,136,128,128,143,147,143,136,128,147,128,143,143,136,136,143,136,143,143,128,143,143,128,128,143,128,128,0,0,0,0,0,0,0,179,179,179,179,179,178,179,179,179,179,179,179,179,179,0,0,0,0,180,180,180,183,183,185,183,185,183,185,183,185,183,185,180,183,180,181,183,181,180,185,183,185,183,183,185,183,185,180,180,183,185,183,185,183,185,183,185,0,0,0,0,152,152,189,190,190,68,152,0,68,190,190,189,68,0,0,190,0,68,68,190,190,190,68,68,68,152,190,190,190,190,190,0,68,0,0,0,0,152,0,0,174,174,68,189,189,0,0,190,174,174,189,152,0,0,68,190,0,0,0,0,68,68,152,190,68,68,68,190,190,190,190,190,190,190,68,115,151,110,63,168,169,170,154,152,174,171,189,109,190,191,68,63,63,63,137,137,137,137,168,115,151,110,63,166,168,169,197,170,154,152,174,171,189,109,190,191,68,115,151,110,63,166,168,169,197,170,154,152,174,171,189,109,190,191,68,115,115,151,110,115,151,110,63,168,169,170,154,152,174,171,189,109,190,191,68,115,151,110,63,168,169,170,154,152,174,171,189,109,190,191,68,115,151,110,63,154,63,169,171,68,171,63,63,115,151,110,168,169,170,154,174,171,109,191,68,115,151,110,63,166,168,169,197,170,154,152,174,171,189,109,190,191,68,115,151,110,63,166,168,169,197,170,154,152,174,171,189,109,190,191,68,109,68,68,115,151,110,63,168,169,170,154,152,174,171,189,109,190,191,68,68,115,151,110,63,166,168,169,197,170,154,152,174,171,189,109,190,191,68,115,151,110,63,168,169,170,154,152,174,171,189,109,190,191,151,151,151,110,110,110,63,63,63,168,168,168,169,169,169,170,170,170,154,154,154,152,152,152,174,174,174,171,171,171,191,191,191,151,115,151,110,63,63,137,168,169,170,154,152,152,174,174,171,189,109,190,191,68,191,115,115,151,110,63,166,168,169,197,170,154,154,152,174,171,189,109,190,191,68,190,196,151,110,63,168,169,170,154,152,174,171,189,109,190,191,154,168,151,168,151,110,115,151,110,63,166,168,169,197,170,154,152,174,171,189,109,190,191,68,115,151,110,63,166,168,169,197,170,154,152,174,171,189,109,190,191,68,152,63,63,63,154,151,104,197,190,168,169,170,171,190,109,115,63,63,63,166,63,174,63,63,154,151,110,166,63,63,63,151,110,166,196,171,137,137,166,115,151,110,63,168,169,170,154,152,174,171,189,109,190,191,68,168,191,154,151,171,154,154,68,190,115,151,110,63,168,169,170,154,152,174,171,189,109,190,191,68,63,152,174,63,63,63,63,115,151,110,63,166,168,169,197,170,154,152,174,171,189,109,190,190,191,68,115,151,110,63,166,168,169,197,170,154,152,174,171,189,109,190,191,68,115,151,110,63,166,168,169,197,170,154,152,174,171,189,109,190,191,68,154,115,151,110,63,166,168,169,197,170,154,152,174,171,189,109,190,191,68,115,63,63,115,115,154,166,245,245,246,247,248,249,250,251,252,252,253,247,254,247,250,245,251,255,246,256,253,248,257,258,258,259,260,245,258,256,245,256,261,250,245,258,251,255,259,260,249,252,257,254,252,249,258,252,249,260,249,246,246,262,262,262],"f":"``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{cb}d{}}000000000000000000{fh}{{fh}{{l{hj}}}}00{hh}{{hh}}1{{hn}h}{{}h}{A`h}{Abh}{{hAd}h}{c{{l{hj}}}{{Ah{{Af{h}}}}}}``{{hc}h{{Aj{h}}}}4321{{hcAd}h{{Aj{h}}}}{{hc{B`{{An{Al}}}}}h{{Bh{Bb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{{hhc{B`{{An{Al}}}}}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{{hc}{{l{Bnj}}}{{C`{h}{{Bd{{l{Bnj}}}}}}}}{{hc{Af{h}}{B`{{An{Al}}}}}h{{Bh{{Af{Bb}}}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{{hCb{Af{h}}AdAd}h}{{ce{B`{{An{Al}}}}Ad}h{{Bh{{Af{Bb}}}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}{{Ah{{Af{h}}}}}}?{{hhCdCf}h}{hh}0000{{hh}h}1>=1>=1{{hCh}h}{{cCj}h{{Ah{{Af{h}}}}}}3{ch{{Aj{h}}}}`{hA`}{ClCn}{D`h}{{{Db{h}}}h}{nh}{{h{Bf{Dd}}}h}`{hDf}{{hDhh}h}{ce{}{}}000000000000000000000000000000000000000000000000000{{hhCh}h}{{hcgCj}h{{Aj{h}}}{{Aj{h}}Dj}{{Ah{{Af{e}}}}}}{{hh{Dl{Ad}}{Db{Dn}}}h}`{{E`n}{{l{Ebj}}}}{{Ed{Db{h}}}{{l{hj}}}}{{Cl{Af{Bb}}}{{l{{Bf{Bb}}j}}}}{{EfBbBb}{{l{Bbj}}}}{{Ed{Db{h}}}h}{{hCf}h}0`{hEh}{hh}0{{hhh}h}{{hh}h}0{EjEj}{ElEl}{EnEn}{F`F`}{D`D`}7{FbFb}{DhDh}{{{B`{c}}}{{B`{c}}}Dj}{FdFd}{CbCb}{FfFf}{FhFh}{FjFj}{FlFl}{FnFn}{G`G`}{GbGb}{EdEd}{{ce}d{}{}}000000000000000000{{{Af{h}}}h}{nh}{ch{{Gd{Eb}}}}{{eAd}{{l{hj}}}{{Aj{h}}Dj}{{Ah{{Af{c}}}}}}{e{{l{hj}}}{{Aj{h}}Dj}{{Ah{{Af{c}}}}}}{{cnAd}h{{Ah{{Af{h}}}}}}{{A`c}h{{Aj{h}}}}{{Abc}h{{Aj{h}}}}{hh}00021{{hhGf}h}{{hAd}h}{{hceAd}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlDj}{{Ah{{Af{h}}}}}}111{{ce}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlDj}{{Ah{{Af{h}}}}}}2{{GhhGjAd}h}0{{h{Db{Gl}}{Bf{{Db{Eb}}}}AdAd}h}{{hhGnH`{Bf{Hb}}{Bf{Eb}}}h}{Ffh}11```{{}h}{{}{{B`{{An{Ef}}}}}}{{}{{B`{{An{Hd}}}}}}{{}{{B`{{An{Al}}}}}}{{}Ff}{{}Fh}{{}Fl}{{}Fn}{{}G`}{{}Gb}{hh}{Gjc{}}000000000000000{{{B`{c}}}{}{}}111111111111111111111111111111111111{c{{l{D`}}}Hf}{c{{l{h}}}Hf}{c{{l{Fb}}}Hf}{c{{l{Dh}}}Hf}{c{{l{{B`{{An{Cl}}}}}}}Hf}{c{{l{{B`{{An{Hh}}}}}}}Hf}{c{{l{{B`{Bb}}}}}Hf}{c{{l{Fd}}}Hf}{c{{l{Cb}}}Hf}{c{{l{Fj}}}Hf}{c{{l{Fl}}}Hf}{c{{l{Fn}}}Hf}{c{{l{G`}}}Hf}{c{{l{Gb}}}Hf}{{AbCdHj}h}{{hCdHj}h}{{hh}}{{hc}h{{Aj{h}}}}{Gjd}0000000000000000000000000{hh}{Abh}1`{hHl}{Cfh}{ch{{Ah{{Af{Cf}}}}}}{Fhh}{{hGlAd}h}{{D`D`}Ad}{{hh}Ad}:{{FbFb}Ad}{{DhDh}Ad}{{{B`{Bb}}{B`{Bb}}}Ad}{{{B`{{An{c}}}}{B`{{An{c}}}}}AdHn}{{FdFd}Ad}{{CbCb}Ad}{{FjFj}Ad}{{FlFl}Ad}{{FnFn}Ad}{{G`G`}Ad}{{GbGb}Ad}{{hc}h{{Aj{h}}}}{{ce}Ad{}{}}00000000000000000000000000{{I`hAd}h}0{{hIb}h}{{hhGnAd}h}11`{{hc}h{{Gd{Eb}}}}{{hc}h{{Ah{{Af{Cf}}}}}}{hh}0{{hhh}h}{{IdCd}h}{{Idn}h}::{{hIf}h};{{}h}{Abh}66{{}{{B`{{An{Al}}}}}}7{{hh}h}{{ClIh}{{l{dIj}}}}{{EfIh}{{l{dIj}}}}{{E`Ih}{{l{dIj}}}}{{IlIh}{{l{dIj}}}}{{hIh}{{l{dIj}}}}0{{FbIh}{{l{dIj}}}}{{DhIh}{{l{dIj}}}}0{{{B`{c}}Ih}{{l{dIj}}}{}}{{FdIh}{{l{dIj}}}}0{{CbIh}{{l{dIj}}}}0{{FfIh}{{l{dIj}}}}{{FhIh}{{l{dIj}}}}{{FjIh}{{l{dIj}}}}{{FlIh}{{l{dIj}}}}{{FnIh}{{l{dIj}}}}{{G`Ih}{{l{dIj}}}}{{GbIh}{{l{dIj}}}}{{EdIh}{{l{dIj}}}}{{hce}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlDj}{{Ah{{Af{h}}}}}}``{{nc}{{l{hj}}}{{Ah{{Af{h}}}}}}{{h{Bf{Dd}}}h}{cc{}}00000000000{Glh}{Dnh}{nh}{Inh}{Cdh}{J`h}{Ddh}{D`h}8{Jbh}{Gfh}{Adh}{Jdh}{Jfh}=={Jh{{B`{{An{Cl}}}}}}>{Jj{{B`{{An{Cl}}}}}}{Cb{{B`{{An{Cl}}}}}}{Fd{{B`{{An{Cl}}}}}}{Jl{{B`{{An{Cl}}}}}}{Jn{{B`{{An{Cl}}}}}}{K`{{B`{{An{Cl}}}}}}{Kb{{B`{{An{Cl}}}}}}{Kd{{B`{{An{Cl}}}}}}{Kf{{B`{{An{Cl}}}}}}{Kh{{B`{{An{Cl}}}}}}{cc{}}{JlCb}1{JhCb}{JjCb}{FdCb}44444{GbG`}555{Cf{{B`{{An{Al}}}}}}`{{hc{B`{{An{Al}}}}Kj}h{{Bh{Bb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}`{{AbhAd}h}{{hc}h{{Aj{h}}}}{{Abhh}h}{{hGjGj}h}{{A`hAd}h}43{Ehh}{{HdKlKnL`L`}{{Bf{L`}}}}{{AlKlKn{Af{L`}}}L`}{LbGj}{Cl{{Bf{{B`{{An{Al}}}}}}}}{{IlKl}{{l{{An{Kl}}j}}}}99{fAd}{{D`c}dLd}{{hc}dLd}{{hDdDdDdDd}h}{{Fbc}dLd}{{Dhc}dLd}{{Fdc}dLd}{{Cbc}dLd}{{Fjc}dLd}{{Flc}dLd}{{Fnc}dLd}{{G`c}dLd}{{Gbc}dLd}{{Abh}h}{{h{Bf{Gj}}}h}{{h{Bf{h}}{Bf{Gj}}AdAd}h}``{hh}{{}Gj}0000000000000000000000000`{{hhCdCf}h}{{hhh}h}{{hLf}h}{ce{}{}}0000000000000000000000000{h}{LhAb}{AbAb}{f{{l{{`{Lj}}j}}}}{{hccLl}h{{Aj{h}}}}{fAd};;;{{hc}h{{Aj{h}}}}<<<<<<<<11<{{A`hAd}h}{{AbhAd}h}{Idh}{Lnh}{{hAdAd}h}{{}h}{Abh}{hh}210{hAb}{chM`}{{hGl}h}3;;3;;{{Lnc}h{{Bh{n}{{Bd{{l{Ebj}}}}}}BjBl}}{{hc{B`{{An{Al}}}}}h{{Bh{Bb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{{hhc{B`{{An{Al}}}}}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{{hc}{{l{hj}}}{{C`{h}{{Bd{{l{hj}}}}}}}}{{Lb{Bf{Eb}}}{{l{L`j}}}}{{Lbc}{{l{L`j}}}{{Mb{Cf}{{Bd{Cf}}}}}}{c{{B`{{An{Al}}}}}{{Bh{Cf}{{Bd{Cf}}}}BjBl}}{c{{B`{{An{Al}}}}}{{Bh{{Af{Cf}}}{{Bd{Cf}}}}BjBl}}{{hc}h{{C`{h}{{Bd{h}}}}}}{c{{B`{{An{Al}}}}}{{Bh{L`}{{Bd{L`}}}}BjBl}}{{Ln{An{Bh}}}h}{c{{B`{{An{Al}}}}}{{Bh{{Af{L`}}}{{Bd{L`}}}}BjBl}}:{{ce{B`{{An{Al}}}}}h{{Bh{{Af{Bb}}}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}{{Ah{{Af{h}}}}}}{{hc{Af{h}}{B`{{An{Al}}}}}h{{Bh{{Af{Bb}}}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{{hCb{Af{h}}AdAd}h}2{Lb{{l{L`j}}}}{{hMdAd}h}1111{nh}{A`h}{Abh}{hh}{c{{l{hj}}}{{Ah{{Af{h}}}}}}42104321{hf}```54321```2`{{hh}}543{hLn}`44`{h}{{hc}h{{Aj{h}}}}0;{{{Af{L`}}}Lb}{c{{B`{c}}}{}}{{hhh}Ff}{{}Fh}{{n{Db{L`}}{B`{{An{Al}}}}c}EdCl}{{h{Mf{h}}}d}0<<<`6{{Elc}h{{Aj{h}}}}{{F`c}h{{Aj{h}}}}{f{{l{{An{n}}j}}}}{{he}h{{Aj{h}}Dj}{{Ah{{Af{c}}}}}}{{heGb}h{{Aj{h}}Dj}{{Ah{{Af{c}}}}}}{{hh}h}{hh}0{{hhGf}h}{{}h}{f{{Db{h}}}}{{hc}h{{Aj{h}}}}{{Lnn}h}05`{{h{Db{Gl}}{Bf{{Db{Eb}}}}AdAdAd}h}{{hGj{Bf{{Db{Eb}}}}AdAdAd}h}{{nhMh}h}{{hhMh}h}9{{hMj{Bf{Dd}}}h}{{ce}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlDj}{{Ah{{Af{h}}}}}}{{hAd}h}{{hh}}{{Id{Db{Eb}}}h}{{ch}h{{Aj{h}}}};{{hcc{Bf{c}}{Bf{Cf}}}h{{Aj{h}}}}{{Lb{Bf{Cf}}}{{l{L`j}}}}{{h{Af{Cd}}}h}`{A`h}{Abh}{hh}00{{hMl}h}{{hhFj}h}0{{h{An{Bh}}{B`{{An{Al}}}}Mn}h}{{hGjc}h{{C`{{Nb{N`}}}{{Bd{{Bf{Gl}}}}}}BjBlNd}}{{hNf}h}000{{hMhGlNf}h}{{hGjAd}h}222{f{{Db{{An{n}}}}}}{{hJ`}h}{{hDn}h}``{{}{{B`{{An{Al}}}}}}{{hhAdAd{Bf{Dd}}}h}{{AbhAdAd{Bf{Dd}}}h}01{{hcNh}h{{Aj{h}}}}``{{D`c}lNj}{{hc}lNj}{{Fbc}lNj}{{Dhc}lNj}{{{B`{{An{Cl}}}}c}lNj}{{{B`{{An{Hh}}}}c}lNj}{{{B`{Bb}}c}lNj}{{Fdc}lNj}{{Cbc}lNj}{{Fjc}lNj}{{Flc}lNj}{{Fnc}lNj}{{G`c}lNj}{{Gbc}lNj}{{Abc}h{{Aj{h}}}}0{{hNl}h}1{{A`h}h}{{Abh}h}{{hh}h}{{hce}h{{Aj{h}}}{{Aj{h}}}}{hh}{{h{Bf{Dd}}}h}111{{hAd}h}{{Abhh}h}4{{A`Ch}h}{{AbCh}h}{{hCh}h}{{heCj}h{{Aj{h}}Dj}{{Ah{{Af{c}}}}}}{{hhGfAd}h}8{{A`Gf}h}{{AbGf}h}{{hGf}h}{hNn}`{{hCf}h}`{hId}{{hh}}{{Lnn}h}0{nh}{A`h}{Abh}{hh}{c{{l{hj}}}{{Ah{{Af{h}}}}}}{{}{{B`{{An{Al}}}}}}{{Abh}h}{{h{Bf{Gj}}}h}44{{hhh}h}{{Ejc}El{{Aj{h}}}}{{Enc}F`{{Aj{h}}}}{{hhGnH`}h}```{{AbGj}h}{h{{l{Ebj}}}}{{hKlKn}{{l{L`j}}}}={Lnh}{ce{}{}}000000000000000000={Lb{{l{L`j}}}}{cEb{}}000{{A`{Bf{{An{Bh}}}}}h}{{AbO`{Bf{{An{Bh}}}}Gj}h}5{{hhCh}h}{{hcgCj}h{{Aj{h}}}{{Aj{h}}Dj}{{Ah{{Af{e}}}}}}{c{{l{e}}}{}{}}000000000000000000000000000000000000000000000000000{{Lbc}{{l{L`j}}}{{Mb{Cf}{{Bd{{l{Cfj}}}}}}}}{{Lbc}{{l{L`j}}}{{Mb{{Af{Cf}}}{{Bd{{l{Cfj}}}}}}}}{{hc}{{l{hj}}}{{C`{h}{{Bd{{l{hj}}}}}}}}{{Lbc}{{l{L`j}}}{{Mb{L`}{{Bd{{l{L`j}}}}}}}}{{Cl{Db{Gf}}}{{l{dj}}}}{cOb{}}0000000000000000000000000`{fh}{{Abc}h{{Aj{h}}}}{A`h}{Abh}{hh}02100{{hAdAd}h}{{A`Gf}h}{{AbGf}h}{{hGf}h}{ce{}{}}0000000000000000000000000`{cEj{{Aj{h}}}}{{Elc}En{{Aj{h}}}}{{F`c}En{{Aj{h}}}}`{{Ffh}Ff}0{{Fhh}Fh}{{LbCf}{{l{L`j}}}}{{Fhhhh}Fh}{{Ffhhh}Ff}1434334343{{Lb{Bf{Cf}}}{{l{L`j}}}}{Lb{{l{L`j}}}}65{{FfHb}Ff}{{Ff{Bf{Eb}}}Ff}78{{hc}h{{Aj{h}}}}``````````````````````````````````````````````````````````````````````````````````````````{{DfAd}h}{Dfh}??{{Dfh}h}{Gjc{}}0{Gjd}2{cc{}}54{{}Gj}{ce{}{}}5{c{{l{e}}}{}{}}0{cOb{}}2``{{Hlh{Dl{Ad}}{Db{Dn}}Od}h}{Hlh}44{{HlHb}h}1{{HlhHb}h}{{HlEb}h}333;;:393873333333333{{Hlh}h}44{{Hl{Bf{Eb}}hOf}h}{{Hlhc}h{{Ah{n}}}}6{{Hln}h}7607777777{{HlhEb}h};;:<8878```{{cb}d{}}{{}h}{c{{l{hj}}}{{Ah{{Af{h}}}}}}`0{{hhc{B`{{An{Al}}}}}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{{hhCdCf}h}{{cCj}h{{Ah{{Af{h}}}}}}{ch{{Aj{h}}}}{{{Db{h}}}h}{nh}{ce{}{}}0{{hCf}h}{OhOh}{{ce}d{}{}}{{{Af{h}}}h}5{c{{Ol{{Db{Oj}}}}}{{A@b{}{{On{A@`}}}}}}{ch{{Gd{Eb}}}}{{cOh}{{Ol{A@`}}}{{Ah{{Af{A@`}}}}}}{{eAd}{{l{hj}}}{{Aj{h}}Dj}{{Ah{{Af{c}}}}}}11{e{{l{hj}}}{{Aj{h}}Dj}{{Ah{{Af{c}}}}}}{{cnAd}h{{Ah{{Af{h}}}}}}{{hhGf}h}{{hceAd}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlDj}{{Ah{{Af{h}}}}}}{{ce}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlDj}{{Ah{{Af{h}}}}}}{{hhGnH`{Bf{Hb}}{Bf{Eb}}}h}0{Ffh}11``{{}Oh}{Gjc{}}0{Gjd}{Cfh}{ch{{Ah{{Af{Cf}}}}}}{Fhh}{{hce}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlDj}{{Ah{{Af{h}}}}}}{{nc}{{l{hj}}}{{Ah{{Af{h}}}}}}{cc{}}``{{}Gj}{{hhCdCf}h}{{hhh}h}{ce{}{}}{hh}0{{hhc{B`{{An{Al}}}}}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{nh}00```0````2`{{hhGf}h}{{nhMh}h}`{{ce}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlDj}{{Ah{{Af{h}}}}}}{{ch}h{{Aj{h}}}}{{hhFj}h}0``{{hhGfAd}h}6{{hhGnH`}h}0```:`{c{{l{e}}}{}{}}0{cOb{}}<``````{{cb}d{}}===={{Md{Af{Bb}}}{{l{{Bf{Bb}}j}}}}{{A@dOj}{{l{Ojj}}}}{A@dA@d}{{ce}d{}{}}{Gjc{}}000{c{{l{A@d}}}Hf}{Gjd}0{{A@dA@d}Ad}{{ce}Ad{}{}}00{{A@dIh}{{l{dIj}}}}{cc{}}0{{{A@h{A@f}}}A@d}{Md{{Bf{{B`{{An{Al}}}}}}}}{{}Gj}0{ce{}{}}0{{{A@h{A@f}}{Bf{Cf}}Ad}Md}{{A@dc}lNj}2{c{{l{e}}}{}{}}000{{Md{Db{Gf}}}{{l{dj}}}}{cOb{}}055`{{NnAd}h}{Nnh}77{{NnnAd}h}{{NnhAd}h}{{Nnh}h}1{Gjc{}}0{Gjd}25{{NnhGj}h}3{{Nnn}{{l{hj}}}}54{cc{}}598{{}Gj}{ce{}{}}{{Nn{Bf{Cf}}{Bf{Gj}}}h}8;;{{NnGjA@j}h}0{{NnhhAd}h}0{{NnhhAdCd}h}>{{Nnhh}h}<99<9<<<<<<{{NnCfFlh}h}={{NnFl}h}{{Nn{Bf{Hb}}{Bf{Eb}}Flh}h}{{NnGj}h}{{NnhAd}h}{Nnh}400{c{{l{e}}}{}{}}0{cOb{}}={{Nnh}h}````````````````````{{cb}d{}}00000000{{A@`Ad}A@`}{{A@lc}A@`{{Ah{{Af{h}}}}}}{{A@nAd}A@n}{AA`Ad}{{{An{AAb}}AAd}{{Ol{A@`}}}}{{A@`A@`cc}A@`{{Aj{h}}}}{{A@lcAAf}A@`{{Bh{Oj}{{Bd{{Ol{Oj}}}}}}BjBl}}{AA`Cn}{ce{}{}}0000000000000000000{{A@`AAhcCj}A@`{{Ah{{Af{h}}}}}}{A@`A@`}``{AAjd}{{A@`{AAl{nCf}}Ad}A@`}{{A@`CfAd}A@`}{AAjAAj}4{A@lA@l}{AAdAAd}{AAnAAn}{AB`AB`}{AA`AA`}{ABbABb}{ABdABd}{{ce}d{}{}}00000000{ABf{{Bf{ABh}}}}0``{{A@nABj}A@n}{A@`{{Ol{Oj}}}}{A@`{{Ol{AAj}}}}````{{ABf{Db{A@`}}}{{Ol{A@`}}}}0{{AAn{Db{A@`}}}{{Ol{A@`}}}}{A@`A@`}{{A@`A@`}A@`}{{}A@`}{{}AAd}{{}AB`}{{}ABb}{{}ABd}{Gjc{}}0000000000000000000{A@`{{Ol{Eb}}}}0{A@`Eb}0{Gjd}0{AAjd}1{{A@`e}A@`{{Ah{n}}}{{ABl{}{{On{c}}}}}}2222222{{A@`{Bf{{Db{h}}}}}A@`}``{{A@`Ad}{{Ol{Eb}}}}{{A@`e}A@`{{Aj{h}}Dj}{{Ah{{Af{c}}}}}}``{AAj{{Bf{{Ol{Oj}}}}}}{{A@`Gj}{{Ol{Oj}}}}{AAj{{Ol{Oj}}}}``{{A@`c}A@`{{Aj{h}}}}0{{A@`h}A@`}{A@nA@`}{ABf{{Ol{A@`}}}}00{AAn{{Ol{A@`}}}}{AA`{{Ol{A@`}}}}{A@`A@`}{{ABdIh}{{l{dIj}}}}{{A@nAd}A@n}{cc{}}0{HhA@`}1{A@lA@`}2222222{A@`ABd}{ABfAd}0{AAnAd}`{{A@`e}A@l{{Aj{h}}Dj}{{Ah{{Af{c}}}}}}{{A@`hcABn}A@l{{Ah{{Af{h}}}}}}1{{AAnAd}AAn}{{A@l{Bf{Gj}}}A@`}`{{A@nAC`}A@n}`{{}Gj}000000000{{A@`A@`cc}A@`{{Aj{h}}}}{ce{}{}}000000000{ABf{{Ol{{Bf{ACb}}}}}}0{{A@`A@`ccACd}A@`{{Ah{{Af{h}}}}}}{A@`A@n}{{A@nAd}A@n}{A@`A@`}{ACfA@`}17{{A@nc}A@n{{Ah{{Af{h}}}}}}{{A@`AAh}A@`}``={{AA`Ad}AA`}`{{A@`cACh{Bf{{An{Il}}}}{Bf{n}}}A@`{{Bh{Oj}{{Bd{{Ol{Oj}}}}}}BjBl}}{{A@`A@dACh{Bf{AAf}}Ad}A@`}666{{A@`ACj}A@`}`{{A@`A@`n}{{Ol{A@`}}}}8{ABf{{Bf{Gj}}}}{AAn{{Bf{Gj}}}}{AA`{{Bf{Gj}}}}````={cAAn{{Ah{ACl}}}}{cAA`{{Ah{ACl}}}}{{{An{{Af{ACn}}}}}AAn}{{{An{{Af{ACn}}}}}AA`}?={{A@`{ADb{AD`}}{ADb{ADd}}}{{Ol{ADf}}}}{{A@`A@`cc}A@`{{Aj{h}}}}`{ABfACl}{AAnACl}{AA`ACl}{ABf{{Af{ACn}}}}{AAn{{Af{ACn}}}}{AA`{{Af{ACn}}}}```{A@`{{Ol{{ADh{OjOj}}}}}}``{{A@`hMh}A@`}{{AAnAd}AAn}{ABfAd}{AAnAd}{AA`Ad}``{{A@`ei}A@`{{Ah{n}}}{{ABl{}{{On{c}}}}}{{Ah{n}}}{{ABl{}{{On{g}}}}}}{A@`A@`}{{A@nc}A@n{{Ah{{Af{h}}}}}}{{A@`hcMl}A@l{{Ah{{Af{h}}}}}}``{ABf{{Bf{ADj}}}}{AAn{{Bf{ADj}}}}{AA`{{Bf{ADj}}}}```{{AA`ADl}{{Ol{Oj}}}}{{KlADnAd}A@`}{{cAB`}{{Ol{A@`}}}{{Ah{ACl}}}}{{{An{{Af{ACn}}}}AB`}{{Ol{A@`}}}}{{cABb}{{Ol{A@`}}}{{Ah{ACl}}}}{{{An{{Af{ACn}}}}ABb}{{Ol{A@`}}}}{A@`{{Ol{AAf}}}}{{AA`{Bf{Gj}}}{{Ol{AAf}}}}`{{A@`c}A@`{{Ah{{Af{h}}}}}}0{{A@`A@`cc}A@`{{Aj{h}}}}{{A@`c}A@`{{Aj{h}}}}{{A@`ce}A@`{{Aj{h}}}{{Aj{h}}}}``{{A@`ACnAE`}{{Ol{d}}}}{{A@`ACnAEb}{{Ol{d}}}}{{A@`Eb{Bf{ABh}}AEb}{{Ol{d}}}}{{A@`ACnAEd}{{Ol{d}}}}{{A@`ACnAEf}{{Ol{d}}}}{{A@`Eb{Bf{ABh}}AEf}{{Ol{d}}}}`{{A@`CdAAh}A@`}``{{A@`cCj}A@`{{Gd{AEh}}}}{{A@`cCj}A@`{{Ah{{Af{h}}}}}}{{A@`Gf}A@`}``{{A@nc}A@n{{Ah{n}}}}{A@`A@`}{{A@`AAh}A@`}{{A@l{Bf{Gj}}}A@`}{A@`{{Ol{{ADh{ADf{ADb{AD`}}{ADb{ADd}}}}}}}}0{{A@`Ad}{{Ol{Eb}}}}{ce{}{}}00000000{{A@`AAhcCj}A@`{{Ah{{Af{h}}}}}}{{AAnAd}AAn}{c{{l{e}}}{}{}}0000000000000000000``{cOb{}}000000000{{A@`{Bf{{Db{Eb}}}}AEj}A@`}0{{A@`e}A@`{{Ah{n}}}{{ABl{}{{On{c}}}}}}`{{A@nAEl}A@n}>7777777777{{A@nA@`}A@n}{{AA`{Bf{AEn}}}AA`}7{{A@`h}A@`}{{A@`c}A@`{{Ah{{Af{h}}}}}}0{{A@`Ad}A@`}0{{AAn{Bf{n}}}AAn}{{A@`c}A@`{{Ah{{Af{A@`}}}}}}<{{AAn{Bf{AAf}}}AAn}{{AAnAF`}AAn}{{AAnGf}AAn}??{{AA`Ad}AA`}{{AAn{Bf{Gj}}}AAn}{{AA`{Bf{Gj}}}AA`}{{AAnAd}AAn}{{ABfc}ABf{{Aj{{Bf{Gj}}}}}}{{AAnc}AAn{{Aj{{Bf{Gj}}}}}}4{{AA`c}AA`{{Aj{{Bf{Gj}}}}}}4{{AAn{Bf{AFb}}}AAn}{{A@`ABd}A@`}{{ABfACn}ABf}{{AAnACn}AAn}{{AA`ACn}AA`}{{ABf{An{{Af{ACn}}}}}ABf}{{AAn{An{{Af{ACn}}}}}AAn}{{AA`{An{{Af{ACn}}}}}AA`}{{A@`Ad}A@`}0{{AAn{Bf{Gf}}}AAn}{{ABfAd}ABf}>{{AA`Ad}AA`}3{{ABfc}ABf{{Aj{{Bf{ADj}}}}}}{{A@`n{Bf{AAh}}}A@`}{{AAnc}AAn{{Aj{{Bf{ADj}}}}}}{{AAn{Bf{ADj}}}AAn}{{AA`c}AA`{{Aj{{Bf{ADj}}}}}}{{AA`{Bf{ADj}}}AA`}{{AAn{Bf{AAf}}}AAn}{{AA`{Bf{AAf}}}AA`}{{AAnc}{{Ol{AAn}}}{{Bh{Kl}{{Bd{{Ol{Kl}}}}}}}}{{AAnGf}AAn}={{AAnGj}AAn}0>>{{AAnAd}AAn}?{A@`A@`}{{Ojei{Bf{m}}Ad{Bf{h}}{Bf{n}}}{{Ol{Oj}}}{{Ah{n}}}{{ABl{}{{On{c}}}}}{{Ah{n}}}{{ABl{}{{On{g}}}}}{{Ah{n}}}{{ABl{}{{On{k}}}}}}0`````{ce{}{}}0{Gjc{}}0{Gjd}``{cc{}}{{}Gj}4{c{{l{e}}}{}{}}0{cOb{}}6````{AFh{{Bf{h}}}}{AFh{{Bf{AFj}}}}{AFh{{Bf{AFl}}}}{AFn{{Bf{AFl}}}}::::999988`{{AFnOj}{{Ol{Bb}}}}````{{AFhIh}AGd}{{AGbIh}AGd}::`99=={AFhAd}{{AFhKl}{{Ol{L`}}}}::::99??{{ADf{ADb{AD`}}{ADb{ADd}}}{{Ol{{AGf{AFd}}}}}}``````````````````````````````````````````````````````````````````````````````{{cb}d{}}000000000000000{{GnCd{Bf{AGh}}}{{l{Cdj}}}}00{AAbAd}00{AAbCn}`{ce{}{}}00000000000000000000000000000000000````{NfNf}{ABnABn}{MlMl}{GnGn}{AE`AE`}{AEbAEb}{AEdAEd}{ACdACd}{AC`AC`}{AElAEl}{AEfAEf}{AGjAGj}{MjMj}{AGlAGl}{AGnAGn}{HhHh}{{ce}d{}{}}000000000000000```{{GnGn}AH`}`{{ce}AH`{}{}}``{Hh{{l{{An{Kl}}j}}}}`{GnCd}{GnAd}{{}Nf}{{}ABn}{{}Ml}{{}AE`}{{}AEb}{{}AEd}{{}ACd}{{}AEl}{{}AEf}{{}Mj}{{}AGn}{{}Hh}{Gjc{}}00000000000000000000000000000000000`{HhEb}0{c{{l{Nf}}}Hf}{c{{l{ABn}}}Hf}{c{{l{Ml}}}Hf}{c{{l{Gn}}}Hf}{c{{l{AE`}}}Hf}{c{{l{AEb}}}Hf}{c{{l{AEd}}}Hf}{c{{l{ACd}}}Hf}{c{{l{AC`}}}Hf}{c{{l{AEl}}}Hf}{c{{l{AEf}}}Hf}{c{{l{AGj}}}Hf}{c{{l{Mj}}}Hf}{c{{l{AGl}}}Hf}{c{{l{AGn}}}Hf}{c{{l{Hh}}}Hf}{{HhEb{ADh{GjGj}}AHb{AHf{EbEbAHd}}}{{l{dIj}}}}{Gjd}00000000000000000{{NfNf}Ad}{{ABnABn}Ad}{{MlMl}Ad}{{GnGn}Ad}{{AE`AE`}Ad}{{AEbAEb}Ad}{{AEdAEd}Ad}{{ACdACd}Ad}{{AC`AC`}Ad}{{AElAEl}Ad}{{AEfAEf}Ad}{{AGjAGj}Ad}{{MjMj}Ad}{{AGlAGl}Ad}{{AGnAGn}Ad}{{ce}Ad{}{}}00000000000000000000000000000000`{{NfIh}{{l{dIj}}}}{{ABnIh}{{l{dIj}}}}{{MlIh}{{l{dIj}}}}{{GnIh}{{l{dIj}}}}0{{AAbIh}{{l{dIj}}}}{{AE`Ih}{{l{dIj}}}}{{AEbIh}{{l{dIj}}}}{{AEdIh}{{l{dIj}}}}{{ACdIh}{{l{dIj}}}}{{AC`Ih}{{l{dIj}}}}0{{AElIh}{{l{dIj}}}}0{{AEfIh}{{l{dIj}}}}{{AGjIh}{{l{dIj}}}}{{MjIh}{{l{dIj}}}}{{AGlIh}{{l{dIj}}}}{{AGnIh}{{l{dIj}}}}{{HhIh}{{l{dIj}}}}``{cc{}}00000000{AC`ACd}111111111{AGlCf}{{AHh{Db{Bb}}ABn}{{l{{ADh{Bb{Db{Bb}}AG`}}j}}}}{{ABnc}dLd}{{Mlc}dLd}{{Gnc}dLd}{{AE`c}dLd}{{AEbc}dLd}{{AEdc}dLd}{{ACdc}dLd}{{AC`c}dLd}{{AElc}dLd}{{AEfc}dLd}{{AGjc}dLd}{{Mjc}dLd}{{AGlc}dLd}{{AGnc}dLd}``````{{}Gj}00000000000000000{ce{}{}}00000000000000000{AC`Ad}{{Gn{Bf{n}}}Ad}{GnAd}0``{M`h}{AHjh}{AGlh}````{AGlAGl}``{GnCd}5{{GnCd}Gn}`1{AElAd}7{CdGn}{AC`ACd}```{nGn}`{{GnGn}{{Bf{AH`}}}}```{{AHh{Db{Bb}}Ml}{{l{{ADh{Bb{Db{Bb}}AG`}}j}}}}`{{AAbADl}{{l{Ojj}}}}{{AAb{Bf{Gj}}}{{l{{An{Kl}}j}}}}`{{Nfc}lNj}{{ABnc}lNj}{{Mlc}lNj}{{Gnc}lNj}{{AE`c}lNj}{{AEbc}lNj}{{AEdc}lNj}{{ACdc}lNj}{{AC`c}lNj}{{AElc}lNj}{{AEfc}lNj}{{AGjc}lNj}{{Mjc}lNj}{{AGlc}lNj}{{AGnc}lNj}{{Hhc}lNj}`````{ACdn}`{Hh{{l{{ADh{ADf{ADb{AD`}}{ADb{ADd}}}}j}}}}{AGl{{Bf{AHl}}}}{ce{}{}}000000000000000{cEb{}}00{{GnCd{Bf{AGh}}ceg}{{l{Cdj}}}{{Bh{Cd}{{Bd{Cd}}}}}{{Bh{Cd}{{Bd{AHn}}}}}{{Bh{AHn}{{Bd{Cd}}}}}}{{GnCd{Bf{AGh}}}{{l{Cdj}}}}00{c{{l{e}}}{}{}}00000000000000{AHl{{l{AGlj}}}}111111111111111111111{cOb{}}00000000000000000`666666666666666666`{GnCd}{GnAd}``{{ACdABj}ACd}`````````````````````````````````````````````````````````","D":"GDf","p":[[5,"Private",2740],[1,"unit"],[5,"MetaNameSpace",6],[6,"Expr",6],[6,"PolarsError",2741],[6,"Result",2742],[1,"str"],[5,"ArrayNameSpace",6],[5,"ListNameSpace",6],[1,"bool"],[1,"slice"],[10,"AsRef",2743],[10,"Into",2743],[10,"FunctionOutputField",6],[5,"Arc",2744],[5,"SpecialEq",6],[5,"Series",2745],[17,"Output"],[6,"Option",2746],[10,"Fn",2747],[10,"Send",2748],[10,"Sync",2748],[6,"VisitRecursion",2749],[10,"FnMut",2747],[6,"FunctionExpr",6],[1,"i64"],[6,"DataType",2750],[5,"SortOptions",2751],[5,"SortMultipleOptions",2751],[10,"SeriesUdf",6],[10,"Any",2752],[6,"AggExpr",6],[5,"Vec",2753],[1,"u64"],[5,"BinaryNameSpace",1315],[6,"Operator",6],[10,"Clone",2754],[1,"array"],[1,"i32"],[10,"RenameAliasFn",6],[5,"String",2755],[5,"UserDefinedFunction",6],[10,"SeriesBinaryUdf",6],[5,"CategoricalNameSpace",6],[5,"When",6],[5,"Then",6],[5,"ChainedWhen",6],[5,"ChainedThen",6],[6,"Excluded",6],[6,"BooleanFunction",6],[5,"DatetimeArgs",6],[5,"DurationArgs",6],[5,"RollingCovOptions",6],[5,"StrptimeOptions",6],[5,"JoinOptions",6],[6,"WindowType",6],[6,"WindowMapping",6],[10,"IntoVec",2756],[1,"u8"],[10,"ExprEvalExtension",6],[1,"usize"],[1,"f64"],[5,"Duration",2096],[6,"ClosedWindow",2757],[6,"TimeUnit",2758],[10,"BinaryUdfOutputField",6],[10,"Deserializer",2759],[6,"DslPlan",2096],[6,"NullBehavior",2760],[5,"DateLikeNameSpace",1336],[10,"Sized",2748],[10,"ListNameSpaceExtension",6],[5,"EWMOptions",2761],[5,"StructNameSpace",6],[6,"FillNullStrategy",2762],[5,"Formatter",2763],[5,"Error",2763],[10,"UdfSchema",6],[1,"i8"],[1,"u32"],[1,"u16"],[1,"f32"],[1,"i16"],[6,"CategoricalFunction",2764],[6,"StringFunction",2765],[6,"BinaryFunction",2766],[6,"BusinessFunction",2767],[6,"ArrayFunction",2768],[6,"TemporalFunction",2769],[6,"StructFunction",2770],[6,"ListFunction",2771],[6,"RangeFunction",2772],[5,"FunctionOptions",2773],[5,"Schema",2774],[6,"Context",2775],[5,"Field",2776],[5,"FieldsMapper",6],[10,"Hasher",2777],[6,"InterpolationMethod",2778],[10,"IntoListNameSpace",6],[10,"Display",2763],[6,"ClosedInterval",2779],[5,"ExprNameNameSpace",6],[10,"Literal",2096],[10,"FnOnce",2747],[5,"PythonUdfExpression",1487],[5,"UnitVec",2780],[6,"QuantileInterpolOptions",2781],[5,"RankOptions",2096],[5,"RollingGroupOptions",2096],[5,"RollingOptionsFixedWindow",2782],[5,"Float64Type",2783],[5,"ChunkedArray",2784],[10,"Copy",2748],[5,"RollingOptions",2096],[6,"SearchSortedSide",2785],[10,"Serializer",2786],[6,"IsSorted",2787],[5,"StringNameSpace",1532],[6,"ListToStructWidthStrategy",2788],[5,"TypeId",2752],[6,"Roll",2789],[6,"NonExistent",2790],[5,"UnionArgs",1392],[5,"DataFrame",2791],[8,"PolarsResult",2741],[17,"Item"],[5,"LazyFrame",1600],[10,"IntoParallelIterator",2792],[5,"PythonFunction",1487],[5,"PyAny",2793],[5,"Py",2794],[1,"char"],[5,"LazyGroupBy",1600],[5,"JoinBuilder",1600],[5,"LazyJsonLineReader",1600],[10,"AnonymousScan",2096],[5,"ScanArgsAnonymous",1600],[8,"SchemaRef",2774],[8,"IdxSize",2795],[5,"InProcessQuery",1600],[8,"PlHashMap",2796],[5,"LazyCsvReader",1600],[5,"ScanArgsIpc",1600],[5,"ScanArgsParquet",1600],[5,"OptState",1600],[10,"LazyFileListReader",1600],[5,"CloudOptions",2797],[6,"JoinCoalesce",2798],[10,"IntoIterator",2799],[5,"DynamicGroupOptions",2096],[6,"JoinType",2096],[8,"PathIterator",1600],[5,"JoinArgs",2096],[10,"IntoLazy",1600],[8,"AllowedOptimizations",1600],[5,"MeltArgs",2800],[5,"Path",2801],[5,"PathBuf",2801],[6,"IR",2802],[5,"Arena",2803],[6,"AExpr",2804],[5,"Node",2803],[1,"tuple"],[5,"RowIndex",2805],[5,"AnonymousScanArgs",2096],[8,"PyObject",2794],[5,"CsvWriterOptions",2096],[5,"IpcWriterOptions",2096],[5,"JsonWriterOptions",2096],[5,"ParquetWriteOptions",2096],[8,"String",2806],[6,"UniqueKeepStrategy",2791],[6,"JoinValidation",2096],[8,"NonZeroUsize",2807],[6,"CsvEncoding",2808],[6,"NullValues",2808],[10,"Executor",2036],[5,"Dummy",2036],[10,"PhysicalExpr",2052],[10,"PartitionedAggregation",2052],[10,"StatsEvaluator",2809],[5,"PhysicalIoHelper",2052],[6,"GroupsProxy",2810],[5,"AggregationContext",2052],[8,"Result",2763],[5,"Box",2811],[6,"Tz",2812],[6,"RankMethod",2096],[6,"LiteralValue",2096],[5,"AnonymousScanOptions",2096],[6,"Ordering",2813],[5,"DotNode",2814],[5,"RandomState",2815],[5,"HashMap",2816],[10,"PolarsTemporalGroupby",2096],[5,"Null",2096],[6,"AnyValue",2817],[5,"NaiveDateTime",2818],[15,"Quantile",1227],[15,"Min",1227],[15,"Max",1227],[15,"IsBetween",1234],[15,"Any",1234],[15,"All",1234],[15,"SortBy",1237],[15,"Filter",1237],[15,"Cast",1237],[15,"Sort",1237],[15,"Gather",1237],[15,"RenameAlias",1237],[15,"Ternary",1237],[15,"Function",1237],[15,"Window",1237],[15,"AnonymousFunction",1237],[15,"Slice",1237],[15,"BinaryExpr",1237],[15,"QCut",1271],[15,"Entropy",1271],[15,"Log",1271],[15,"Hist",1271],[15,"Cut",1271],[15,"EwmMeanBy",1271],[15,"Correlation",1271],[15,"Round",1271],[15,"RoundSF",1271],[15,"Clip",1271],[15,"BackwardFill",1271],[15,"ForwardFill",1271],[15,"Random",1271],[15,"GatherEvery",1271],[15,"Rank",1271],[15,"EwmMean",1271],[15,"EwmStd",1271],[15,"EwmVar",1271],[15,"ValueCounts",1271],[15,"Replace",1271],[15,"CumCount",1271],[15,"CumSum",1271],[15,"CumProd",1271],[15,"CumMin",1271],[15,"CumMax",1271],[15,"TopK",1271],[15,"TopKBy",1271],[15,"GroupBy",2684],[15,"Sort",2684],[15,"Cache",2684],[15,"ExtContext",2684],[15,"DataFrameScan",2684],[15,"Select",2684],[15,"HStack",2684],[15,"Scan",2684],[15,"MapFunction",2684],[15,"Filter",2684],[15,"Distinct",2684],[15,"Slice",2684],[15,"Sink",2684],[15,"Join",2684],[15,"Union",2684],[15,"HConcat",2684],[15,"PythonScan",2684],[15,"Range",2737]],"b":[[434,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[435,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[436,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[501,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[502,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[503,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[551,"impl-PartialEq-for-Expr"],[552,"impl-Expr"],[555,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[556,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[621,"impl-Display-for-Expr"],[622,"impl-Debug-for-Expr"],[624,"impl-Debug-for-Operator"],[625,"impl-Display-for-Operator"],[627,"impl-Display-for-BooleanFunction"],[628,"impl-Debug-for-BooleanFunction"],[629,"impl-Debug-for-FunctionExpr"],[630,"impl-Display-for-FunctionExpr"],[656,"impl-From%3Cf64%3E-for-Expr"],[657,"impl-From%3Ci32%3E-for-Expr"],[658,"impl-From%3C%26str%3E-for-Expr"],[659,"impl-From%3Ci8%3E-for-Expr"],[660,"impl-From%3Ci64%3E-for-Expr"],[661,"impl-From%3Cu32%3E-for-Expr"],[662,"impl-From%3Cu64%3E-for-Expr"],[663,"impl-From%3CAggExpr%3E-for-Expr"],[665,"impl-From%3Cu16%3E-for-Expr"],[666,"impl-From%3Cu8%3E-for-Expr"],[667,"impl-From%3Cbool%3E-for-Expr"],[668,"impl-From%3Cf32%3E-for-Expr"],[669,"impl-From%3Ci16%3E-for-Expr"],[672,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[674,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[675,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[676,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[677,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[678,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[679,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[680,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[681,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[682,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[683,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[685,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[687,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[688,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[689,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[720,"impl-Hash-for-Expr"],[721,"impl-Expr"],[977,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[978,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[979,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[1759,"impl-From%3CDslPlan%3E-for-LazyFrame"],[1761,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[1994,"impl-LazyFileListReader-for-LazyCsvReader"],[1995,"impl-LazyCsvReader"],[1996,"impl-LazyFileListReader-for-LazyJsonLineReader"],[1997,"impl-LazyJsonLineReader"],[2015,"impl-LazyFileListReader-for-LazyCsvReader"],[2016,"impl-LazyCsvReader"],[2017,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2018,"impl-LazyJsonLineReader"],[2420,"impl-Debug-for-Duration"],[2421,"impl-Display-for-Duration"],[2427,"impl-Display-for-JoinType"],[2428,"impl-Debug-for-JoinType"],[2429,"impl-Display-for-JoinValidation"],[2430,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABEH/gAEABEAFwAKACMAAAAmAA0ANQAFADwABgBEAAIASQAAAEsAEABdABIAcQAAAHMAAwB4AA0AhwALAJQAAgCYABgAtAAIAL4AAwDDAAMAyQAIANMAAQDWAAAA2AAZAPMAAAD4AAAA+wABAP8AAAAFAQAABwEAABIBAAAVAQAAHAEAAB4BAQAjAQAAJgEzAFwBAABeAQAAYAEBAGUBAABsASUAlQEAAK8BDAC9AUIAAgIAAAQCGQAfAgAAIQIAACcCAQAqAgoANgIaAFkCAABcAgEAYQIAAGcCAABqAhUAgQIAAJECBwCaAgQAoQIAAKMCCQCuAgAAsAICALgCAAC8AgAAwgIBAMcCBQDQAgEA0wIIAN8CAQDiAhkAGgMCAB4DAAAxAwAAOQMAAEYDAABJAwUAUgMAAFUDAABlAwAAaAMCAHADAgB0AwMAfQMBAIEDAgCHAwEAkgMAAJQDAQCbAwAAnQMAAKUDAQCrAwEArgMAALMDAgDFAwUAzAMPAOUDAADsAwAA8wMAAPgDAAD6AwAA/AMAAAIEAAAHBAAACQQAAAsEAgATBBMAKAQEADEEMwBnBAAAaQQbAJEEAACTBBoAsQQBAMIEAADGBAEAywQTAOIEAQDlBAEA6AQBAOsEBADxBDIAJQUDACoFAgAvBQIANAUDADwFAQBFBQIASwUAAE0FAABaBQAAaQUDAHMFAQB3BQAAfwUBAIIFAQCJBQAAlgUFAKIFAgCuBQIAsgUDALcFAAC6BQAAvQUDAMUFIwDrBQMA8QULAP4FAwAGBgIACgYAAA0GAAASBgIAFgYBADYGAwBCBgMASQYAAEsGDABbBgEAXwYVAHYGAQB7BhEAjwYBAJMGAACaBgAAnQYYALoGAwC/BgYA2QYBANwGAADgBgAA4gYAAOsGAgD0BgAA9gYKABIHAQAXBwEAGwcAAB0HAAAiBwEAKAcDAC0HAwAzBwAANQcAADcHBABFBwMAUgcEAFgHAABcBwEAXwcAAGsHAAB4BwEAewcJAIYHEwCcBwkAqQcBAKwHCQC3BwAAvwcBAMsHAADNBwAA0gcBANUHAQDgBwAA4gcAAPAHBQD3BwYA/wcAAAEIBQAJCAAADAgKABgIAAAbCAAAHQgBACEIAgAmCAAAKAgOADoIAAA9CAIAQQgDAEcIAABNCAEAUwgAAFUIBgBfCAIAYwgAAGYICgByCAIAdwgAAHkIAAB+CBMAlQglAL8IHwDgCAQA5wgAAOkIRAAvCUEAcgkUAJEJAACcCRAArgkAALEJEQDVCQEA2QkAANwJAgDiCQEA5QkDAOoJAADtCQAA7wkBAPIJAQD2CQEA+wkUABEKZAB3CgEAewo5AA=="}],\
["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPIFGKPGGPPIPPPPPKNNNNHNNENNHNNNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNONNNNHONONNNNNNNNNNNNNNNNNNONEEPKPPGKKNMMMNNHHHNNHHNNNNNNNNNNNNNHNNHHHHHHHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","contains","contains_chunked","contains_chunked","ends_with","ends_with","ends_with_chunked","ends_with_chunked","list","scatter","starts_with","starts_with","starts_with_chunked","starts_with_chunked","strings","AsList","ListNameSpaceImpl","as_list","join_literal","join_literal","join_many","join_many","lst_arg_max","lst_arg_max","lst_arg_min","lst_arg_min","lst_concat","lst_concat","lst_get","lst_get","lst_join","lst_join","lst_lengths","lst_lengths","lst_max","lst_max","lst_mean","lst_mean","lst_median","lst_median","lst_min","lst_min","lst_n_unique","lst_n_unique","lst_reverse","lst_reverse","lst_shift","lst_shift","lst_slice","lst_slice","lst_sort","lst_sort","lst_std","lst_std","lst_sum","lst_sum","lst_unique","lst_unique","lst_unique_stable","lst_unique_stable","lst_var","lst_var","same_type","same_type","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","Outer","SeriesJoin","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_outer_join","_create_left_df_from_slice","_create_left_df_from_slice","_finish_join","_finish_left_join","_finish_left_join","_join_suffix_name","_left_join_from_series","_left_join_from_series","_outer_join_from_series","_outer_join_from_series","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","coalesce","coalesce","cross_join","cross_join","cross_join_dfs","cross_join_dfs","default","default","default","default_join_ids","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","hash","hash_join_inner","hash_join_inner","hash_join_outer","hash_join_outer","how","init","init","init","init","inner_join","into","into","into","into","is_asof","join","join_nulls","left_join","needs_checks","new","outer_join","private_left_join_multiple_keys","slice","suffix","suffix","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validation","with_coalesce","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","coalesce_series","convert_to_unsigned_index","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","is_positive_idx_uncertain","is_sorted","is_sorted","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","try_from","try_into","type_id","value_counts","value_counts"],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[23,"polars_ops::chunked_array::list"],[72,"polars_ops::chunked_array::strings"],[74,"polars_ops::frame"],[78,"polars_ops::frame::join"],[230,"polars_ops::prelude"],[232,"polars_ops::series"],[281,"polars_core::datatypes"],[282,"polars_core::datatypes"],[283,"polars_core::series"],[284,"polars_error"],[285,"core::marker"],[286,"core::option"],[287,"core::iter::traits::collect"],[288,"polars_core::datatypes"],[289,"polars_core::chunked_array::ops::sort::options"],[290,"polars_core::frame"],[291,"dyn_clone::sealed"],[292,"alloc::string"],[293,"core::fmt"],[294,"core::fmt"],[295,"polars_arrow::array::primitive"],[296,"core::convert"],[297,"core::result"],[298,"core::any"],[299,"core::fmt"]],"i":[0,0,0,0,0,0,0,1,3,3,3,3,3,3,3,3,0,7,3,3,3,3,0,0,0,15,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,25,0,0,0,26,0,0,34,35,0,0,35,0,0,0,0,34,0,0,34,35,0,36,36,36,36,35,0,32,34,35,36,0,30,30,0,30,30,0,30,30,30,30,32,34,35,36,32,34,35,36,32,34,35,36,32,34,35,36,34,32,37,37,37,37,32,34,36,0,32,34,35,36,32,34,35,36,32,34,35,36,32,34,35,36,32,32,32,34,34,34,35,35,35,36,36,36,32,34,35,35,36,36,32,32,34,35,36,32,34,35,36,43,43,43,43,32,32,34,35,36,46,32,34,35,36,35,46,32,46,36,32,46,0,32,32,32,32,34,35,36,35,36,32,34,35,36,32,34,35,36,32,34,35,36,32,32,0,0,52,0,52,52,0,0,0,52,50,50,51,52,52,0,0,0,52,52,0,0,52,52,52,52,52,52,52,52,52,52,52,52,52,0,54,54,0,0,0,0,0,0,0,52,52,52,52,54,54],"f":"```````{bd}{{f{j{h}}}l}0{{fd}l}01100`{{n{j{A`}}e}{{Ad{Ab}}}Af{{Al{}{{Ah{{Aj{c}}}}}}}}2211```{AnB`}{{BbBdBf}{{Ad{Bh}}}}0{{BbBhBf}{{Ad{Bh}}}}0{BbBj}000{{Bb{j{Ab}}}{{Ad{B`}}}}0{{BbBlBf}{{Ad{Ab}}}}03322{Bb{{Ad{Ab}}}}0{BbAb}00011{Bb{{Ad{Bj}}}}0{BbB`}0{{BbAb}{{Ad{B`}}}}0{{BbBlBn}B`}0{{BbC`}{{Ad{B`}}}}0{{Bbh}Ab}077{Bb{{Ad{B`}}}}00011{{BbB`}B`}0`{CbBh}```{CdCf}```````````````````````{{cCh}Cj{}}000{{Cf{j{Bd}}{j{Bd}}{Aj{Bd}}Cf}Cf}{{Cl{j{A`}}BfBf}Cf}0`{{ClCnCfD`}{{Ad{Cf}}}}0{{BdBd}Db}{{ClCfAbAbD`Bf{Aj{{j{Bd}}}}}{{Ad{Cf}}}}0{{ClCfAbAbD`}{{Ad{Cf}}}}0{ce{}{}}0000000{D`D`}{DdDd}{DfDf}{DhDh}{{ce}Cj{}{}}000{{DdDf}Bf}`{{DjCf{Aj{Bd}}{Aj{{Dl{BlBn}}}}}{{Ad{Cf}}}}0{{DjCf{Aj{{Dl{BlBn}}}}Bf}{{Ad{{Dl{CfCf}}}}}}0{{}D`}{{}Dd}{{}Dh}{{}Dn}{Bnc{}}0000000{BnCj}000{{D`D`}Bf}{{DdDd}Bf}{{DfDf}Bf}{{DhDh}Bf}{{ce}Bf{}{}}00000000000{{D`E`}Eb}{{DdE`}Eb}{{DfE`}Eb}0{{DhE`}Eb}0{DfD`}{cc{}}000{{D`c}CjEd}{{Ddc}CjEd}{{Dfc}CjEd}{{Dhc}CjEd}{{EfAbDhBf}{{Ad{{Dl{EhBf}}}}}}0{{EfAbDhBf}{{Ad{{Dl{{Ej{A`}}{Ej{A`}}}}}}}}0`{{}Bn}000{{ElCfee}{{Ad{Cf}}}{{En{Bd}}}{{Al{}{{Ah{c}}}}}}{ce{}{}}000{DfBf}{{ElCfeeD`}{{Ad{Cf}}}{{En{Bd}}}{{Al{}{{Ah{c}}}}}}`3{DhBf}=4{{CfCfBf}{{Ad{Cn}}}}`{D`Bd}`5555{cDb{}}0{c{{F`{e}}}{}{}}0000000{cFb{}}000`{{D`Dd}D`}`````````{{cCh}Cj{}}{Fd{{Aj{Bn}}}}0{FfAb}<<{{AbAbAb}{{Ad{Ab}}}}{{AbAb}{{Ad{Ab}}}}0{FhFh}{{ce}Cj{}{}}{{{j{Ab}}}{{Ad{Ab}}}}{{AbBn}{{Ad{Bj}}}}{{}Fh}{Bnc{}}0{BnCj}{{FhFh}Bf}{{ce}Bf{}{}}00{{FhE`}{{F`{CjFj}}}}{cc{}}{{Fhc}CjEd}{{}Bn}{ce{}{}}{AbBf}{{FlC`}{{Ad{Bf}}}}0{{{j{Ab}}}{{Ad{{Aj{Ab}}}}}}00{Ab{{Ad{Ab}}}}0{{BlBd}{{Ad{Ab}}}}25{c{{F`{e}}}{}{}}0{cFb{}}{{FlBfBf}{{Ad{Cf}}}}0","D":"Eb","p":[[10,"AsBinary",4],[8,"BinaryChunked",281],[10,"BinaryNameSpaceImpl",4],[1,"u8"],[1,"slice"],[8,"BooleanChunked",281],[10,"ChunkedSet",4],[8,"IdxSize",282],[5,"Series",283],[8,"PolarsResult",284],[10,"Copy",285],[17,"Item"],[6,"Option",286],[10,"IntoIterator",287],[10,"AsList",23],[8,"ListChunked",281],[10,"ListNameSpaceImpl",23],[1,"str"],[1,"bool"],[8,"StringChunked",281],[8,"IdxCa",288],[1,"i64"],[1,"usize"],[5,"SortOptions",289],[10,"AsString",72],[10,"IntoDf",74],[5,"DataFrame",290],[5,"Private",291],[1,"unit"],[10,"JoinDispatch",78],[8,"LeftJoinIds",78],[5,"JoinArgs",78],[5,"String",292],[6,"JoinCoalesce",78],[6,"JoinType",78],[6,"JoinValidation",78],[10,"CrossJoin",78],[1,"tuple"],[8,"ChunkJoinOptIds",78],[5,"Formatter",293],[8,"Result",293],[10,"Hasher",294],[10,"SeriesJoin",78],[8,"InnerJoinIds",78],[5,"PrimitiveArray",295],[10,"DataFrameJoinOps",78],[10,"AsRef",296],[6,"Result",297],[5,"TypeId",298],[10,"ArgAgg",232],[10,"SeriesSealed",232],[6,"SearchSortedSide",232],[5,"Error",293],[10,"SeriesMethods",232]],"b":[[172,"impl-Debug-for-JoinType"],[173,"impl-Display-for-JoinType"],[174,"impl-Debug-for-JoinValidation"],[175,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPAAEgAAAAgACwABAA8AAwAVAA8AKQA2AGQABgBtABkAiQAoALYADADIAAAAygAAAMwAAQDPABoA6wAFAPMAAgD5AAwABwEBAAsBDAA="}],\
["polars_sql",{"t":"FNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNOONNNNNNOONONNNNOMNNNNNNNNNNNNNNNNNONNNMNNNNNONNNNOMNONNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","__clone_box","allow_group_aware","allow_rename","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_to_supertypes","changes_length","check_lengths","check_lengths","clone","clone","clone_into","clone_into","collect_groups","contains","contains","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt_str","from","from","from","get_udf","get_udf","hash","init","init","init","input_wildcard_expansion","into","into","into","is_groups_sensitive","pass_name_to_apply","register","register","returns_scalar","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","all_functions","all_keywords"],"q":[[0,"polars_sql"],[31,"polars_sql::function_registry"],[107,"polars_sql::keywords"],[109,"dyn_clone::sealed"],[110,"polars_lazy::frame"],[111,"polars_error"],[112,"alloc::string"],[113,"polars_utils::aliases"],[114,"alloc::vec"],[115,"alloc::sync"],[116,"polars_plan::dsl::expr"],[117,"core::convert"],[118,"core::result"],[119,"core::any"],[120,"core::fmt"],[121,"core::fmt"],[122,"core::option"],[123,"core::hash"]],"i":[0,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,0,3,3,3,3,3,0,3,3,3,3,3,3,3,19,0,19,0,0,0,17,19,17,17,20,17,19,20,17,19,17,17,17,17,17,19,17,19,17,11,20,17,20,17,19,20,17,19,20,17,19,17,17,17,17,17,19,17,20,17,19,11,20,17,20,17,19,17,20,17,19,17,17,11,20,17,17,19,20,17,19,20,17,19,20,17,19,20,17,19,0,0],"f":"`{{cb}d{}}{ce{}{}}0{ff}{{ce}d{}{}}{{}f}{hc{}}0{hd}{{fj}{{n{l}}}}{cc{}}`{f{{Ab{A`l}}}}{f{{Ad{A`}}}}{{}h}:`7{{{Ab{A`l}}}f}{{fjl}d}{f{{Ah{Af}}}}{fAf}{c{{n{Aj}}}{{Al{j}}}}?{c{{An{e}}}{}{}}0{cB`{}}{{fj}d}{ce{}{}}{{f{Ah{Af}}}f}``````{{cb}d{}}0``222222``{BbBd}`{BbBb}{BfBf}{{ce}d{}{}}0`{{Afj}Bd}{{Bhj}Bd}{{}Bb}{hc{}}00000{hd}00{{BbBb}Bd}{{ce}Bd{}{}}00{{BbBj}{{An{dBl}}}}{{BfBj}{{An{dBl}}}}`{cc{}}00{{Afj}{{n{{C`{Bn}}}}}}{{Bhj}{{n{{C`{Bn}}}}}}{{Bbc}dCb}{{}h}00`{ce{}{}}00{BbBd}`{{AfjBn}{{n{d}}}}{{BhjBn}{{n{d}}}}`33{c{{An{e}}}{}{}}00000{cB`{}}00555{{}{{Ad{j}}}}0","D":"Dh","p":[[5,"Private",109],[1,"unit"],[5,"SQLContext",0],[1,"usize"],[1,"str"],[5,"LazyFrame",110],[8,"PolarsResult",111],[5,"String",112],[8,"PlHashMap",113],[5,"Vec",114],[10,"FunctionRegistry",31],[5,"Arc",115],[6,"Expr",116],[10,"AsRef",117],[6,"Result",118],[5,"TypeId",119],[5,"FunctionOptions",31],[1,"bool"],[6,"Context",31],[5,"DefaultFunctionRegistry",31],[5,"Formatter",120],[5,"Error",120],[5,"UserDefinedFunction",121],[6,"Option",122],[10,"Hasher",123]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEkADAACAAgAEAAAABkAAwAeAAAAIQAAACQAAAAmABEAOgARAFAABABaAAAAXAAAAF4ADQA="}],\
["polars_time",{"t":"PGFPPKKKKKPFCHHMMOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsMonthEnd","PolarsMonthStart","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","month_end","month_start","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","DataPoint","Duration","Friday","Label","Left","Left","Monday","None","Right","Right","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","days","days_only","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","ensure_duration_matches_data_type","ensure_is_constant_duration","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","negative","new","new","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","truncate_impl","truncate_ms","truncate_ms","truncate_no_offset_ms","truncate_no_offset_ns","truncate_no_offset_us","truncate_ns","truncate_ns","truncate_us","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[26,"polars_time::chunkedarray"],[28,"polars_time::chunkedarray::string"],[60,"polars_time::chunkedarray::string::infer"],[85,"polars_time::prelude"],[285,"polars_time::series"],[306,"chrono::naive::datetime"],[307,"polars_core::datatypes::time_unit"],[308,"polars_arrow::legacy::time_zone"],[309,"core::option"],[310,"polars_core::chunked_array::logical::datetime"],[311,"polars_error"],[312,"polars_core::datatypes"],[313,"chrono::naive::time"],[314,"polars_core::chunked_array::logical::time"],[315,"polars_core::frame"],[316,"alloc::string"],[317,"polars_core::utils"],[318,"dyn_clone::sealed"],[319,"core::fmt"],[320,"core::fmt"],[321,"core::result"],[322,"core::any"],[323,"core::clone"],[324,"polars_core::datatypes"],[325,"polars_core::datatypes::dtype"],[326,"polars_core::frame::group_by::proxy"],[327,"polars_core::datatypes::dtype"],[328,"core::ops::function"],[329,"polars_core::series"],[330,"polars_core::datatypes"]],"i":[4,0,0,4,4,0,0,0,0,0,4,0,0,0,0,11,12,44,3,0,13,0,0,17,18,18,0,0,0,25,25,25,25,25,0,0,25,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,25,25,25,25,25,25,25,0,39,0,0,32,32,32,32,32,32,32,32,32,0,32,32,32,32,35,32,32,32,39,32,32,4,0,0,0,42,43,0,43,0,4,42,43,4,4,42,43,0,43,0,43,43,43,0,43,41,3,4,42,43,44,3,3,3,47,41,3,4,42,43,44,47,41,3,4,42,43,44,41,3,4,42,43,44,41,3,4,42,43,44,3,3,3,3,43,47,41,3,4,42,43,44,47,41,3,4,42,43,44,47,41,3,4,42,43,44,0,0,3,4,42,43,3,3,3,4,4,4,42,42,42,43,43,43,41,3,3,4,42,43,47,41,3,4,42,43,44,44,44,44,44,0,0,3,4,42,43,47,41,3,4,42,43,44,47,41,3,4,42,43,44,47,3,3,3,3,3,3,3,3,3,44,47,44,3,3,3,44,44,44,41,3,4,42,43,44,3,3,3,44,44,44,44,3,44,3,44,47,41,3,4,42,43,44,47,41,3,4,42,43,44,47,41,3,4,42,43,44,43,3,3,0,0,55,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57],"f":"`````````````{{bddfhj{n{l}}}{{Ab{A`}}}}{dAd}{{Af{n{l}}}{{Ab{Af}}}}{{Ah{n{l}}}{{Ab{Ah}}}}```{{AjAlf{n{l}}}{{Ab{Aj}}}}`{{bAnAnfh}{{Ab{B`}}}}{{Bb{n{l}}Alb}{{Ab{Bb}}}}{{Bdcbff}{{Ab{Bf}}}{{Bj{Bh}}}}0``````````{{cBl}Bn{}}{C`Al}{ce{}{}}0{CbCb}{{ce}Bn{}{}}{Cdc{}}0{CdBn}{{CbCb}Ad}{{ce}Ad{}{}}00{{CbCf}Ch}{cc{}}{{Cbc}BnCj}`{{}Cd}:{{Cbb}Ad};{c{{Cl{e}}}{}{}}0{cCn{}}````?=={{{D`{c}}}{{D`{c}}}{DbDd}}<;;:6{b{{n{Cb}}}}5?`{{{D`{c}}b}nDd}{{Df{Dj{Dh}}{n{j}}}{{n{c}}}{}}`{ce{}{}}6{{c{n{j}}}{{Ab{{Dn{}{{Dl{e}}}}}}}{}{}}76````````````````````````{{cBl}Bn{}}00000{{fE`{n{l}}}{{Ab{E`}}}}0033333333333333{EbEb}{ff}{hh}{EdEd}{EfEf}{EhEh}{{ce}Bn{}{}}00000{{ff}Ej}{{ce}Ej{}{}}{fE`}{fAd}{{}Ef}{Cdc{}}0000000000000{CdBn}000000{{fElb}{{Ab{Bn}}}}{{f{n{b}}b}{{Ab{Bn}}}}{{ff}Ad}{{hh}Ad}{{EdEd}Ad}{{EfEf}Ad}{{ce}Ad{}{}}00000000000{{EbCf}Ch}{{fCf}Ch}0{{hCf}Ch}{{EdCf}Ch}{{EfCf}Ch}{cc{}}000000{{EhE`h{n{l}}}{{Ab{Eb}}}}00{{EhEbhj{n{l}}Ef}{{Ab{En}}}}{{ff{Dj{E`}}hj{n{l}}}{{Ab{F`}}}}{{Eh{Dj{E`}}hj{n{Fb}}AdAdEf}{{Ff{F`{Fd{E`}}{Fd{E`}}}}}}{{fc}BnCj}{{hc}BnCj}{{Edc}BnCj}{{Efc}BnCj}{{}Cd}000000{ce{}{}}0000000{{f{n{b}}}Ad}{fAd}0{fE`}1{{fE`}f}12{E`f}{{fff}Eh}{En{{n{c}}}{}}`{bf}`{{ff}{{n{Ej}}}}{{EhE`{n{l}}}{{Ab{E`}}}}00::::::{cBh{}}{{fE`{n{l}}ceg}{{Ab{E`}}}{{Fj{E`}{{Fh{E`}}}}}{{Fj{E`}{{Fh{d}}}}}{{Fj{d}{{Fh{E`}}}}}}{{fE`{n{l}}}{{Ab{E`}}}}33330303{c{{Cl{e}}}{}{}}0000000000000{cCn{}}000000{Ef{{n{Fl}}}}=>``{FnG`}{Gb{{Ab{Gd}}}}{Gb{{Ab{Gf}}}}0{Gb{{Ab{Gh}}}}22112{Gb{{Ab{Gj}}}}322{{Gbb}{{Ab{G`}}}}0334","D":"Gb","p":[[1,"str"],[5,"NaiveDateTime",306],[5,"Duration",85],[6,"ClosedWindow",85],[6,"TimeUnit",307],[6,"Tz",308],[6,"Option",309],[8,"DatetimeChunked",310],[8,"PolarsResult",311],[1,"bool"],[10,"PolarsMonthEnd",0],[10,"PolarsMonthStart",0],[10,"PolarsRound",0],[8,"StringChunked",312],[5,"NaiveTime",313],[8,"TimeChunked",314],[10,"PolarsTruncate",0],[10,"PolarsUpsample",0],[5,"DataFrame",315],[5,"String",316],[10,"IntoVec",317],[5,"Private",318],[1,"unit"],[10,"AsString",28],[6,"Pattern",28],[1,"usize"],[5,"Formatter",319],[8,"Result",319],[10,"Hasher",320],[6,"Result",321],[5,"TypeId",322],[5,"DatetimeInfer",60],[10,"Clone",323],[10,"PolarsNumericType",312],[10,"StrpTimeParser",60],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",60],[1,"i64"],[5,"Bounds",85],[6,"Label",85],[6,"StartBy",85],[5,"Window",85],[6,"Ordering",324],[6,"DataType",325],[5,"BoundsIter",85],[8,"GroupsSlice",326],[8,"TimeZone",325],[5,"Vec",327],[1,"tuple"],[17,"Output"],[10,"Fn",328],[1,"u32"],[10,"AsSeries",285],[5,"Series",329],[10,"TemporalMethods",285],[8,"Int32Chunked",312],[8,"Int8Chunked",312],[8,"BooleanChunked",312],[8,"Int16Chunked",312]],"b":[[189,"impl-Debug-for-Duration"],[190,"impl-Display-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPkAFQAAAAsADwAHABgAAAAbABcANAACADgAEABKAAEATQATAGIACQBtAFUAygAAAMwAAQDQAAoA4gABAOYAAgDsAAIA8AABAPUADQAEAQAABgEaACUBAAA="}],\
["polars_utils",{"t":"EECCCCCCCCCCCCCQCCCCCCCQCCCECCCCCCCQQCCRKMMRKIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHFNNNNNNNNNNNNNNHHKNNNNNKMHHHHFKNNNNNNMNNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHKKKRKRNNNNMMMHKNNNNMMTRKMMHHFNNNNNNNNNNNNNNNNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","float","floor_divmod","fmt","format_smartstring","functions","hashing","idx_vec","index","io","iter","macros","matches_any_order","mem","min_max","nulls","open_file","ord","partitioned","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","new","new","new","new","new","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity","Arena","Node","add","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","compare","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","get","get_mut","get_node","get_unchecked","hash","init","init","into","into","is_empty","len","new","partial_cmp","pop","replace","replace_with","swap","take","to_owned","to_owned","try_from","try_from","try_into","try_into","try_replace_with","type_id","type_id","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","find_first_ge_index","find_first_gt_index","FastCachedFunc","FastFixedCache","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eval","from","from","get","get_mut","get_or_insert_with","init","init","insert","into","into","new","new","to_owned","try_from","try_from","try_get_or_insert_with","try_into","try_into","type_id","type_id","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","from","from","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","prefix_xorsum","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","FloorDivMod","wrapping_floor_div_mod","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","deref","deref_mut","dirty_hash","dirty_hash","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clone","clone_into","default","deref","deref","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extend","fmt","from","from","from","from_fallible_iter","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","borrow","borrow_mut","borrow_mut","check_bounds","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extract","fmt","fmt","from","from","from","get","get_unchecked","idx","init","init","inner","inner_mut","into","into","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","null","null_count","store","to_idx","to_opt","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","open_file","EnumerateIdxTrait","FallibleIterator","FromFallibleIterator","IntoIterCopied","IntoIteratorCopied","OwnedItem","enumerate_idx","enumerate_idx","enumerate_u32","enumerate_u32","from_fallible_iter","get_result","into_iter","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deref_unchecked","drop","fmt","from","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","equivalent","equivalent","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[39,"polars_utils::abs_diff"],[43,"polars_utils::aliases"],[59,"polars_utils::arena"],[116,"polars_utils::atomic"],[136,"polars_utils::binary_search"],[138,"polars_utils::cache"],[174,"polars_utils::cell"],[194,"polars_utils::clmul"],[198,"polars_utils::contention_pool"],[213,"polars_utils::cpuid"],[215,"polars_utils::float"],[221,"polars_utils::floor_divmod"],[223,"polars_utils::functions"],[227,"polars_utils::hashing"],[259,"polars_utils::idx_vec"],[303,"polars_utils::index"],[365,"polars_utils::io"],[366,"polars_utils::iter"],[379,"polars_utils::mem"],[380,"polars_utils::min_max"],[387,"polars_utils::nulls"],[392,"polars_utils::ord"],[394,"polars_utils::partitioned"],[413,"polars_utils::slice"],[427,"polars_utils::sort"],[429,"polars_utils::sync"],[451,"polars_utils::sys"],[465,"polars_utils::total_ord"],[515,"polars_utils::unwrap"],[517,"polars_utils::vec"],[530,"num_traits"],[531,"core::cmp"],[532,"core::marker"],[533,"core::fmt"],[534,"core::marker"],[535,"core::cmp"],[536,"core::hash"],[537,"core::default"],[538,"core::ops::function"],[539,"core::result"],[540,"core::ops::function"],[541,"core::cmp"],[542,"alloc::borrow"],[543,"alloc::sync"],[544,"alloc::vec"],[545,"core::convert"],[546,"core::ops::range"],[547,"core::cmp"],[548,"core::slice::iter"],[549,"core::slice::iter"],[550,"std::fs"],[551,"std::path"],[552,"core::error"],[553,"core::iter::traits::iterator"],[554,"hashbrown::map"],[555,"hashbrown::map"],[556,"core::slice::index"],[557,"num_traits::cast"],[558,"rayon_core::thread_pool"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,2,112,0,0,0,0,0,112,10,11,113,114,112,10,11,113,114,0,0,12,13,12,13,12,12,13,12,13,12,13,13,13,12,13,12,13,12,13,12,13,13,13,13,13,13,12,12,12,12,12,13,13,12,13,12,12,12,12,13,12,12,12,12,12,13,12,13,12,13,12,12,13,12,12,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,0,0,0,34,31,34,31,31,31,31,34,31,34,31,34,31,34,34,31,31,31,31,34,31,31,34,31,34,31,31,34,31,31,34,31,34,31,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,0,0,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,0,0,43,43,43,43,43,0,44,0,0,0,0,0,0,50,50,50,50,50,50,51,50,50,50,50,50,50,50,50,50,0,50,50,50,50,50,50,50,50,50,50,50,50,50,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,0,0,64,0,0,0,0,62,63,62,63,0,62,63,62,63,62,63,62,63,62,63,62,62,62,62,63,62,63,62,62,63,64,64,62,62,63,62,63,62,63,66,63,62,62,66,62,63,67,63,68,62,62,63,62,63,62,63,62,63,0,0,0,0,77,0,77,71,71,71,71,73,57,77,0,0,79,79,79,79,79,79,65,65,0,65,65,0,0,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,0,0,0,0,85,87,87,89,0,90,90,91,91,0,0,0,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,0,0,96,96,96,96,96,96,96,96,96,96,96,96,104,0,0,0,0,104,0,99,99,0,0,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,104,99,104,92,100,92,92,101,101,92,92,100,99,99,99,99,0,105,0,0,0,107,0,0,107,107,108,109,110,109,111],"f":"`````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}``````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Ah{c}}c}Aj{}}{ce{}{}}000{{{Ah{c}}}Al{}}{AjAj}{{{Ah{c}}}{{Ah{c}}}An}{{ce}Al{}{}}0{{AjAj}B`}{{ce}B`{}{}}{{}Aj}{{}{{Ah{c}}}{}}<<<<{AbAl}0{{AjAj}Bb}{{ce}Bb{}{}}00{{AjBd}Bf}{cc{}}0{{{Ah{c}}Aj}c{}}0{{{Ah{c}}c}{{Bh{Aj}}}{}}1{{Ajc}AlBj}{{}Ab}0{ce{}{}}0{{{Ah{c}}}Bb{}}{{{Ah{c}}}Ab{}}<{{AjAj}{{Bh{B`}}}}{{{Ah{c}}}{{Bh{c}}}{}}{{{Ah{c}}Ajc}Al{}}{{{Ah{c}}Aje}AlBl{{C`{c}{{Bn{c}}}}}}{{{Ah{c}}AjAj}Al{}}{{{Ah{c}}Aj}cBl}88{c{{Cb{e}}}{}{}}000{{{Ah{c}}Aje}{{Cb{Al`}}}Bl{{Cd{c}{{Bn{{Cb{c`}}}}}}}}{cCf{}}0{Ab{{Ah{c}}}{}}`<<{ChCh}{{ce}Al{}{}}{{}Ch}{Chc{}}{Abc{}}01{AbAl}{cc{}}{{}Ab}{ce{}{}}{ChAl}{AbCh}2>><{{{Cj{c}}c}AbCl}0``3333{{{Cn{ce}}}{{Cn{ce}}}AnAn};{{}{{Cn{ce}}}{D`Db}{}}999988{{{Dd{ceg}}cBb}e{D`DbAn}j{{Cd{c}{{Bn{e}}}}}}88{{{Cn{eg}}c}{{Bh{g}}}{D`DbDf}{{Dh{c}}D`Db}{}}0{{{Cn{eg}}ci}g{D`Db{Dl{}{{Dj{}}}}Df}{{Dh{c}}D`Db}{}{{C`{e}{{Bn{g}}}}}}99{{{Cn{ce}}ce}e{D`Db}{}}99{{gAb}{{Dd{ceg}}}{D`DbAn}j{{Cd{c}{{Bn{e}}}}}}{Ab{{Cn{ce}}}{D`Db}{}};{c{{Cb{e}}}{}{}}0{{{Cn{eg}}ck}{{Cb{gi}}}{D`Db{Dl{}{{Dj{}}}}Df}{{Dh{c}}D`Db}{}{}{{C`{e}{{Bn{{Cb{gi}}}}}}}}11{cCf{}}0`>>{{}{{Dn{c}}}Bl}{Abc{}}0{AbAl}{cc{}}{E`c{}}{c{{Dn{c}}}{}}{{{Dn{c}}}{}Df}{{{Dn{c}}}cDf}{{}Ab}{ce{}{}}{{{Dn{c}}}c{}}5{{}}>><{{EbEb}Eb}0{EbEb}0`44<<;:{{{Ed{c}}}cBl}65{Ab{{Ed{c}}}Bl}{{{Ed{c}}c}AlBl}{c{{Cb{e}}}{}{}}0{cCf{}}{{}Bb}0`00{EfBb}10`{{EhEh}{{Ej{EhEh}}}}{{{El{c}}e}{{El{c}}}An{{Cd{c}{{Bn{c}}}}}}{{{Cj{e}}{Bh{Ab}}}{{En{c}}}An{{F`{{Cj{c}}}}}}{{AbAb{Fb{Ab}}}{{Fb{Ab}}}}{{{El{c}}g}{{Cb{{El{c}}e}}}An{}{{Cd{c}{{Bn{{Cb{ce}}}}}}}}``{ce{}{}}0{FdFd}{{ce}Al{}{}}{Abc{}}0{FfEb}{FdEb}{AbAl}{{FdFd}Bb}{{ce}Bb{}{}}00{{FdBd}Bf}{cc{}}{{Fdc}AlBj}{{EbAb}Ab}{{}Ab}={FdBb}{{{Bh{{Cj{Fh}}}}Eb}Fd}??{Fdc{}}95{c{{Cb{e}}}{}{}}0{cCf{}}2``{{{Fj{c}}}{{Cj{c}}}{}}000{ce{}{}}0{{{Fj{c}}}Ab{}}{{{Fj{c}}}{{Fj{c}}}{}}{{ce}Al{}{}}{{}{{Fj{c}}}{}}{{{Fj{c}}}e{}{}}{Abc{}}0{{{Fj{c}}}Al{}}{AbAl}{{{Fj{c}}{Fj{c}}}BbFl}{{ce}Bb{}{}}00{{{Fj{c}}e}Al{}{{G`{}{{Fn{c}}}}}}{{{Fj{c}}Bd}Bfl}{cc{}}{{{Cj{c}}}{{Fj{c}}}An}{{{En{c}}}{{Fj{c}}}{}}{g{{Cb{ic}}}{}{}{{Gb{c}{{Fn{e}}}}}{}}{e{{Fj{c}}}{}{{G`{}{{Fn{c}}}}}}{{}Ab}{ce{}{}}{{{Fj{c}}}Bb{}}{{{Fj{c}}}{{Gd{c}}}{}}{{{Fj{c}}}{{Gf{c}}}{}}{{{Fj{c}}}Ab{}}{{}{{Fj{c}}}{}}{{{Fj{c}}}{{Bh{c}}}{}}{{{Fj{c}}c}Al{}}0{{{Fj{c}}Ab}Al{}}8{c{{Cb{e}}}{}{}}0{cCf{}}{Ab{{Fj{c}}}{}}`````````;;;;{{{Cj{Gh}}Gh}{{Gj{Al}}}}{GlGl}{GnGn}{{ce}Al{}{}}0{Abc{}}000{AbAl}0{{GlGl}Bb}{{ce}Bb{}{}}00{Gn{{Ej{GhGh}}}}{{GlBd}Bf}{{GnBd}Bf}{cc{}}{GhGl}1{{{H`{}{{Fn{c}}}}Ab}cHb}0{GlGh}{{}Ab}0`{GnEb}{ce{}{}}0{HdBb}{GnBb}{GlBb}{cBb{}}{HdAb}{{}Gl}{{}Gn}{HfAb}{{GhGh}Gn}{{HhEb}Gh}{Gl{{Bh{Gh}}}};;{c{{Cb{e}}}{}{}}000{cCf{}}0{c{{Gj{Hj}}}{{F`{Hl}}}}``````{Hn{{`{HnGh}}}}0{Hn{{`{HnI`}}}}0{g{{Cb{Ibc}}}Id{}{{Gb{c}{{Fn{e}}}}}}{Gb{{Cb{Alc}}}Id}{{{Ij{}{{If{c}}{Ih{e}}}}}e{}{{Il{}{{Fn{c}}}}}}{{{Cj{c}}}{{Cj{c}}}j}`{{InIn}In}000{{InIn}Bb}0```{{{Hb{}{{J`{c}}}}}Bb{}}{{{Hb{}{{J`{c}}}}}c{}}{{cc}B`{hEf}}0`{ce{}{}}0{Abc{}}0{AbAl}{cc{}}{{}Ab}{{{Jb{ceg}}}{{Cj{{Jd{ceg}}}}}{}{}{}}{{{Jb{ceg}}}{{En{{Jd{ceg}}}}}{}{}{}}6{{{En{{Jd{ceg}}}}}{{Jb{ceg}}}{}{}{}}{{{Jb{ceg}}Eb}{{Jf{ceg}}}{}{}{}}{{{Jb{ceg}}Eb}{{Ej{{Jf{ceg}}Ab}}}{}{}{}}{{{Jb{ceg}}Eb}{{Ej{{Jh{ceg}}Ab}}}{}{}{}}{{{Jb{ceg}}Eb}{{Jh{ceg}}}{}{}{}}{c{{Cb{e}}}{}{}}0{cCf{}}`````{Jj{{Cj{{Jl{c}}}}}{}}{{Jne}{}{}{{K`{{Cj{c}}}}}}0{KbBb}{{{Cj{Fh}}}Eb}{Kd{{Bh{c}}}{}}0{{Kf{Fb{Ab}}}Kf}0{{e{En{Fh}}Ab}{{Cj{g}}}{Khj}{{G`{}{{Fn{c}}}}}{Kjj}}{{Kl{Cj{{Ej{GhGh}}}}{En{Gh}}}Al}`{ce{}{}}0{{{Kn{c}}}{{Kn{c}}}An}{{ce}Al{}{}}{Abc{}}0{{{Kn{c}}}c{}}{AbAl}{{{Kn{c}}Bd}Bfl}{cc{}}{{}{{Kn{c}}}{}}{{{Kn{c}}}{}{}}{{}Ab}:{{{Kn{c}}}Bb{}}33;{c{{Cb{e}}}{}{}}0{cCf{}}``==::8{L`Eb}74>221```````>>{LbLb}{LdLd}{{{Lf{c}}}{{Lf{c}}}An}?{{{Lf{c}}{Lf{c}}}B`Kh}{{ce}B`{}{}}{Abc{}}0{{{Lf{c}}}EbFf}{AbAl}{{{Lf{c}}{Lf{c}}}BbLh}{{ce}Bb{}{}}00{cc{}}{{{Lf{c}}{Lf{c}}}BbKh}0{{{Lf{c}}e}AlLjBj}{{}Ab}{ce{}{}}{{{Lf{c}}}BbHb}447{{{Lf{c}}{Lf{c}}}{{Bh{B`}}}Kh}22{{{M`{}{{Ll{c}}{Ln{e}}}}}c{}{}}{{KhKh}B`}{{LhLh}Bb}{{KhKh}Bb}0{{Ljc}AlBj}{{{Cj{Lj}}c}AlBj}223{c{{Cb{e}}}{}{}}0{cCf{}}{{{Lf{c}}}eHb{}}`{Mbc{}}``````{{{Mf{}{{Md{c}}}}g}{{En{e}}}{}{}{{Cd{c}{{Bn{e}}}}}}0{{MhAbc}Alj}{Mj{{Ej{AbAb}}}}{{Mlc}Al{}}1{{AbLd}Mn}","D":"Id","p":[[17,"Abs"],[10,"AbsDiff",39],[10,"Num",530],[10,"PartialOrd",531],[10,"Copy",532],[10,"Debug",533],[10,"Send",532],[10,"Sync",532],[1,"usize"],[8,"PlHashMap",43],[8,"PlHashSet",43],[5,"Arena",59],[5,"Node",59],[1,"unit"],[10,"Clone",534],[6,"Ordering",531],[1,"bool"],[5,"Formatter",533],[8,"Result",533],[6,"Option",535],[10,"Hasher",536],[10,"Default",537],[17,"Output"],[10,"FnOnce",538],[6,"Result",539],[10,"FnMut",538],[5,"TypeId",540],[5,"SyncCounter",116],[1,"slice"],[10,"Ord",531],[5,"FastFixedCache",138],[10,"Hash",536],[10,"Eq",531],[5,"FastCachedFunc",138],[10,"Sized",532],[10,"Borrow",541],[17,"Owned"],[10,"ToOwned",542],[5,"SyncUnsafeCell",174],[1,"never"],[1,"u64"],[5,"LowContentionPool",198],[10,"IsFloat",215],[10,"FloorDivMod",221],[1,"tuple"],[5,"Arc",543],[5,"Vec",544],[10,"AsRef",545],[5,"Range",546],[5,"BytesHash",227],[10,"DirtyHash",227],[1,"u8"],[5,"UnitVec",259],[10,"PartialEq",531],[17,"Item"],[10,"IntoIterator",547],[10,"FallibleIterator",366],[5,"Iter",548],[5,"IterMut",548],[8,"IdxSize",303],[8,"PolarsResult",549],[5,"NullableIdxSize",303],[5,"ChunkId",303],[10,"Indexable",303],[10,"IsNull",387],[10,"Bounded",303],[10,"NullCount",303],[10,"ToIdx",303],[5,"File",550],[5,"Path",551],[10,"EnumerateIdxTrait",366],[1,"u32"],[10,"FromFallibleIterator",366],[10,"Error",552],[17,"OwnedItem"],[17,"IntoIterCopied"],[10,"IntoIteratorCopied",366],[10,"Iterator",553],[10,"MinMax",380],[17,"Inner"],[5,"PartitionedHashMap",394],[5,"HashMap",554],[5,"RawEntryBuilder",554],[5,"RawEntryBuilderMut",554],[10,"Slice2Uninit",413],[20,"MaybeUninit",555],[10,"GetSaferUnchecked",413],[10,"SliceIndex",556],[10,"SortedSlice",413],[10,"Extrema",413],[10,"SliceAble",413],[10,"TotalOrd",465],[10,"FromPrimitive",557],[5,"ThreadPool",558],[5,"SyncPtr",429],[5,"MemInfo",451],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",465],[10,"TotalEq",465],[10,"TotalHash",465],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",465],[10,"UnwrapUncheckedRelease",515],[17,"ItemIn"],[10,"ConvertVec",517],[10,"ResizeFaster",517],[10,"IntoRawParts",517],[10,"PushUnchecked",517],[10,"CapacityByFactor",517],[10,"InitHashMaps",43],[8,"PlIndexMap",43],[8,"PlIndexSet",43]],"b":[[283,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"],[284,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAMgBNQAAAAgACgBMAFkAAgBdAAIAYgASAHYACQCBAAAAhAAEAIwADgCdAAUApQAJALAAAQCzAAIAtwAAALsAAADAAAwAzgABANEABgDZAAoA5QAOAPUAAgD5AAsABgEUABwBBAAiAQYAKgEkAFABAABSAQAAVAEEAFsBFgBzAQAAdQEGAH0BCwCLAQUAkgECAJYBDQCmAQQArAEAAK8BBQC2AQEAugEBAL0BAAC/AQUAxgEEAM0BAADPAQMA1wEDAN0BCwDqAQMA7wEVAAYCBAAMAgMAEQIBAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
